/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
.c-media-gallery .splide {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}
.c-media-gallery .splide .splide__track {
  -webkit-box-ordinal-group: 2;
          order: 1;
}
.c-media-gallery .splide .splide__slide {
  position: relative;
}
.c-media-gallery .splide .splide__slide figure span {
  display: block;
  position: relative;
  background: #111;
}
.c-media-gallery .splide .splide__slide figure span::after {
  -webkit-transition: opacity 1300ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: opacity 1300ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: opacity 1300ms cubic-bezier(0.4, 0, 0.2, 1);
  content: "";
  position: absolute;
  z-index: 1;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: -webkit-gradient(linear, left top, left bottom, color-stop(63.54%, rgba(0, 110, 240, 0)), to(rgba(0, 110, 240, 0.9)));
  background: -o-linear-gradient(top, rgba(0, 110, 240, 0) 63.54%, rgba(0, 110, 240, 0.9) 100%);
  background: linear-gradient(180deg, rgba(0, 110, 240, 0) 63.54%, rgba(0, 110, 240, 0.9) 100%);
}
.c-media-gallery .splide .splide__slide figure img {
  width: 100%;
  display: block;
}
.c-media-gallery .splide .splide__slide figure figcaption {
  font-size: 0.875rem;
  line-height: 157%;
  background: #fff;
  width: 100%;
  margin: 0;
  padding: 1.25rem 0.9375rem;
  z-index: 2;
}
@media (min-width: 768px) {
  .c-media-gallery .splide .splide__slide figure figcaption {
    padding: 2.5rem 0;
  }
}
@media (min-width: 1024px) {
  .c-media-gallery .splide .splide__slide figure figcaption {
    width: auto;
    font-size: 1.125rem;
    line-height: 156%;
    position: absolute;
    bottom: -1px;
    right: -1px;
    padding: 0.75rem 1.25rem;
    max-width: 25rem;
  }
}
.c-media-gallery .splide .splide__arrows {
  -webkit-box-ordinal-group: 3;
          order: 2;
}
.c-media-gallery .splide__arrows {
  display: -webkit-box;
  display: flex;
  -webkit-column-gap: 1.25rem;
     -moz-column-gap: 1.25rem;
          column-gap: 1.25rem;
}
@media (min-width: 768px) {
  .c-media-gallery .splide__arrows {
    display: -webkit-box;
    display: flex;
    -webkit-box-pack: end;
            justify-content: flex-end;
    margin: 0 auto;
    width: calc(100% - 32px);
    margin-right: 2rem;
  }
}
@media (min-width: 1024px) {
  .c-media-gallery .splide__arrows {
    margin-top: 2.5rem;
  }
}
@media (min-width: 1400px) {
  .c-media-gallery .splide__arrows {
    margin-top: 3.125rem;
  }
}
.c-media-gallery .splide__arrows .splide__arrow {
  border-radius: 5000%;
  overflow: hidden;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
          flex-direction: row;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  padding: 0;
  background: #fff;
  border: none;
  cursor: pointer;
  width: 4.25rem;
  height: 4.25rem;
  -webkit-transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
}
.c-media-gallery .splide__arrows .splide__arrow:hover, .c-media-gallery .splide__arrows .splide__arrow:focus {
  -webkit-transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  background: var(--color-surf--cloud);
}
.c-media-gallery .splide__arrows .splide__arrow:hover::after, .c-media-gallery .splide__arrows .splide__arrow:focus::after {
  -webkit-transition: background-size 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: background-size 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  transition: background-size 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  background-size: 100% 100%;
  background-position-x: left;
}
.c-media-gallery .splide__arrows .splide__arrow:hover svg, .c-media-gallery .splide__arrows .splide__arrow:focus svg {
  -webkit-transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
}
.c-media-gallery .splide__arrows .splide__arrow svg {
  -webkit-transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
}
.c-media-gallery .splide__arrows .splide__arrow svg path {
  -webkit-transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
}
.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev {
  margin: 0 0 0 auto;
}
@media (min-width: 768px) {
  .c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev {
    margin: 0;
  }
}
.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:hover, .c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:focus {
  -webkit-transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
}
.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:hover::after, .c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:focus::after {
  -webkit-transition: background-size 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: background-size 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  transition: background-size 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  background-size: 100% 100%;
  background-position-x: right;
}
.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:hover svg, .c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:focus svg {
  -webkit-transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
}
.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:hover svg path, .c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:focus svg path {
  background: #550ec7;
}
.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--next {
  margin: 0 auto 0 0;
}
@media (min-width: 768px) {
  .c-media-gallery .splide__arrows .splide__arrow.splide__arrow--next {
    margin: 0;
  }
}

.c-media-gallery .splide__arrow--prev {
  -webkit-transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 1s cubic-bezier(0.4, 0, 0.2, 1);
  transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 1s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1), transform 1s cubic-bezier(0.4, 0, 0.2, 1);
  transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1), transform 1s cubic-bezier(0.4, 0, 0.2, 1);
  transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1), transform 1s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 1s cubic-bezier(0.4, 0, 0.2, 1);
}
.c-media-gallery .splide__arrow--next {
  -webkit-transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 1s cubic-bezier(0.4, 0, 0.2, 1);
  transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 1s cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1), transform 1s cubic-bezier(0.4, 0, 0.2, 1);
  transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1), transform 1s cubic-bezier(0.4, 0, 0.2, 1);
  transition: opacity 1s cubic-bezier(0.4, 0, 0.2, 1), transform 1s cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 1s cubic-bezier(0.4, 0, 0.2, 1);
}
.c-media-gallery .splide__arrow--next.visible {
  -webkit-transform: translateX(0);
      -ms-transform: translateX(0);
          transform: translateX(0);
  -webkit-transition-delay: 250ms;
       -o-transition-delay: 250ms;
          transition-delay: 250ms;
}

.splide__slide .c-media {
  margin: 0 !important;
  max-width: 100% !important;
  width: 100% !important;
}