<?php

/**
 * @file
 * Provides an user request entity type.
 */

use Drupal\Core\Render\Element;
use Drupal\surf_core\Entity\UserRequest;
use Drupal\user\UserInterface;

/**
 * Implements hook_theme().
 */
function surf_core_theme() {
  return [
    'user_request' => [
      'render element' => 'elements',
    ],
  ];
}

/**
 * Prepares variables for user request templates.
 *
 * Default template: user-request.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An associative array containing the user request information and any
 *     fields attached to the entity.
 *   - attributes: HTML attributes for the containing element.
 */
function template_preprocess_user_request(array &$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Implements hook_user_cancel().
 */
function surf_core_user_cancel($edit, UserInterface $account, $method) {
  switch ($method) {
    case 'user_cancel_reassign':
      // Anonymize user requests.
      $storage = \Drupal::entityTypeManager()->getStorage('user_request');
      $user_request_ids = $storage->getQuery()
        ->condition('uid', $account->id())
        ->execute();
      foreach ($storage->loadMultiple($user_request_ids) as $user_request) {
        $user_request->setOwnerId(0);
        $user_request->save();
      }
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_predelete() for user entities.
 */
function surf_core_user_predelete(UserInterface $account) {
  // Delete user requests.
  $storage = \Drupal::entityTypeManager()->getStorage('user_request');
  $user_request_ids = $storage->getQuery()
    ->condition('uid', $account->id())
    ->execute();
  $user_requests = $storage->loadMultiple($user_request_ids);
  $storage->delete($user_requests);
}

/**
 * Alter the information provided in \Drupal\webform\Annotation\WebformHandler.
 *
 * @param array $handlers
 *   The array of webform handlers, keyed on the machine-readable handler name.
 */
function surf_core_webform_handler_info_alter(array &$handlers) {
  if (isset($handlers['user_registration'])) {
    $handlers['user_registration']['class'] =  \Drupal\surf_core\Plugin\WebformHandler\UserRegistrationWebformHandler::class;
  }
}
