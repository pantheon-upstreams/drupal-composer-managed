<?php

namespace Drupal\surf_curriculum\Entity\Node;

use Drupal\Core\Link;
use Drupal\Core\Url;
use Drupal\download_request\Entity\DownloadItem;
use Drupal\download_request\Entity\DownloadRequestItem;
use Drupal\node\Entity\Node;

/**
 * A bundle class for node entities.
 */
class CurriculumModule extends Node {

  public function save() {
    $return = parent::save(); // TODO: Change the autogenerated stub
    $this->updateDownloadItem();
    return $return;
  }

  public function getWebformUrl() {
    return Url::fromRoute('entity.webform.canonical', [
      'webform' => 'curriculum_reservation',
      'ref_curriculum_module' => $this->id()
    ]);
  }

  public function getWebformLink($text = 'Request link') {
    return Link::fromTextAndUrl($text, $this->getWebformUrl());
  }

  public function createDownloadRequestItem() {
    $request_item = DownloadRequestItem::create([
      'download_item' => $this->ensureDownloadItem(),
    ]);
    return $request_item;
  }

  public function getDownloadItem() {
    $download_item_storage = $this->entityTypeManager()->getStorage('download_item');
    $result = $download_item_storage->loadByProperties(['field_curriculum_module' => $this->id()]);
    return !empty($result) ? reset($result) : NULL;
  }

  public function createDownloadItem() {
    return DownloadItem::create([
      'type' => 'curriculum_module_resources',
      'field_curriculum_module' => $this->id()
    ]);
  }

  public function ensureDownloadItem() {
    return $this->getDownloadItem() ?? $this->createDownloadItem();
  }

  public function updateDownloadItem() {
    $download_item = $this->ensureDownloadItem();
    $download_item->set('name', $this->label());
    $download_item->save();
  }

}
