<?php

use Drupal\surf_curriculum\Entity\DownloadRequest\CurriculumModule as CurriculumModuleDownloadRequest;
use Drupal\surf_curriculum\Entity\Node\CurriculumModule as CurriculumModuleNode;
/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function surf_curriculum_download_request_presave(\Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->bundle() !== 'curriculum_module') {
    return;
  }
  if ($entity->field_dates->isEmpty() && !$entity->get('field_webform_submission_id')->isEmpty()) {
    $submission = \Drupal\webform\Entity\WebformSubmission::load($entity->field_webform_submission_id->value);
    $data = $submission->getData();
    if ($entity->field_dates->isEmpty()) {
      $value = [];
      if (!empty($data['date_start'])) {
        $value['value'] = $data['date_start'];
      }
      if (!empty($data['date_end'])) {
        $value['end_value'] = $data['date_end'];
      }
      $entity->field_dates->setValue($value);
    }
  }
  if ($entity->get('field_ref_curriculum_module')->target_id && !$entity->get('request_items')->target_id) {
    $node = $entity->get('field_ref_curriculum_module')->entity;
    $request_item = $node->createDownloadRequestItem();
    $request_item->save();
    $entity->get('request_items')->appendItem($request_item);
  }
}
/**
 * Implements hook_entity_bundle_info_alter().
 */
function surf_curriculum_entity_bundle_info_alter(array &$bundles): void {
  if (isset($bundles['node']['curriculum_module'])) {
    $bundles['node']['curriculum_module']['class'] = CurriculumModuleNode::class;
  }

  if (isset($bundles['download_request']['curriculum_module'])) {
    $bundles['download_request']['curriculum_module']['class'] = CurriculumModuleDownloadRequest::class;
  }
}

/**
 * Implements hook_entity_extra_field_info().
 */
function surf_curriculum_entity_extra_field_info() {
  $extra = [];

  $extra['download_request_item']['download_request_item']['display']['status_description'] = [
    'label' => t('Status with date info'),
    'description' => t('The status of the item with additional info based on the value of the status'),
    'visible' => TRUE,
    'weight' => 15,
  ];

  $extra['node']['curriculum_module']['display']['reservation_links'] = [
    'label' => t('Link to reserve or view on dashboard'),
    'description' => t('Link to webform with prepopulated nid or view reservation on dashboard.'),
    'visible' => TRUE,
    'weight' => 25,
  ];

  $extra['node']['curriculum_module']['display']['reservation_status'] = [
    'label' => t('Reservation status'),
    'description' => t('Status of the download request.'),
    'visible' => TRUE,
    'weight' => 26,
  ];

  return $extra;
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function surf_curriculum_download_request_item_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  if ($display->getComponent('status_description')) {
    $download_request = $entity->getParentEntity();

    $state_item = $entity->get('state')->first();
    $state_id = $state_item->getId();
    $state_label = $state_item->getLabel();

    $status_description = '@label';
    $status_date = NULL;

    if ($state_id == 'delivered') {
      $status_description = '@label. Return by @date';
      $status_date = $download_request->field_date_returned->date;
    }
    if ($state_id == 'returned') {
      $status_date = $download_request->field_dates->end_date;
      $current_date = new \Drupal\surf_core\DrupalDateTime();
      $text = $current_date->isAfterDate($status_date) ? 'Expired' : 'Expires';
      $status_description = $text . ' @date';
    }

    $build['status_description'] = [
      '#type' => 'html_tag',
      '#tag' => 'p',
      '#value' => t($status_description, [
        '@label' => $state_label,
        '@date' => $status_date ? $status_date->format('F j, Y') : '',
      ]),
      '#attributes' => [
        'class' => 'status-description',
      ],
    ];
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function surf_curriculum_node_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
  if ($display->getComponent('reservation_links')) {
    $build['reservation_links'] = $entity->getUserReservationLinks(\Drupal::currentUser());
  }

  if ($display->getComponent('reservation_status')) {
    /** @var \Drupal\surf_curriculum\Entity\DownloadRequest\CurriculumModule $download_request */
    $download_request = $entity->getActiveDownloadRequest(\Drupal::currentUser());
    $build['reservation_status'] = $download_request->getStatusDescription();
  }
}
