/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
.c-link-button {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  padding: 0.375rem 0.75rem;
  line-height: 140%;
  letter-spacing: 0.09375rem;
  --space-inset-x: 0.75rem;
  --space-inset-y: 0.375rem;
  color: var(--color-link);
  display: -webkit-inline-box;
  display: inline-flex;
  background-color: var(--color-background);
  text-decoration: none;
  text-transform: initial;
  position: relative;
  -webkit-box-align: center;
          align-items: center;
  -webkit-transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);
}
.c-link-button:hover, .c-link-button:focus, .c-link-button:active {
  color: var(--color-link-hover);
  background-color: var(--color-background-hover);
  text-decoration-line: underline;
  text-decoration-thickness: 2px;
  -webkit-transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 500ms cubic-bezier(0.4, 0, 0.2, 1);
}
@media (min-width: 1024px) {
  .c-link-button {
    font-style: normal;
    text-transform: uppercase;
    font-family: var(--font-family-condensed);
    font-size: var(--font-size-label-medium);
    font-weight: var(--font-weight-bold);
    letter-spacing: var(--font-letter-spacing-wide);
    line-height: var(--font-line-height-label-medium);
    padding: 0.5rem 1.125rem;
    letter-spacing: 0.1125rem;
    --space-inset-x: 1.125rem;
    --space-inset-y: 0.5rem;
    padding: var(--space-inset-y) var(--space-inset-x);
  }
}
.c-link-button.c-link-button--medium {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-small);
  line-height: var(--font-line-height-body-small);
  font-weight: var(--font-weight-bold);
  padding: 0.375rem 0.75rem;
}

.link-button--uppercase {
  text-transform: uppercase;
}

.link-button--gradient {
  z-index: 1;
}
.link-button--gradient::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: -webkit-gradient(linear, left top, right top, from(transparent), to(#00492c));
  background: -o-linear-gradient(left, transparent, #00492c);
  background: linear-gradient(90deg, transparent, #00492c);
  z-index: -1;
}

.link-button--underline {
  padding: 0 0 8px 0;
  border-bottom: solid 2px var(--color-link-hover);
}
@media (min-width: 1024px) {
  .link-button--underline {
    padding: 8px 5px 8px 0;
  }
}

.link-button--underline:hover,
.link-button--underline:focus {
  border-bottom-color: transparent;
  text-decoration: none;
}

.link-button__icon {
  display: -webkit-inline-box;
  display: inline-flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  margin-left: 0.625rem;
}

.link-button__icon-left {
  display: -webkit-inline-box;
  display: inline-flex;
  -webkit-box-pack: center;
          justify-content: center;
  -webkit-box-align: center;
          align-items: center;
  margin-right: 0.375rem;
}

.c-link-button.link-button--underline.c-link-button--subscribe, .c-link-button.link-button--underline.c-link-button--video {
  padding-left: 0;
  padding-right: 0;
  border-bottom-color: var(--color-surf-forest);
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
}
.c-link-button.link-button--underline.c-link-button--subscribe .link-button__icon, .c-link-button.link-button--underline.c-link-button--video .link-button__icon {
  margin-left: 0.375rem;
}