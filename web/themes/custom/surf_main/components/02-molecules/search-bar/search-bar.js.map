{"version":3,"file":"./components/02-molecules/search-bar/search-bar.js","mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAIC,OAAO,IAAK;EAC5B;EACA,MAAMC,WAAW,GAAG,oBAAoB;EACxC,MAAMC,WAAW,GAAG,sBAAsB;EAC1C,IAAIC,OAAO;EAEX,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBJ,OAAO,CAACK,SAAS,CAACC,MAAM,CAACJ,WAAW,CAAC;IACrCF,OAAO,CAACK,SAAS,CAACE,GAAG,CAACN,WAAW,CAAC;IAClCE,OAAO,CAACK,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC;EAC/C,CAAC;EAED,MAAMC,WAAW,GAAIC,OAAO,IAAK;IAC/BA,OAAO,CAACL,SAAS,CAACE,GAAG,CAACL,WAAW,CAAC;IAClCQ,OAAO,CAACL,SAAS,CAACC,MAAM,CAACL,WAAW,CAAC;IACrCE,OAAO,CAACK,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;EAChD,CAAC;EAED,MAAMG,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIZ,OAAO,CAACK,SAAS,CAACQ,QAAQ,CAACX,WAAW,CAAC,EAAE;MAC3CE,WAAW,CAACJ,OAAO,CAAC;IACtB,CAAC,MAAM;MACLS,WAAW,CAACT,OAAO,CAAC;IACtB;EACF,CAAC;EAED,MAAMc,gBAAgB,GAAIF,KAAK,IAAK;IAClC,IAAIA,KAAK,CAACG,GAAG,KAAK,OAAO,IAAIH,KAAK,CAACG,GAAG,KAAK,GAAG,EAAE;MAC9CH,KAAK,CAACI,cAAc,CAAC,CAAC;MAEtB,IAAIhB,OAAO,CAACK,SAAS,CAACQ,QAAQ,CAACX,WAAW,CAAC,EAAE;QAC3CE,WAAW,CAACJ,OAAO,CAAC;MACtB,CAAC,MAAM;QACLS,WAAW,CAACT,OAAO,CAAC;MACtB;IACF;EACF,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACE,MAAMiB,IAAI,GAAIjB,OAAO,IAAK;IACxBG,OAAO,GAAGH,OAAO,CAACkB,aAAa,CAAC,iBAAiB,CAAC;IAClDf,OAAO,CAACgB,gBAAgB,CAAC,OAAO,EAAER,cAAc,CAAC;IACjDR,OAAO,CAACgB,gBAAgB,CAAC,SAAS,EAAEL,gBAAgB,CAAC;EACvD,CAAC;;EAED;EACAG,IAAI,CAAEjB,OAAO,CAAC;AAChB,CAAC;;AAKD;AACA;AACA;AACA;AACA;;AAEAoB,MAAM,CAACC,SAAS,CAACC,aAAa,GAAG;EAC/BC,MAAMA,CAACC,OAAO,EAAE;IACd,MAAMC,SAAS,GAAGC,IAAI,CAAC,4BAA4B,EAAEF,OAAO,CAACG,gBAAgB,CAAC,eAAe,CAAC,CAAC;IAE/F,IAAIF,SAAS,CAACG,MAAM,KAAK,CAAC,EAAE;MAC1BH,SAAS,CAACI,OAAO,CAAEC,KAAK,IAAK;QAC3B/B,QAAQ,CAAC+B,KAAK,CAAC;MACjB,CAAC,CAAC;IACJ;EACF;AACF,CAAC,C","sources":["webpack://prototype/./components/02-molecules/search-bar/src/search-bar.js"],"sourcesContent":["/**\n * Blocks - Search API\n * Functionality to simply hide and show the search form.\n *\n * - 01 - Hide / Show\n * - 02 - Drupal Attach\n */\n\n\n/*------------------------------------*\\\n  01 - Hide / Show\n  Simply changing a set of classes, attributes and states upon either a click,\n  or keyboard action.\n\\*------------------------------------*/\n\nconst hideShow = (wrapper) => {\n  // Constructor\n  const openedClass = 'm-search-bar--open';\n  const closedClass = 'm-search-bar--closed';\n  let trigger;\n\n  const openedState = () => {\n    wrapper.classList.remove(closedClass);\n    wrapper.classList.add(openedClass);\n    trigger.setAttribute('aria-expanded', 'true');\n  };\n\n  const closedState = (element) => {\n    element.classList.add(closedClass);\n    element.classList.remove(openedClass);\n    trigger.setAttribute('aria-expanded', 'false');\n  };\n\n  const onClickTrigger = (event) => {\n    if (wrapper.classList.contains(closedClass)) {\n      openedState(wrapper);\n    } else {\n      closedState(wrapper);\n    }\n  };\n\n  const onKeydownTrigger = (event) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault();\n\n      if (wrapper.classList.contains(closedClass)) {\n        openedState(wrapper);\n      } else {\n        closedState(wrapper);\n      }\n    }\n  };\n\n  /**\n   * Initialization\n   * Add any and all functionality as a singular program, dynamically setting\n   * element variables, states and event listeners.\n   * @param wrapper - [HTMLObject] Element that contains all elements contained\n   * inside the eventual modal.\n   */\n  const init = (wrapper) => {\n    trigger = wrapper.querySelector('#search-trigger');\n    trigger.addEventListener('click', onClickTrigger);\n    trigger.addEventListener('keydown', onKeydownTrigger);\n  };\n\n  // Final Return\n  init (wrapper);\n};\n\n\n\n\n/*------------------------------------*\\\n  02 - Drupal Attach\n  Attach any previously defined functionality into Drupal behaviors.\n  https://www.drupal.org/docs/drupal-apis/javascript-api/javascript-api-overview\n\\*------------------------------------*/\n\nDrupal.behaviors.surfSearchBar = {\n  attach(context) {\n    const searchBar = once('surf-search-api-form-block', context.querySelectorAll('.m-search-bar'));\n\n    if (searchBar.length !== 0) {\n      searchBar.forEach((block) => {\n        hideShow(block);\n      });\n    }\n  },\n}\n"],"names":["hideShow","wrapper","openedClass","closedClass","trigger","openedState","classList","remove","add","setAttribute","closedState","element","onClickTrigger","event","contains","onKeydownTrigger","key","preventDefault","init","querySelector","addEventListener","Drupal","behaviors","surfSearchBar","attach","context","searchBar","once","querySelectorAll","length","forEach","block"],"sourceRoot":""}