.m-callout{background-color:var(--surf-color-gray-100);max-inline-size:48.75rem}.m-callout__inner-wrapper{align-items:flex-start;display:flex;flex-direction:column;gap:1rem;padding:40px}.m-callout__heading{color:var(--surf-color-black);font-family:var(--surf-font-sans);font-size:2rem;font-weight:var(--surf-fw-bold);line-height:var(var(--surf-lh-label));text-transform:none}.m-callout__text{font-size:1.125rem;line-height:var(--surf-lh-label);margin-block-start:0!important}.m-callout.m-callout--type-blue{background-color:var(--surf-color-blue)}.m-callout.m-callout--type-navy{background-color:var(--surf-color-navy)}.m-callout.m-callout--type-blue .m-callout__heading,.m-callout.m-callout--type-blue .m-callout__text,.m-callout.m-callout--type-navy .m-callout__heading,.m-callout.m-callout--type-navy .m-callout__text{color:var(--surf-color-white)}.m-callout.m-callout--type-white{background-color:var(--surf-color-white)}.m-callout.m-callout--type-white .m-callout__inner-wrapper{margin-block-start:2.5rem;padding:0}.m-callout.m-callout--type-white .m-callout__heading,.m-callout.m-callout--type-white .m-callout__text{color:var(--surf-color-black)}.m-callout.m-callout--type-img{background-image:linear-gradient(99deg,#007ab8,navy);background-position:0 0;background-repeat:no-repeat;background-size:auto;position:relative}.m-callout.m-callout--type-img:before{background-image:url(img/callout-bkg-left.png);background-repeat:no-repeat;background-size:324px;content:"";height:100%;left:0;position:absolute;top:0;width:100%}.m-callout.m-callout--type-img:after{background-image:url(img/callout-bkg-right.png);background-repeat:no-repeat;background-size:220px auto;content:"";height:100%;position:absolute;right:0;top:0;width:220px}.m-callout.m-callout--type-img .m-callout__inner-wrapper{gap:2rem;padding:5rem;padding-inline-end:13.75rem}.m-callout.m-callout--type-img .m-callout__heading,.m-callout.m-callout--type-img .m-callout__text{color:var(--surf-color-white);z-index:2}.m-callout.m-callout--type-img .m-callout__heading{font-family:var(--surf-font-sans-alt);font-size:6rem;font-weight:var(--surf-fw-medium);letter-spacing:.09rem;line-height:1;text-transform:uppercase}.m-callout.m-callout--type-img .m-callout__text{font-family:var(--surf-font-sans);font-size:2rem;font-weight:var(--surf-fw-bold);line-height:1.32}.m-callout.m-callout--type-img .a-button{font-family:var(--surf-font-condensed);font-size:1.375rem;letter-spacing:.1125rem;line-height:1.4;text-transform:uppercase}.m-callout.m-callout--type-embed{background-color:transparent}.m-callout.m-callout--type-embed .m-callout__inner-wrapper{padding:0!important}.m-callout.m-callout--type-embed .m-callout__text{font-size:2rem;font-weight:var(--surf-fw-bold)}.m-callout.m-callout--type-factoid{background-color:var(--surf-color-white)}.m-callout.m-callout--type-factoid .m-callout__inner-wrapper{gap:.25rem;margin-block-start:1rem;padding:0}.m-callout.m-callout--type-factoid .m-callout__heading,.m-callout.m-callout--type-factoid .m-callout__text{color:var(--surf-color-black)}.m-callout.m-callout--type-factoid .m-callout__heading{font-size:1.5rem}.m-callout.m-callout--type-news .m-callout__inner-wrapper{padding:20px}@media (min-width:768px){.m-callout.m-callout--type-news .m-callout__inner-wrapper{padding:40px}}.m-callout.m-callout--type-news .m-callout__text{font-size:var(--surf-fs-16-18-24);line-height:var(--surf-lh-label)}.m-callout.m-callout--type-news .a-button.a-button--underline.a-button--icon-envelope-left,.m-callout.m-callout--type-news .a-button.a-button--underline.a-button--icon-play-left{padding-inline-start:33px}.m-callout.m-callout--type-news .a-button.a-button--icon-envelope-left:before,.m-callout.m-callout--type-news .a-button.a-button--icon-play-left:before{height:24px;width:24px}.lp-builder div>.m-callout,.p-page__me-content>.m-callout{margin-inline:auto}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
