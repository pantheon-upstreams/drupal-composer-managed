//
// Global - Layout
//
// - 01 - Imports
// - 02 - Grid
// - 03 - Widths
// - 04 - Heights
// - 05 - Layers
// - 06 - Container
// - 07 - Layout
//


//------------------------------------
//  01 - Imports
//------------------------------------

@use '../../../00-base/partials/breakpoints' as breakpoints;
//@use '../../../00-base/partials/partials' as *;



//------------------------------------
//  02 - Grid
//------------------------------------

@mixin grid() {
  :root, .ck {
    --surf-grid-gap: 24px;
    @include breakpoints.bp-min(large) {
      --surf-grid-gap: 40px;
    }
  }
}
@include grid();




//------------------------------------
//  03 - Widths
//------------------------------------

:root {
  --surf-width-xxlarge: 1920px;
  --surf-width-full: 1620px;
  --surf-width-default: 1440px;
  --surf-width-xlarge: 1384px;
  --surf-width-large: 1280px;
  --surf-width-medium: 1020px;
  --surf-width-small: 780px;
  --surf-width-xsmall: 640px;
  --surf-width-xxsmall: 480px;
}



//------------------------------------
//  04 - Heights
//------------------------------------

:root {
  --surf-height-region-header-utility: 72px;
  --surf-height-region-header-primary: 72px;
  @include breakpoints.bp-min(large) {
    --surf-height-region-header-primary: 120px;
  }
}




//------------------------------------
//  05 - Layers
//------------------------------------

:root {
  --surf-zindex-super: 100;
  --surf-zindex-top: 50;
  --surf-zindex-over: 10;
  --surf-zindex-default: 1;
  --surf-zindex-under: -1;
  --surf-zindex-bottom: -9999px;
}




//------------------------------------
//  06 - Container
//------------------------------------

.container {
  margin-inline: auto;
  padding-inline-end: var(--surf-grid-gap);
  padding-inline-start: var(--surf-grid-gap);
  width: 100%;

  &.container--default {
    max-inline-size: calc(var(--surf-width-default) + (var(--surf-grid-gap) * 2));
  }

  &.container--large {
    max-inline-size: calc(1143px + (var(--surf-grid-gap) * 2));
  }

  &.container--xlarge {
    max-inline-size: calc(var(--surf-width-xlarge) + (var(--surf-grid-gap) * 2));
  }

  &.container--small {
    max-inline-size: calc(var(--surf-width-small) + (var(--surf-grid-gap) * 2));
  }
}




//------------------------------------
//  07 - Layout
//------------------------------------

ul.l-onecol,
ul.l-twocol,
ul.l-threecol {
  padding: 0;
}

.l-onecol,
.l-twocol,
.l-threecol, {
  margin-block: 64px;
  @include breakpoints.bp-min(large) {
    margin-block: 88px;
  }
}

.l-onecol__region > *:not( :first-child ),
.l-twocol__region > *:not( :first-child ),
.l-threecol__region > *:not( :first-child ) {
  margin-block-start: 40px;
  @include breakpoints.bp-min(large) {
    margin-block-start: 64px;
  }
}

.l-onecol,
.l-twocol,
.l-threecol {
  display: grid;
  gap: 60px;
}

// One Column
.l-onecol {
  grid-template-columns: 1fr;

  .l-onecol--listing {
    > * {
      border-bottom: solid 2px var(--surf-color-gray-800);
      border-top: solid 2px var(--surf-color-gray-800);
      padding-block-end: 96px;
      padding-block-start: 40px;
    }

    > *:not( :first-child ) {
      margin-block-start: -2px;
    }
  }
}

// Two Column
.l-twocol {
  margin-inline: auto;

  &.l-twocol--50-50 {
    grid-template-columns: 1fr;
    @include breakpoints.bp-min(medium) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  &.l-twocol--55-45 {
    grid-template-columns: 1fr;
    @include breakpoints.bp-min(medium) {
      grid-template-columns: 55% 1fr;
    }
  }

  &.l-twocol--45-55 {
    grid-template-columns: 1fr;
    @include breakpoints.bp-min(medium) {
      grid-template-columns: 1fr 55%;
    }
  }

  &.l-twocol--25-75 {
    grid-template-columns: 1fr;
    @include breakpoints.bp-min(medium) {
      grid-template-columns: 1fr 3fr;
    }
  }

  &.l-twocol--75-25 {
    grid-template-columns: 1fr;
    @include breakpoints.bp-min(medium) {
      grid-template-columns: 3fr 1fr;
    }
  }

  .l-twocol__region {
    > div {
      height: 100%;
    }
  }

  .l-twocol__region--heading {
    grid-column: 1/3;
  }
}

// Three Column
.l-threecol {
  &.l-threecol--33-34-33 {
    grid-template-columns: 1fr;
    @include breakpoints.bp-min(medium) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    @include breakpoints.bp-min(large) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  .l-threecol__region {
    > div {
      height: 100%;
    }
  }

  .l-threecol__region--heading {
    grid-column: 1/4;
  }
}