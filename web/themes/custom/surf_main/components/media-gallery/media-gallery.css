.c-media-gallery .splide{display:flex;flex-direction:column}.c-media-gallery .splide .splide__track{order:1}.c-media-gallery .splide .splide__slide{position:relative}.c-media-gallery .splide .splide__slide figure span{background:#111;display:block;position:relative}.c-media-gallery .splide .splide__slide figure span:after{background:linear-gradient(180deg,rgba(0,110,240,0) 63.54%,rgba(0,110,240,.9));bottom:0;content:"";height:100%;left:0;position:absolute;right:0;top:0;transition:opacity 1.3s cubic-bezier(.4,0,.2,1);width:100%;z-index:1}.c-media-gallery .splide .splide__slide figure img{display:block;width:100%}.c-media-gallery .splide .splide__slide figure figcaption{background:#fff;font-size:.875rem;line-height:157%;margin:0;padding:1.25rem .9375rem;width:100%;z-index:2}@media (min-width:768px){.c-media-gallery .splide .splide__slide figure figcaption{padding:2.5rem 0}}@media (min-width:992px){.c-media-gallery .splide .splide__slide figure figcaption{bottom:-1px;font-size:1.125rem;line-height:156%;max-width:25rem;padding:.75rem 1.25rem;position:absolute;right:-1px;width:auto}}.c-media-gallery .splide .splide__arrows{order:2}.c-media-gallery .splide__arrows{-moz-column-gap:1.25rem;column-gap:1.25rem;display:flex}@media (min-width:768px){.c-media-gallery .splide__arrows{display:flex;justify-content:flex-end;margin:0 2rem 0 auto;width:calc(100% - 32px)}}@media (min-width:992px){.c-media-gallery .splide__arrows{margin-top:2.5rem}}@media (min-width:1200px){.c-media-gallery .splide__arrows{margin-top:3.125rem}}.c-media-gallery .splide__arrows .splide__arrow{align-items:center;background:#fff;border:none;border-radius:5000%;cursor:pointer;display:flex;flex-direction:row;height:4.25rem;justify-content:center;overflow:hidden;padding:0;position:relative;transition:all .35s cubic-bezier(.4,0,.2,1);width:4.25rem}.c-media-gallery .splide__arrows .splide__arrow:focus,.c-media-gallery .splide__arrows .splide__arrow:hover{background:var(--color-surf--cloud);transition:all .25s cubic-bezier(.4,0,.2,1)}.c-media-gallery .splide__arrows .splide__arrow:focus:after,.c-media-gallery .splide__arrows .splide__arrow:hover:after{background-position-x:left;background-size:100% 100%;transition:background-size .25s cubic-bezier(.4,0,.2,1)}.c-media-gallery .splide__arrows .splide__arrow:focus svg,.c-media-gallery .splide__arrows .splide__arrow:hover svg{transition:all .25s cubic-bezier(.4,0,.2,1)}.c-media-gallery .splide__arrows .splide__arrow svg,.c-media-gallery .splide__arrows .splide__arrow svg path{transition:all .35s cubic-bezier(.4,0,.2,1)}.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev{margin:0 0 0 auto}@media (min-width:768px){.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev{margin:0}}.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:focus,.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:hover{transition:all .25s cubic-bezier(.4,0,.2,1)}.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:focus:after,.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:hover:after{background-position-x:right;background-size:100% 100%;transition:background-size .25s cubic-bezier(.4,0,.2,1)}.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:focus svg,.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:hover svg{transition:all .25s cubic-bezier(.4,0,.2,1)}.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:focus svg path,.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--prev:hover svg path{background:#550ec7}.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--next{margin:0 auto 0 0}@media (min-width:768px){.c-media-gallery .splide__arrows .splide__arrow.splide__arrow--next{margin:0}}.c-media-gallery .splide__arrow--next,.c-media-gallery .splide__arrow--prev{transition:opacity 1s cubic-bezier(.4,0,.2,1),transform 1s cubic-bezier(.4,0,.2,1)}.c-media-gallery .splide__arrow--next.visible{transform:translateX(0);transition-delay:.25s}.splide__slide .c-media{margin:0!important;max-width:100%!important;width:100%!important}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
