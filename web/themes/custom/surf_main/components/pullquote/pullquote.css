@charset "UTF-8";.c-pullquote__content p{color:var(--color-text-heading);font-family:var(--font-family-heading);font-weight:var(--font-weight-medium)}.c-pullquote__footer{margin:1.25rem 0 0}.c-pullquote__footer cite{align-items:baseline;color:var(--color-text-muted);display:flex;font-family:var(--surf-font-condensed);font-size:rem(16px);font-weight:var(--surf-font-weight-bold);letter-spacing:1.5px}.c-pullquote__footer cite:before{content:"â€”";margin:0 7px 0 0}.c-pullquote.fullwidth .c-pullquote__content p{background:linear-gradient(92.82deg,var(--color-text-heading-muted) .11%,var(--color-text-heading) 95.94%);-webkit-background-clip:text;background-clip:text;color:transparent;font-size:2.5rem;letter-spacing:.015em;line-height:100%}@media (min-width:769px){.c-pullquote.fullwidth .c-pullquote__content p{font-size:4rem;line-height:100%}}@media (min-width:992px){.c-pullquote.fullwidth .c-pullquote__content p{font-size:5.875rem;line-height:100%}}.c-pullquote.centered{border-bottom:2px solid var(--color-border-muted);border-top:2px solid var(--color-border-muted);padding:32px 0}.c-pullquote.centered .c-pullquote__content p{font-size:2.5rem;letter-spacing:.02em;line-height:100%}@media (min-width:769px){.c-pullquote.centered .c-pullquote__content p{font-size:3.25rem;line-height:100%}}@media (min-width:992px){.c-pullquote.centered .c-pullquote__content p{font-size:4rem;line-height:100%}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
