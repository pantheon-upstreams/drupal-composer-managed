@charset "UTF-8";
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
.c-pullquote__content p {
  font-weight: var(--font-weight-medium);
  font-family: var(--font-family-heading);
  color: var(--color-text-heading);
}

.c-pullquote__footer {
  margin: 1.25rem 0 0 0;
}
.c-pullquote__footer cite {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  -webkit-box-align: baseline;
          align-items: baseline;
  color: var(--color-text-muted);
  display: -webkit-box;
  display: flex;
}
.c-pullquote__footer cite::before {
  content: "â€”";
  margin: 0 7px 0 0;
}

.c-pullquote.fullwidth .c-pullquote__content p {
  color: transparent;
  background: -o-linear-gradient(357.18deg, var(--color-text-heading-muted) 0.11%, var(--color-text-heading) 95.94%);
  background: linear-gradient(92.82deg, var(--color-text-heading-muted) 0.11%, var(--color-text-heading) 95.94%);
  -webkit-background-clip: text;
          background-clip: text;
  font-size: 2.5rem;
  line-height: 100%;
  letter-spacing: 0.015em;
}
@media (min-width: 768px) {
  .c-pullquote.fullwidth .c-pullquote__content p {
    font-size: 4rem;
    line-height: 100%;
  }
}
@media (min-width: 1024px) {
  .c-pullquote.fullwidth .c-pullquote__content p {
    font-size: 5.875rem;
    line-height: 100%;
  }
}

.c-pullquote.centered {
  border-top: solid 2px var(--color-border-muted);
  border-bottom: solid 2px var(--color-border-muted);
  padding: 32px 0;
}
.c-pullquote.centered .c-pullquote__content p {
  font-size: 2.5rem;
  line-height: 100%;
  letter-spacing: 0.02em;
}
@media (min-width: 768px) {
  .c-pullquote.centered .c-pullquote__content p {
    font-size: 3.25rem;
    line-height: 100%;
  }
}
@media (min-width: 1024px) {
  .c-pullquote.centered .c-pullquote__content p {
    font-size: 4rem;
    line-height: 100%;
  }
}