.p-event{padding-block-end:1.625rem;position:relative}@media (min-width:768px){.p-event{padding-block-end:3.75rem}}@media (min-width:992px){.p-event{padding-block-end:3.125rem}}@media (min-width:1400px){.p-event{padding-block-end:8.9375rem}}.p-event__inner-wrapper>:not(:last-child){margin-block-end:2rem}@media (min-width:768px){.p-event__inner-wrapper>:not(:last-child){margin-block-end:2.5rem}}@media (min-width:992px){.p-event__inner-wrapper>:not(:last-child){margin-block-end:3.75rem}}.p-event__body-wrapper>:not(:last-child){margin-block-end:2rem}@media (min-width:768px){.p-event__body-wrapper>:not(:last-child){margin-block-end:2.5rem}}@media (min-width:992px){.p-event__body-wrapper>:not(:last-child){margin-block-end:1.75rem}}.p-event__dates,.p-event__meta-wrapper{align-items:center;display:flex;flex-wrap:wrap;gap:1.5rem}.p-event__dates p{color:var(--surf-color-black-alt);font-family:var(--surf-font-sans);font-size:var(--surf-fs-18-24);font-weight:var(--surf-fw-bold);line-height:var(--surf-lh-label)}.p-event__summary{color:var(--surf-color-black-alt);font-family:var(--surf-font-sans-alt);font-size:var(--surf-fs-40-64);font-weight:var(--surf-fw-medium);letter-spacing:.0375rem;line-height:var(--surf-lh-base);margin-block-end:1.75rem}@media (min-width:768px){.p-event__summary{letter-spacing:.08rem}}.p-event__content-grid{grid-gap:32px;display:grid;gap:32px;grid-template-columns:1fr}@media (min-width:768px){.p-event__content-grid{gap:40px}}@media (min-width:992px){.p-event__content-grid{gap:60px}}@media (min-width:1200px){.p-event__content-grid{grid-template-columns:1fr 400px}.p-event__content-grid .p-event__body-wrapper{order:1}.p-event__content-grid .p-event__media{justify-self:end;order:2}.p-event .a-left-hook{width:65%}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
