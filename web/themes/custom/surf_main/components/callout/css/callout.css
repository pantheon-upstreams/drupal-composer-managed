/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
.c-callout {
  background-color: var(--color-surf--white);
}
.c-callout.c-callout--cloud {
  background-color: var(--color-surf--cloud);
}
.c-callout.c-callout--forest {
  background-color: var(--color-surf--forest);
  color: var(--color-surf--white);
}
.c-callout.c-callout--kelly {
  background-color: var(--color-surf--kelly-green);
  color: var(--color-surf--white);
}
.c-callout:not(.c-callout--white) .c-callout__content-wrapper {
  padding: 1.25rem;
}
@media (min-width: 768px) {
  .c-callout:not(.c-callout--white) .c-callout__content-wrapper {
    padding: 1.75rem;
  }
}
@media (min-width: 1024px) {
  .c-callout:not(.c-callout--white) .c-callout__content-wrapper {
    padding: 2rem;
  }
}
@media (min-width: 1400px) {
  .c-callout:not(.c-callout--white) .c-callout__content-wrapper {
    padding: 2.5rem;
  }
}
.c-callout.c-callout--white .c-callout__content-wrapper {
  padding-top: 1.25rem;
}
@media (min-width: 768px) {
  .c-callout.c-callout--white .c-callout__content-wrapper {
    padding-top: 1.75rem;
  }
}
@media (min-width: 1024px) {
  .c-callout.c-callout--white .c-callout__content-wrapper {
    padding-top: 2rem;
  }
}
@media (min-width: 1400px) {
  .c-callout.c-callout--white .c-callout__content-wrapper {
    padding-top: 2.5rem;
  }
}
.c-callout.c-callout--simple-icon-cta {
  background-color: var(--color-surf--cloud);
}
.c-callout.c-callout--simple-icon-cta .c-callout__content-wrapper {
  padding: 1.25rem;
}
@media (min-width: 768px) {
  .c-callout.c-callout--simple-icon-cta .c-callout__content-wrapper {
    padding: 2.5rem;
  }
}
.c-callout.c-callout--simple-icon-cta .c-callout__body p {
  margin-top: 0;
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-small);
  line-height: var(--font-line-height-body-small);
}
@media (min-width: 768px) {
  .c-callout.c-callout--simple-icon-cta .c-callout__body p {
    font-weight: var(--font-weight-regular);
    font-family: var(--font-family-body);
    font-size: var(--font-size-body-medium);
    line-height: var(--font-line-height-body-medium);
  }
}
@media (min-width: 1024px) {
  .c-callout.c-callout--simple-icon-cta .c-callout__body p {
    font-weight: var(--font-weight-regular);
    font-family: var(--font-family-body);
    font-size: var(--font-size-body-large);
    line-height: var(--font-line-height-body-large);
  }
}
.c-callout.c-callout--simple-icon-cta .c-callout__body p:last-child {
  margin-bottom: 0;
}
.c-callout.c-callout--simple-icon-cta .c-callout__link {
  margin-top: 0.625rem;
}
@media (min-width: 1024px) {
  .c-callout.c-callout--simple-icon-cta .c-callout__link {
    margin-top: 1.75rem;
  }
}
.c-callout.c-callout--simple-icon-cta .c-callout__link .cl-component--link-button {
  padding-top: 0;
}
.c-callout.c-callout--simple-icon-cta .c-callout__link .cl-component--link-button .link-button__icon {
  right: 0;
  position: relative;
  -webkit-transition: right 350ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: right 350ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: right 350ms cubic-bezier(0.4, 0, 0.2, 1);
}
.c-callout.c-callout--simple-icon-cta .c-callout__link .cl-component--link-button:hover {
  border-bottom-color: var(--color-surf--cloud);
}
.c-callout.c-callout--simple-icon-cta .c-callout__link .cl-component--link-button:hover .link-button__icon {
  right: -5px;
  -webkit-transition: right 200ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: right 200ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: right 200ms cubic-bezier(0.4, 0, 0.2, 1);
}

.c-callout__image img {
  width: 100%;
}

.c-callout__title {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-x-large);
  line-height: var(--font-line-height-body-x-large);
  color: inherit;
  font-weight: var(--font-weight-bold);
}

.c-callout.c-callout--icon .c-callout__content-wrapper {
  padding: 0;
}
@media (min-width: 768px) {
  .c-callout.c-callout--icon .c-callout__content-wrapper {
    padding: 0;
  }
}
@media (min-width: 1024px) {
  .c-callout.c-callout--icon .c-callout__content-wrapper {
    padding: 0;
  }
}
@media (min-width: 1400px) {
  .c-callout.c-callout--icon .c-callout__content-wrapper {
    padding: 0;
  }
}
.c-callout.c-callout--icon .c-callout__image {
  display: none;
}
.c-callout.c-callout--icon .c-callout__icon {
  margin: 0 0 1.875rem 0;
  width: 6.25rem;
  height: 6.25rem;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}

.c-callout__icon.bar-chart {
  background-image: url(../../../../images/icons/bar-chart/color.png);
}
.c-callout__icon.burst {
  background-image: url(../../../../images/icons/burst/color.png);
}
.c-callout__icon.calendar {
  background-image: url(../../../../images/icons/calendar/color.png);
}
.c-callout__icon.cell {
  background-image: url(../../../../images/icons/cell/color.png);
}
.c-callout__icon.comment {
  background-image: url(../../../../images/icons/comment/color.png);
}
.c-callout__icon.computer {
  background-image: url(../../../../images/icons/computer/color.png);
}
.c-callout__icon.cosmic-rays {
  background-image: url(../../../../images/icons/cosmic-rays/color.png);
}
.c-callout__icon.document {
  background-image: url(../../../../images/icons/document/color.png);
}
.c-callout__icon.flashlight {
  background-image: url(../../../../images/icons/flashlight/color.png);
}
.c-callout__icon.globe {
  background-image: url(../../../../images/icons/globe/color.png);
}
.c-callout__icon.group {
  background-image: url(../../../../images/icons/group/color.png);
}
.c-callout__icon.hardhat {
  background-image: url(../../../../images/icons/hardhat/color.png);
}
.c-callout__icon.heart {
  background-image: url(../../../../images/icons/heart/color.png);
}
.c-callout__icon.hexagon {
  background-image: url(../../../../images/icons/hexagon/color.png);
}
.c-callout__icon.ladder {
  background-image: url(../../../../images/icons/ladder/color.png);
}
.c-callout__icon.lightbulb {
  background-image: url(../../../../images/icons/lightbulb/color.png);
}
.c-callout__icon.ladder {
  background-image: url(../../../../images/icons/ladder/color.png);
}
.c-callout__icon.magnifying-glass {
  background-image: url(../../../../images/icons/magnifying-glass/color.png);
}
.c-callout__icon.nobel-prize {
  background-image: url(../../../../images/icons/nobel-prize/color.png);
}
.c-callout__icon.particles {
  background-image: url(../../../../images/icons/particles/color.png);
}
.c-callout__icon.person {
  background-image: url(../../../../images/icons/person/color.png);
}
.c-callout__icon.shovel {
  background-image: url(../../../../images/icons/shovel/color.png);
}
.c-callout__icon.starburst {
  background-image: url(../../../../images/icons/starburst/color.png);
}
.c-callout__icon.teacher {
  background-image: url(../../../../images/icons/teacher/color.png);
}
.c-callout__icon.tunnels {
  background-image: url(../../../../images/icons/tunnels/color.png);
}

.c-callout__title-link {
  text-decoration: none;
}
.c-callout__title-link:hover {
  text-decoration: underline;
}

.l--layout-twocolumn-halves .c-callout__title,
.c-layout--twocolumn-halves .c-callout__title,
.l--layout-twocolumn-onethird-twothirds .c-callout__title,
.c-layout--twocolumn-onethird-twothirds .c-callout__title,
.l--layout-twocolumn-twothirds-onethird .c-callout__title,
.c-layout--twocolumn-twothirds-onethird .c-callout__title {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-large);
  line-height: var(--font-line-height-body-large);
  color: inherit;
  font-weight: var(--font-weight-bold);
}
.l--layout-twocolumn-halves .c-callout__body,
.c-layout--twocolumn-halves .c-callout__body,
.l--layout-twocolumn-onethird-twothirds .c-callout__body,
.c-layout--twocolumn-onethird-twothirds .c-callout__body,
.l--layout-twocolumn-twothirds-onethird .c-callout__body,
.c-layout--twocolumn-twothirds-onethird .c-callout__body {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-medium);
  line-height: var(--font-line-height-body-medium);
}

.l--layout-threecolumn-thirds .c-callout__title,
.c-layout--threecolumn-thirds .c-callout__title,
.l--layout-fourcolumns-forths .c-callout__title,
.c-layout--fourcolumns-forths .c-callout__title {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-large);
  line-height: var(--font-line-height-body-large);
  color: inherit;
  font-weight: var(--font-weight-bold);
}
.l--layout-threecolumn-thirds .c-callout__body,
.c-layout--threecolumn-thirds .c-callout__body,
.l--layout-fourcolumns-forths .c-callout__body,
.c-layout--fourcolumns-forths .c-callout__body {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-medium);
  line-height: var(--font-line-height-body-medium);
}