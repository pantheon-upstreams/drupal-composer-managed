/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
.c-layout > .c-layout--inner-wrapper {
  z-index: 1;
  position: relative;
}
.c-layout.c-layout--onecolumn .c-layout--main {
  display: grid;
  grid-row-gap: 2rem;
  row-gap: 2rem;
  grid-column-gap: 3.75rem;
  -webkit-column-gap: 3.75rem;
     -moz-column-gap: 3.75rem;
          column-gap: 3.75rem;
}
@media (min-width: 768px) {
  .c-layout.c-layout--onecolumn .c-layout--main {
    -webkit-column-gap: 1.25rem;
       -moz-column-gap: 1.25rem;
            column-gap: 1.25rem;
    grid-template-columns: 1fr;
  }
}
@media (min-width: 1024px) {
  .c-layout.c-layout--onecolumn .c-layout--main {
    -webkit-column-gap: 2.5rem;
       -moz-column-gap: 2.5rem;
            column-gap: 2.5rem;
  }
}
.c-layout.c-layout--twocolumn-halves .c-layout--main {
  display: grid;
  grid-row-gap: 2rem;
  row-gap: 2rem;
  grid-column-gap: 3.75rem;
  -webkit-column-gap: 3.75rem;
     -moz-column-gap: 3.75rem;
          column-gap: 3.75rem;
}
@media (min-width: 768px) {
  .c-layout.c-layout--twocolumn-halves .c-layout--main {
    -webkit-column-gap: 1.25rem;
       -moz-column-gap: 1.25rem;
            column-gap: 1.25rem;
    grid-template-columns: 0.5fr 0.5fr;
  }
}
@media (min-width: 1024px) {
  .c-layout.c-layout--twocolumn-halves .c-layout--main {
    -webkit-column-gap: 2.5rem;
       -moz-column-gap: 2.5rem;
            column-gap: 2.5rem;
  }
}
.c-layout.c-layout--twocolumn-onethird-twothirds .c-layout--main {
  display: grid;
  grid-row-gap: 2rem;
  row-gap: 2rem;
  grid-column-gap: 3.75rem;
  -webkit-column-gap: 3.75rem;
     -moz-column-gap: 3.75rem;
          column-gap: 3.75rem;
}
@media (min-width: 768px) {
  .c-layout.c-layout--twocolumn-onethird-twothirds .c-layout--main {
    -webkit-column-gap: 1.25rem;
       -moz-column-gap: 1.25rem;
            column-gap: 1.25rem;
    grid-template-columns: 0.4fr 0.6fr;
  }
}
@media (min-width: 1024px) {
  .c-layout.c-layout--twocolumn-onethird-twothirds .c-layout--main {
    -webkit-column-gap: 2.5rem;
       -moz-column-gap: 2.5rem;
            column-gap: 2.5rem;
  }
}
.c-layout.c-layout--twocolumn-twothirds-onethird .c-layout--main {
  display: grid;
  grid-column-gap: 3.75rem;
  -webkit-column-gap: 3.75rem;
     -moz-column-gap: 3.75rem;
          column-gap: 3.75rem;
}
@media (min-width: 768px) {
  .c-layout.c-layout--twocolumn-twothirds-onethird .c-layout--main {
    -webkit-column-gap: 1.25rem;
       -moz-column-gap: 1.25rem;
            column-gap: 1.25rem;
    grid-template-columns: 0.6fr 0.4fr;
  }
}
@media (min-width: 1024px) {
  .c-layout.c-layout--twocolumn-twothirds-onethird .c-layout--main {
    -webkit-column-gap: 2.5rem;
       -moz-column-gap: 2.5rem;
            column-gap: 2.5rem;
  }
}
.c-layout.c-layout--threecolumn-thirds .c-layout--main {
  display: grid;
  grid-row-gap: 2rem;
  row-gap: 2rem;
  grid-column-gap: 3.75rem;
  -webkit-column-gap: 3.75rem;
     -moz-column-gap: 3.75rem;
          column-gap: 3.75rem;
}
@media (min-width: 768px) {
  .c-layout.c-layout--threecolumn-thirds .c-layout--main {
    -webkit-column-gap: 1.25rem;
       -moz-column-gap: 1.25rem;
            column-gap: 1.25rem;
    grid-template-columns: 0.33fr 0.33fr 0.33fr;
  }
}
@media (min-width: 1024px) {
  .c-layout.c-layout--threecolumn-thirds .c-layout--main {
    -webkit-column-gap: 2.5rem;
       -moz-column-gap: 2.5rem;
            column-gap: 2.5rem;
  }
}
.c-layout.c-layout--fourcolumns-forths .c-layout--main {
  display: grid;
  grid-row-gap: 2rem;
  row-gap: 2rem;
  grid-column-gap: 3.75rem;
  -webkit-column-gap: 3.75rem;
     -moz-column-gap: 3.75rem;
          column-gap: 3.75rem;
}
@media (min-width: 768px) {
  .c-layout.c-layout--fourcolumns-forths .c-layout--main {
    -webkit-column-gap: 1.25rem;
       -moz-column-gap: 1.25rem;
            column-gap: 1.25rem;
    grid-template-columns: 0.25fr 0.25fr 0.25fr 0.25fr;
  }
}
@media (min-width: 1024px) {
  .c-layout.c-layout--fourcolumns-forths .c-layout--main {
    -webkit-column-gap: 2.5rem;
       -moz-column-gap: 2.5rem;
            column-gap: 2.5rem;
  }
}
.c-layout.c-layout--width--full {
  width: 100% !important;
  max-width: 100% !important;
}
.c-layout.c-layout--width--full > .c-layout--inner-wrapper {
  width: 100%;
  margin-left: 1.25rem;
  width: calc(100% - 1.25rem);
}
.c-layout.c-layout--width--medium {
  -webkit-column-gap: 3.75rem;
     -moz-column-gap: 3.75rem;
          column-gap: 3.75rem;
}
@media (min-width: 768px) {
  .c-layout.c-layout--width--medium {
    -webkit-column-gap: 1.25rem;
       -moz-column-gap: 1.25rem;
            column-gap: 1.25rem;
    grid-template-columns: 0.5fr 0.5fr;
  }
}
@media (min-width: 1024px) {
  .c-layout.c-layout--width--medium {
    -webkit-column-gap: 2.5rem;
       -moz-column-gap: 2.5rem;
            column-gap: 2.5rem;
  }
}
.c-layout.c-layout--width--medium > .c-layout--inner-wrapper {
  max-width: 86.25rem;
}
.c-layout.c-layout--width--narrow > .c-layout--inner-wrapper {
  max-width: 48.75rem;
  margin-left: auto;
  margin-right: auto;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
