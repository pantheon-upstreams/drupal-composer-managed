/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
.c-green-banner {
  background: -o-linear-gradient(351.36deg, #00492c 41.67%, #008535 100%);
  background: linear-gradient(98.64deg, #00492c 41.67%, #008535 100%);
  padding: 2rem 0.9375rem;
  position: relative;
  overflow: hidden;
  z-index: 1;
}
@media (min-width: 768px) {
  .c-green-banner {
    padding: 3.75rem 2.5rem;
  }
}
@media (min-width: 1024px) {
  .c-green-banner {
    padding: 5rem 2.5rem;
  }
}
@media (min-width: 1200px) {
  .c-green-banner {
    padding: 5rem;
  }
}
.c-green-banner:before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  height: 20.25rem;
  width: 20.25rem;
  background-image: url(../banner-green-corner-particles.png);
  background-size: cover;
  background-repeat: no-repeat;
  display: block;
  z-index: -1;
}
.c-green-banner:after {
  content: "";
  display: none;
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: 13.75rem;
  background-image: url(../banner-illustration.png);
  background-size: cover;
  background-repeat: no-repeat;
  z-index: -1;
}
@media (min-width: 768px) {
  .c-green-banner:after {
    display: block;
  }
}

.c-green-banner__title {
  color: var(--color-surf--white);
  margin: 0;
}

.c-green-banner__body {
  margin: 2rem 0 0 0;
}
.c-green-banner__body > p {
  color: var(--color-surf--white);
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-x-large);
  line-height: var(--font-line-height-body-x-large);
  font-weight: var(--font-weight-bold);
  margin-top: 0;
}
.c-green-banner__body > p:last-child {
  margin-bottom: 0;
}
@media (min-width: 1024px) {
  .c-green-banner__body {
    max-width: 54rem;
  }
}

.c-green-banner__link {
  margin: 2rem 0 0 0;
}