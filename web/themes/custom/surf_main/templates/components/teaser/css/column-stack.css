/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
/*
  --- Column Stack Layout ----
*/
.c-teaser.c-teaser--column-stack {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}
.c-teaser.c-teaser--column-stack .c-teaser__content-wrapper {
  -webkit-box-pack: center;
          justify-content: center;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}
.c-teaser.c-teaser--column-stack .c-teaser__image-wrapper {
  position: relative;
  margin: 0 0 1.75rem 0;
}
.c-teaser.c-teaser--column-stack .c-teaser__image-wrapper img {
  display: block;
  width: 100%;
}
.c-teaser.c-teaser--column-stack .c-teaser__title {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-x-large);
  line-height: var(--font-line-height-body-x-large);
  color: var(--color-surf--forest);
  font-weight: var(--font-weight-bold);
  margin: 0;
}
@media (min-width: 768px) {
  .c-teaser.c-teaser--column-stack .c-teaser__title {
    font-weight: var(--font-weight-regular);
    font-family: var(--font-family-body);
    font-size: var(--font-size-body-large);
    line-height: var(--font-line-height-body-large);
  }
}
.c-teaser.c-teaser--column-stack .c-teaser__title a {
  -webkit-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
}
.c-teaser.c-teaser--column-stack .c-teaser__title a:hover {
  -webkit-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  text-decoration: underline;
}
.c-teaser.c-teaser--column-stack .c-teaser__body {
  margin: 0.75rem 0 0 0;
}
.c-teaser.c-teaser--column-stack .c-teaser__body p {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-small);
  line-height: var(--font-line-height-body-small);
  margin: 0;
}
@media (min-width: 768px) {
  .c-teaser.c-teaser--column-stack .c-teaser__body p {
    font-weight: var(--font-weight-regular);
    font-family: var(--font-family-body);
    font-size: var(--font-size-body-medium);
    line-height: var(--font-line-height-body-medium);
  }
}
@media (min-width: 1620px) {
  .c-teaser.c-teaser--column-stack .c-teaser__body p {
    font-weight: var(--font-weight-regular);
    font-family: var(--font-family-body);
    font-size: var(--font-size-body-large);
    line-height: var(--font-line-height-body-large);
  }
}
.c-teaser.c-teaser--column-stack .c-teaser__category {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  background-color: var(--color-surf--white);
  color: var(--color-surf--black);
  padding: 0.125rem 0.5rem;
  position: absolute;
  left: 0;
  bottom: 0;
  display: inline-block;
  margin: 0;
}
.c-teaser.c-teaser--column-stack .c-teaser__category a {
  color: var(--color-surf--black);
  text-decoration: none;
  -webkit-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
}
.c-teaser.c-teaser--column-stack .c-teaser__category a:hover {
  color: var(--color-surf--black);
  text-decoration: underline;
  -webkit-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
}
.c-teaser.c-teaser--column-stack .c-teaser.c-teaser--video .c-teaser__category {
  padding-left: 1.5rem;
  background-image: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2211%22%20height%3D%2214%22%20fill%3D%22none%22%3E%3Cpath%20fill%3D%22%23494949%22%20d%3D%22M.062.938%2010.562%207l-10.5%206.062V.938Z%22%2F%3E%3C%2Fsvg%3E");
  background-repeat: no-repeat;
  background-position: center left 0.5rem;
}
.c-teaser.c-teaser--column-stack .c-teaser__date {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  color: var(--color-surf--grey);
  margin: 0.75rem 0 0 0;
}
.c-teaser.c-teaser--column-stack .c-teaser__tags {
  margin: 0.75rem 0 0 0;
  padding: 0;
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
}
.c-teaser.c-teaser--column-stack .c-teaser__tags > .c-teaser__tag {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-x-small);
  line-height: var(--font-line-height-body-x-small);
  display: inline-block;
  margin: 0.375rem 1.125rem 0 0;
}
.c-teaser.c-teaser--column-stack .c-teaser__tags > .c-teaser__tag:first-child {
  margin-left: 0;
}
.c-teaser.c-teaser--column-stack .c-teaser__tags > .c-teaser__tag a {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-x-small);
  line-height: var(--font-line-height-body-x-small);
  padding: 0.125rem 0.25rem;
  color: var(--color-surf--forest);
  font-weight: var(--font-weight-regular);
  -webkit-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
}
.c-teaser.c-teaser--column-stack .c-teaser__tags > .c-teaser__tag a:hover {
  background: var(--color-surf--cloud);
  color: var(--color-surf--black);
  text-decoration: none;
  -webkit-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
}
.c-teaser.c-teaser--column-stack .c-teaser__pretitle {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-large);
  line-height: var(--font-line-height-body-large);
  color: var(--color-surf--forest);
  font-weight: var(--font-weight-bold);
  text-transform: uppercase;
  margin: 0 0 0.5rem 0;
}

.l--layout-onecolumn .c-teaser.c-teaser--column-stack,
.c-layout--layout-onecolumn .c-teaser.c-teaser--column-stack {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}
@media (min-width: 768px) {
  .l--layout-onecolumn .c-teaser.c-teaser--column-stack,
  .c-layout--layout-onecolumn .c-teaser.c-teaser--column-stack {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}
@media (min-width: 768px) {
  .l--layout-onecolumn .c-teaser.c-teaser--column-stack .c-teaser__image-wrapper,
  .c-layout--layout-onecolumn .c-teaser.c-teaser--column-stack .c-teaser__image-wrapper {
    margin: 0;
    width: 50%;
    -webkit-box-flex: 0;
            flex: none;
  }
}
@media (min-width: 768px) {
  .l--layout-onecolumn .c-teaser.c-teaser--column-stack .c-teaser__content-wrapper,
  .c-layout--layout-onecolumn .c-teaser.c-teaser--column-stack .c-teaser__content-wrapper {
    margin: 0 0 0 2rem;
  }
}
@media (min-width: 1620px) {
  .l--layout-onecolumn .c-teaser.c-teaser--column-stack .c-teaser__content-wrapper,
  .c-layout--layout-onecolumn .c-teaser.c-teaser--column-stack .c-teaser__content-wrapper {
    margin: 0 0 0 3.75rem;
  }
}

.l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack,
.c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}
@media (min-width: 768px) {
  .l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack,
  .c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}
@media (min-width: 1620px) {
  .l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack,
  .c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}
@media (min-width: 768px) {
  .l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__image-wrapper,
  .c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__image-wrapper {
    margin: 0;
    width: 13rem;
    -webkit-box-flex: 0;
            flex: none;
  }
}
@media (min-width: 1024px) {
  .l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__image-wrapper,
  .c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__image-wrapper {
    width: 18.3125rem;
    -webkit-box-flex: 0;
            flex: none;
  }
}
@media (min-width: 1620px) {
  .l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__image-wrapper,
  .c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__image-wrapper {
    margin: 0 0 1.25rem 0;
    width: 100%;
    -webkit-box-flex: 1;
            flex: 1;
  }
}
@media (min-width: 768px) {
  .l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__content-wrapper,
  .c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__content-wrapper {
    margin: 0 0 0 1.25rem;
  }
}
@media (min-width: 1024px) {
  .l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__content-wrapper,
  .c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__content-wrapper {
    margin: 0 0 0 2.5rem;
  }
}
@media (min-width: 1620px) {
  .l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__content-wrapper,
  .c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__content-wrapper {
    margin: 0;
  }
}
.l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__title,
.c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__title {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-medium);
  line-height: var(--font-line-height-body-medium);
  font-weight: var(--font-weight-bold);
}
@media (min-width: 768px) {
  .l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__title,
  .c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__title {
    font-weight: var(--font-weight-regular);
    font-family: var(--font-family-body);
    font-size: var(--font-size-body-large);
    line-height: var(--font-line-height-body-large);
  }
}
@media (min-width: 1024px) {
  .l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__title,
  .c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__title {
    font-weight: var(--font-weight-regular);
    font-family: var(--font-family-body);
    font-size: var(--font-size-body-large);
    line-height: var(--font-line-height-body-large);
  }
}
@media (min-width: 1620px) {
  .l--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__title,
  .c-layout--layout-threecolumn-thirds .c-teaser.c-teaser--column-stack .c-teaser__title {
    font-weight: var(--font-weight-regular);
    font-family: var(--font-family-body);
    font-size: var(--font-size-body-large);
    line-height: var(--font-line-height-body-large);
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
