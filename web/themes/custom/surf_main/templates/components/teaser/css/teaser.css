/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
.c-teaser {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}
@media (min-width: 768px) {
  .c-teaser {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
  .c-teaser .c-teaser__content-wrapper {
    margin: 0 0 0 2rem;
    -webkit-box-pack: center;
            justify-content: center;
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}
@media (min-width: 1620px) {
  .c-teaser {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
    display: block;
  }
  .c-teaser .c-teaser__content-wrapper {
    margin: 0;
  }
}
.c-teaser.c-teaser--stacked {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}
@media (min-width: 768px) {
  .c-teaser.c-teaser--stacked {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--stacked {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}
@media (min-width: 1620px) {
  .c-teaser.c-teaser--stacked {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}
@media (min-width: 768px) {
  .c-teaser.c-teaser--stacked .c-teaser__content-wrapper {
    margin: 0;
  }
}
.c-teaser.c-teaser--side-by-side {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}
@media (min-width: 768px) {
  .c-teaser.c-teaser--side-by-side {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--side-by-side {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}
@media (min-width: 1620px) {
  .c-teaser.c-teaser--side-by-side {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}
.c-teaser.c-teaser--side-by-side .c-teaser__image-wrapper {
  max-width: 12.9375rem;
  margin: 0 0 2rem 0;
}
@media (min-width: 768px) {
  .c-teaser.c-teaser--side-by-side .c-teaser__image-wrapper {
    -webkit-box-ordinal-group: 3;
            order: 2;
    margin: 0;
  }
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--side-by-side .c-teaser__image-wrapper {
    max-width: 18.125rem;
  }
}
@media (min-width: 1620px) {
  .c-teaser.c-teaser--side-by-side .c-teaser__image-wrapper {
    max-width: 33.75rem;
  }
}
@media (min-width: 768px) {
  .c-teaser.c-teaser--side-by-side .c-teaser__content-wrapper {
    margin: 0 2rem 0 0;
    -webkit-box-ordinal-group: 2;
            order: 1;
  }
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--side-by-side .c-teaser__content-wrapper {
    margin: 0 3.75rem 0 0;
  }
}
@media (min-width: 1620px) {
  .c-teaser.c-teaser--side-by-side .c-teaser__content-wrapper {
    margin: 0 11.25rem 0 0;
    -webkit-box-pack: center;
            justify-content: center;
  }
}
.c-teaser.c-teaser--side-by-side .c-teaser__title a {
  font-size: 1.125rem;
  line-height: 144%;
}
@media (min-width: 768px) {
  .c-teaser.c-teaser--side-by-side .c-teaser__title a {
    font-size: 1.5rem;
    line-height: 140%;
  }
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--side-by-side .c-teaser__title a {
    font-size: 2rem;
    line-height: 132%;
  }
}
@media (min-width: 1620px) {
  .c-teaser.c-teaser--side-by-side .c-teaser__title a {
    font-size: 2rem;
    line-height: 132%;
  }
}
.c-teaser.c-teaser--side-by-side .c-teaser__meta-wrapper {
  margin: 1.25rem 0 0 0;
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--side-by-side .c-teaser__meta-wrapper {
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap;
    -webkit-box-align: center;
            align-items: center;
    margin: 2.5rem 0 0 0;
  }
}
.c-teaser.c-teaser--side-by-side .c-teaser__date-time-wrapper {
  margin: 1.25rem 0 0 0;
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--side-by-side .c-teaser__date-time-wrapper {
    margin: 0 0 0 0;
  }
}
.c-teaser.c-teaser--side-by-side .c-teaser__side-by-side-category {
  color: var(--color-surf--white);
  background: var(--color-surf--forest);
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  padding: 0.125rem 0.5rem;
  display: inline-block;
  margin: 0 1.25rem 0 0;
  text-transform: uppercase;
}
.c-teaser.c-teaser--side-by-side .c-teaser__side-by-side-category a {
  color: var(--color-surf--white);
  text-decoration: none;
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
}
.c-teaser.c-teaser--side-by-side .c-teaser__side-by-side-category a:hover {
  color: var(--color-surf--white);
  text-decoration: underline;
}
.c-teaser.c-teaser--side-by-side .c-teaser__date {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-small);
  line-height: var(--font-line-height-body-small);
  color: var(--color-surf--black);
  font-weight: var(--font-weight-bold);
  margin: 0;
}
.c-teaser.c-teaser--side-by-side .c-teaser__time {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-small);
  line-height: var(--font-line-height-body-small);
  color: var(--color-surf--black);
  font-weight: var(--font-weight-bold);
}
.c-teaser.c-teaser--super {
  position: relative;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}
@media (min-width: 768px) {
  .c-teaser.c-teaser--super {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--super {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
  .c-teaser.c-teaser--super::after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    right: 0;
    background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 73, 44, 0)), to(#00492c));
    background: -o-linear-gradient(top, rgba(0, 73, 44, 0) 0%, #00492c 100%);
    background: linear-gradient(180deg, rgba(0, 73, 44, 0) 0%, #00492c 100%);
    z-index: 0;
  }
}
@media (min-width: 1620px) {
  .c-teaser.c-teaser--super {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
            flex-direction: column;
  }
}
.c-teaser.c-teaser--super .c-teaser__image-wrapper {
  margin: 0;
}
.c-teaser.c-teaser--super .c-teaser__content-wrapper {
  z-index: 1;
  color: var(--color-surf--white);
  background: var(--color-surf--forest);
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
          flex-direction: row;
  flex-wrap: wrap;
  -webkit-box-pack: start;
          justify-content: flex-start;
  -webkit-box-align: start;
          align-items: flex-start;
  padding: 2.5rem 0.9375rem;
  margin: 0;
}
@media (min-width: 768px) {
  .c-teaser.c-teaser--super .c-teaser__content-wrapper {
    padding: 2.5rem;
    margin: 0;
  }
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--super .c-teaser__content-wrapper {
    background: none;
    padding: 0 2.5rem 2.5rem 2.5rem;
    margin: 0;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
  }
}
@media (min-width: 1620px) {
  .c-teaser.c-teaser--super .c-teaser__content-wrapper {
    padding: 0 3.75rem 3.75rem 3.75rem;
    margin: 0;
  }
}
.c-teaser.c-teaser--super .c-teaser__content-wrapper .c-teaser__featured-category {
  -webkit-box-ordinal-group: 2;
          order: 1;
}
.c-teaser.c-teaser--super .c-teaser__content-wrapper .c-teaser__date {
  -webkit-box-ordinal-group: 3;
          order: 2;
  color: var(--color-surf--white);
  margin: 0.125rem 0 0 0;
}
.c-teaser.c-teaser--super .c-teaser__content-wrapper .c-teaser__pretitle {
  -webkit-box-flex: 0;
          flex: none;
  width: 100%;
}
.c-teaser.c-teaser--super .c-teaser__content-wrapper .c-teaser__title {
  -webkit-box-ordinal-group: 4;
          order: 3;
  -webkit-box-flex: 0;
          flex: none;
  width: 100%;
  margin-top: 0.75rem;
}
@media (min-width: 768px) {
  .c-teaser.c-teaser--super .c-teaser__content-wrapper .c-teaser__title {
    margin-top: 1.25rem;
  }
}
.c-teaser.c-teaser--super .c-teaser__content-wrapper .c-teaser__title a {
  color: var(--color-surf--white);
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--super .c-teaser__content-wrapper .c-teaser__title a {
    font-size: 40px;
    line-height: 130%;
  }
}
.c-teaser.c-teaser--super .c-teaser__content-wrapper .c-teaser__body {
  -webkit-box-ordinal-group: 5;
          order: 4;
  -webkit-box-flex: 0;
          flex: none;
  width: 100%;
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--super .c-teaser__content-wrapper .c-teaser__body {
    font-size: 24px;
    line-height: 144%;
  }
}
@media (min-width: 1024px) {
  .c-teaser.c-teaser--super .c-teaser__content-wrapper .c-teaser__body p {
    font-size: 24px;
    line-height: 144%;
  }
}

.c-teaser__image-wrapper {
  position: relative;
  margin: 0 0 1.25rem 0;
  height: 100%;
}
@media (min-width: 1620px) {
  .c-teaser__image-wrapper {
    margin: 0 0 1.75rem 0;
  }
}
.c-teaser__image-wrapper img {
  display: block;
  width: 100%;
}

.c-teaser__featured-category {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  background-color: var(--color-surf--white);
  color: var(--color-surf--black);
  padding: 0.125rem 0.5rem;
  display: inline-block;
  margin: 0 1.25rem 0 0;
}

.c-teaser__category {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  background-color: var(--color-surf--white);
  color: var(--color-surf--black);
  padding: 0.125rem 0.5rem;
  position: absolute;
  left: 0;
  bottom: 0;
  display: inline-block;
  margin: 0;
}
.c-teaser__category a {
  color: var(--color-surf--black);
  text-decoration: none;
  -webkit-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
}
.c-teaser__category a:hover {
  color: var(--color-surf--black);
  text-decoration: underline;
  -webkit-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
}

.c-teaser.c-teaser--video .c-teaser__category {
  padding-left: 1.5rem;
  background-image: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2211%22%20height%3D%2214%22%20fill%3D%22none%22%3E%3Cpath%20fill%3D%22%23494949%22%20d%3D%22M.062.938%2010.562%207l-10.5%206.062V.938Z%22%2F%3E%3C%2Fsvg%3E");
  background-repeat: no-repeat;
  background-position: center left 0.5rem;
}

.c-teaser__pretitle {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-large);
  line-height: var(--font-line-height-body-large);
  color: var(--color-surf--forest);
  font-weight: var(--font-weight-bold);
  text-transform: uppercase;
  margin: 0 0 0.5rem 0;
}

.c-teaser__title {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-medium);
  line-height: var(--font-line-height-body-medium);
  color: var(--color-surf--forest);
  font-weight: var(--font-weight-bold);
  margin: 0 0 0.75rem 0;
}
@media (min-width: 1024px) {
  .c-teaser__title {
    font-weight: var(--font-weight-regular);
    font-family: var(--font-family-body);
    font-size: var(--font-size-body-large);
    line-height: var(--font-line-height-body-large);
  }
}
.c-teaser__title a {
  -webkit-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
}
.c-teaser__title a:hover {
  -webkit-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  text-decoration: underline;
}

.c-teaser.c-teaser--pretitle .c-teaser__title {
  font-weight: var(--font-weight-medium);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-jumbo);
  line-height: var(--font-line-height-body-jumbo);
}

.c-teaser__body {
  margin: 0 0 0.75rem 0;
}
.c-teaser__body p {
  margin: 0;
}

.c-teaser__date {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  color: var(--color-surf--grey);
  margin: 0;
}

.c-teaser__time {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  color: var(--color-surf--grey);
  position: relative;
  margin: 0 0 0 0.5rem;
}
.c-teaser__time:before {
  content: "|";
  position: relative;
  margin: 0 0.5rem 0 0;
}

.c-teaser__date-time-wrapper {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-align: center;
          align-items: center;
}

.c-teaser__tags {
  margin: 0.5rem 0 0 0;
  padding: 0;
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
}
.c-teaser__tags > .c-teaser__tag {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-x-small);
  line-height: var(--font-line-height-body-x-small);
  display: inline-block;
  margin: 0.375rem 1.125rem 0 0;
}
.c-teaser__tags > .c-teaser__tag:first-child {
  margin-left: 0;
}
.c-teaser__tags > .c-teaser__tag a {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-x-small);
  line-height: var(--font-line-height-body-x-small);
  color: var(--color-surf--forest);
  font-weight: var(--font-weight-regular);
  -webkit-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
}
.c-teaser__tags > .c-teaser__tag a:hover {
  color: var(--color-surf--black);
  text-decoration: none;
  -webkit-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
