/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
.c-accordion {
  margin: 0 0 1.25rem 0;
  padding: 0;
}

.c-accordion h3:not(:first-child) {
  margin: 0.25rem 0 0 0;
}

.accordion-trigger {
  background: var(--color-surf-nd--ghost-white);
  color: var(--color-surf-nd--purple);
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
  -webkit-box-pack: start;
          justify-content: flex-start;
  font-size: 0.875rem;
  line-height: 157%;
  font-weight: var(--font-weight-bold);
  margin: 0;
  padding: 0.75rem 2.375rem 0.75rem 1.4375rem;
  position: relative;
  text-align: left;
  width: 100%;
  border-radius: 6.25rem;
  cursor: pointer;
}
@media (min-width: 768px) {
  .accordion-trigger {
    font-size: 1.375rem;
    line-height: 159%;
  }
}

.accordion-trigger:focus,
.accordion-trigger:hover {
  background: var(--color-surf-nd--lavender);
  text-decoration: underline;
  color: var(--color-surf-nd--dark-purple);
}

.c-accordion button {
  border-style: none;
}

.c-accordion .accordion-title__wrapper {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
          align-items: center;
}

.c-accordion .accordion-title {
  -webkit-box-flex: 1;
          flex: 1;
  width: 100%;
  text-transform: none;
}

.c-accordion .accordion-icon {
  background-image: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2216%22%20height%3D%2216%22%20fill%3D%22none%22%3E%3Cpath%20fill%3D%22%237828C8%22%20fill-rule%3D%22evenodd%22%20d%3D%22M9.429%202.194a1.429%201.429%200%200%200-2.858%200v4.378H2.193a1.429%201.429%200%200%200%200%202.857h4.378v4.378a1.429%201.429%200%201%200%202.858%200V9.429h4.377a1.429%201.429%200%200%200%200-2.857H9.43V2.194Z%22%20clip-rule%3D%22evenodd%22%2F%3E%3C%2Fsvg%3E");
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center center;
  width: 0.904375rem;
  height: 0.904375rem;
  display: inline-block;
  margin: 0 0.75rem 0 0;
  -webkit-box-flex: 0;
          flex: none;
}
@media (min-width: 768px) {
  .c-accordion .accordion-icon {
    width: 1.26625rem;
    height: 1.26625rem;
  }
}

.c-accordion .accordion-trigger:focus .accordion-icon,
.c-accordion .accordion-trigger:hover .accordion-icon {
  background-image: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2216%22%20height%3D%2216%22%20fill%3D%22none%22%3E%3Cpath%20fill%3D%22%23190063%22%20fill-rule%3D%22evenodd%22%20d%3D%22M9.429%202.194a1.429%201.429%200%200%200-2.858%200v4.378H2.193a1.429%201.429%200%200%200%200%202.857h4.378v4.378a1.429%201.429%200%201%200%202.858%200V9.429h4.377a1.429%201.429%200%200%200%200-2.857H9.43V2.194Z%22%20clip-rule%3D%22evenodd%22%2F%3E%3C%2Fsvg%3E");
}

.c-accordion .accordion-trigger[aria-expanded=true] {
  color: var(--color-surf-nd--dark-purple);
}

.c-accordion .accordion-trigger[aria-expanded=true] .accordion-icon {
  background-image: url("data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2214%22%20height%3D%224%22%20fill%3D%22none%22%3E%3Cpath%20fill%3D%22%237828C8%22%20fill-rule%3D%22evenodd%22%20d%3D%22M.016%202c0-.789.64-1.428%201.428-1.428h11.112a1.429%201.429%200%200%201%200%202.857H1.444C.655%203.429.016%202.789.016%202Z%22%20clip-rule%3D%22evenodd%22%2F%3E%3C%2Fsvg%3E");
  background-size: contain;
  background-repeat: no-repeat;
  width: 0.873125rem;
  height: 0.17875rem;
}
@media (min-width: 768px) {
  .c-accordion .accordion-trigger[aria-expanded=true] .accordion-icon {
    width: 1.26625rem;
    height: 1.26625rem;
  }
}

.c-accordion .accordion-panel {
  max-height: 100vh;
  -webkit-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 350ms cubic-bezier(0.4, 0, 0.2, 1);
}
.c-accordion .accordion-panel p:first-child {
  margin-top: 0;
}
.c-accordion .accordion-panel p:last-child {
  margin-bottom: 0;
}
@media (min-width: 768px) {
  .c-accordion .accordion-panel .inner {
    margin: 2.5rem;
  }
}

.c-accordion .accordion-panel[hidden] {
  display: block;
  max-height: 0;
  overflow: hidden;
  -webkit-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  -o-transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
}