/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
.c-article__header-wrapper {
  max-width: 48.75rem;
  margin: 0 auto 1.75rem auto;
}

.c-article__breadcrumb-list {
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: flex;
}

.c-article__breadcrumb-item {
  margin: 0;
  display: inline-block;
}

.c-article__breadcrumb-link {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  color: var(--color-surf--forest);
  font-weight: var(--font-weight-bold);
  text-decoration: underline;
  letter-spacing: 0.08em;
}
.c-article__breadcrumb-link:hover {
  text-decoration: none;
}

.c-article__date {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  color: var(--color-surf--black);
  font-weight: var(--font-weight-bold);
  letter-spacing: 0.09375rem;
  margin: 0 0 1.75rem 0;
}

.c-article__breadcrumbs-date-wrapper {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-align: center;
          align-items: center;
  margin: 0 0 1.75rem 0;
}

.c-article__title {
  font-weight: var(--font-weight-bold);
  font-family: var(--font-family-body);
  font-size: var(--font-size-heading-one-alt);
  letter-spacing: 0.01em;
  line-height: var(--font-line-height-heading-one-alt);
}

.c-article__image-wrapper {
  max-width: 71.4375rem;
  margin: 0 auto 3.75rem auto;
}
.c-article__image-wrapper img {
  width: 100%;
  display: block;
}

.c-article__video-wrapper {
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  max-width: 71.4375rem;
  margin: 0 auto;
}

.c-article__video-wrapper iframe,
.c-article__video-wrapper object,
.c-article__video-wrapper embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.c-article__content-wrapper {
  max-width: 48.75rem;
  margin: 0 auto 1.75rem auto;
}

.c-article__overview p {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-large);
  line-height: var(--font-line-height-body-large);
}
.c-article__overview p:first-child {
  margin-top: 0;
}
.c-article__overview p:last-child {
  margin-bottom: 1.75rem;
}

.c-article__body .text-content > p:first-child {
  margin-top: 0;
}
.c-article__body .text-content > p:last-child {
  margin-bottom: 0;
}

.left-hook-divider.top {
  margin: 0 0 3.5rem 0;
  display: none;
}

.c-article__bottom-wrapper {
  max-width: 48.75rem;
  margin: 0 auto 5rem auto;
}

.c-article__author {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-medium);
  line-height: var(--font-line-height-body-medium);
  font-style: italic;
  margin: 0 0 1.75rem 0;
}

.c-article__categories {
  margin: 0 0 1rem 0;
  padding: 0;
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  -webkit-box-align: center;
          align-items: center;
}

.c-article__categories-item {
  display: inline-block;
  margin: 0 0.75rem 0.75rem 0;
}
.c-article__categories-item a {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  color: var(--color-surf--forest);
  padding: 0.125rem 0.5rem;
  background: var(--color-surf--cloud);
  text-decoration: none;
}
.c-article__categories-item a:hover {
  color: var(--color-surf--black);
  text-decoration: underline;
}

.c-article__contacts-title {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  margin: 0 0 1.75rem 0;
}

.c-article__contacts {
  margin: 0 0 1.75rem 0;
  padding: 0;
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 28px;
  gap: 28px;
  max-width: 31.875rem;
}
.c-article__contacts li {
  display: block;
  margin: 0;
}

.c-article__press-resources-wrapper {
  margin: 3.75rem 0 0 0;
}
@media (min-width: 768px) {
  .c-article__press-resources-wrapper {
    margin: 5rem 0 0 0;
  }
}

.c-article__press-resources-title {
  margin: 0 0 2.5rem 0;
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-heading);
  font-size: var(--font-size-heading-two);
  line-height: var(--font-line-height-heading-two);
}
@media (min-width: 768px) {
  .c-article__press-resources-title {
    font-weight: var(--font-weight-regular);
    font-family: var(--font-family-heading);
    font-size: var(--font-size-heading-two);
    line-height: var(--font-line-height-heading-two);
  }
}

@media (max-width: 1399.98px) {
  .c-article.c-article--horizontal {
    max-width: none;
    max-width: initial;
    margin: 0;
    width: auto;
    width: initial;
  }
  .c-article.c-article--horizontal .c-article__content-wrapper,
  .c-article.c-article--horizontal .c-article__bottom-wrapper,
  .c-article.c-article--horizontal .c-article__callout-wrapper,
  .c-article.c-article--horizontal .left-hook-divider.bottom,
  .c-article.c-article--horizontal .c-article__press-resources-wrapper {
    grid-area: content;
    max-width: 1380px;
    margin-left: auto;
    margin-right: auto;
    width: calc(100vw - var(--space-inset-x) * 2);
  }
}
@media (min-width: 1400px) {
  .c-article.c-article--horizontal .c-article__inner-wrapper {
    margin-top: 7.5rem;
    display: grid;
    grid-column-gap: 8.75rem;
    -webkit-column-gap: 8.75rem;
       -moz-column-gap: 8.75rem;
            column-gap: 8.75rem;
    grid-template-areas: "image image" "content bottom" "content list" "divider divider" "related related";
    grid-template-columns: 1fr 26.25rem;
  }
}
.c-article.c-article--horizontal .c-article__image-wrapper {
  grid-area: image;
  width: 100vw;
  max-width: 100%;
  margin: 0 0 2rem 0;
}
@media (min-width: 768px) {
  .c-article.c-article--horizontal .c-article__image-wrapper {
    margin: 0 0 2.5rem 0;
  }
}
@media (min-width: 1024px) {
  .c-article.c-article--horizontal .c-article__image-wrapper {
    margin: 0 0 3.75rem 0;
  }
}
@media (min-width: 1400px) {
  .c-article.c-article--horizontal .c-article__image-wrapper {
    max-width: 1380px;
    margin-left: auto;
    margin-right: auto;
    width: calc(100vw - var(--space-inset-x) * 2);
  }
}
.c-article.c-article--horizontal .c-article__image-wrapper img {
  width: 100%;
}
.c-article.c-article--horizontal .c-article__content-wrapper {
  grid-area: content;
}
@media (min-width: 1400px) {
  .c-article.c-article--horizontal .c-article__content-wrapper {
    background: var(--color-surf--white);
    padding: 2.5rem 2.5rem 0 0;
    margin: -150px 0 0 0;
    max-width: none;
    max-width: initial;
  }
}
@media (max-width: 1399.98px) {
  .c-article.c-article--horizontal .c-article__header-wrapper {
    max-width: 43.75rem;
    margin: 0 0 1.75rem 0;
  }
}
@media (min-width: 1400px) {
  .c-article.c-article--horizontal .c-article__header-wrapper {
    max-width: none;
    max-width: initial;
    margin: 0 0 1.75rem 0;
  }
}
@media (max-width: 1399.98px) {
  .c-article.c-article--horizontal .c-article__overview,
  .c-article.c-article--horizontal .c-article__body {
    max-width: 43.75rem;
    margin: 0 0 1.75rem 0;
  }
}
@media (max-width: 1399.98px) {
  .c-article.c-article--horizontal .left-hook-divider.top {
    display: block;
  }
}
.c-article.c-article--horizontal .c-article__bottom-wrapper {
  margin-bottom: 1.25rem;
}
@media (min-width: 768px) {
  .c-article.c-article--horizontal .c-article__bottom-wrapper {
    margin-bottom: 2.9375rem;
  }
}
@media (min-width: 1400px) {
  .c-article.c-article--horizontal .c-article__bottom-wrapper {
    grid-area: bottom;
    max-width: none;
    max-width: initial;
    margin: 0;
  }
}
@media (max-width: 1399.98px) {
  .c-article.c-article--horizontal .c-article__categories {
    max-width: 43.75rem;
  }
}
@media (min-width: 1400px) {
  .c-article.c-article--horizontal .c-article__callout-wrapper {
    grid-area: list;
  }
  .c-article.c-article--horizontal .c-article__callout-wrapper .cl-component--list {
    max-width: 100%;
    width: 100%;
  }
  .c-article.c-article--horizontal .c-article__callout-wrapper .cl-component--list .c-list__items {
    grid-template-columns: 1fr;
  }
}
.c-article.c-article--horizontal .left-hook-divider.bottom {
  grid-area: divider;
  margin-top: 2rem;
}
@media (min-width: 768px) {
  .c-article.c-article--horizontal .left-hook-divider.bottom {
    margin-top: 3.75rem;
  }
}
@media (min-width: 1400px) {
  .c-article.c-article--horizontal .left-hook-divider.bottom {
    margin-top: 7.5rem;
  }
}
.c-article.c-article--horizontal .c-article__press-resources-wrapper {
  grid-area: related;
}

@media (min-width: 1024px) {
  .c-article.c-article--vertical .c-article__inner-wrapper {
    display: grid;
    grid-column-gap: 5rem;
    -webkit-column-gap: 5rem;
       -moz-column-gap: 5rem;
            column-gap: 5rem;
    grid-template-areas: "content image" "content bottom" "content list" "divider divider" "related related";
    grid-template-columns: 1fr 26.25rem;
  }
}
@media (min-width: 1400px) {
  .c-article.c-article--vertical .c-article__inner-wrapper {
    -webkit-column-gap: 11.25rem;
       -moz-column-gap: 11.25rem;
            column-gap: 11.25rem;
    grid-template-columns: 1fr 39.375rem;
  }
}
.c-article.c-article--vertical .c-article__inner-wrapper .c-article__image-wrapper {
  grid-area: image;
  margin: 0 auto 2.5rem auto;
}
@media (min-width: 1024px) {
  .c-article.c-article--vertical .c-article__inner-wrapper .c-article__image-wrapper {
    margin: 0 0 2.5rem 0;
  }
}
.c-article.c-article--vertical .c-article__inner-wrapper .c-article__image-wrapper img {
  max-height: 22.5rem;
  -o-object-fit: contain;
     object-fit: contain;
}
@media (min-width: 1024px) {
  .c-article.c-article--vertical .c-article__inner-wrapper .c-article__image-wrapper img {
    max-height: none;
    max-height: initial;
    -o-object-fit: initial;
       object-fit: initial;
  }
}
.c-article.c-article--vertical .c-article__inner-wrapper .c-article__content-wrapper {
  grid-area: content;
  margin-bottom: 0;
  padding-bottom: 0;
  border-bottom: none;
}
.c-article.c-article--vertical .c-article__inner-wrapper .c-article__bottom-wrapper {
  grid-area: bottom;
  max-width: 100%;
  width: 100%;
  margin-bottom: 1.625rem;
}
.c-article.c-article--vertical .c-article__inner-wrapper .c-article__callout-wrapper {
  grid-area: list;
}
.c-article.c-article--vertical .c-article__inner-wrapper .c-article__callout-wrapper .cl-component--list {
  max-width: 100%;
  width: 100%;
}
.c-article.c-article--vertical .c-article__inner-wrapper .c-article__callout-wrapper .cl-component--list .c-list__items {
  grid-template-columns: 1fr;
}
.c-article.c-article--vertical .c-article__inner-wrapper .c-article__press-resources-wrapper {
  grid-area: related;
}
.c-article.c-article--vertical .c-article__inner-wrapper .left-hook-divider.bottom {
  grid-area: divider;
  margin-top: 2rem;
}
@media (min-width: 768px) {
  .c-article.c-article--vertical .c-article__inner-wrapper .left-hook-divider.bottom {
    margin-top: 3.625rem;
  }
}
@media (min-width: 1400px) {
  .c-article.c-article--vertical .c-article__inner-wrapper .left-hook-divider.bottom {
    margin-top: 6.5625rem;
  }
}

.c-article.c-article--video .c-article__inner-wrapper .left-hook-divider.bottom {
  margin-top: 2rem;
}
@media (min-width: 768px) {
  .c-article.c-article--video .c-article__inner-wrapper .left-hook-divider.bottom {
    margin-top: 3rem;
  }
}
@media (min-width: 1400px) {
  .c-article.c-article--video .c-article__inner-wrapper .left-hook-divider.bottom {
    margin-top: 4.1875rem;
  }
}

.c-article.c-article--no-media .c-article__inner-wrapper .left-hook-divider.bottom {
  margin-top: 2rem;
}
@media (min-width: 768px) {
  .c-article.c-article--no-media .c-article__inner-wrapper .left-hook-divider.bottom {
    margin-top: 3rem;
  }
}
@media (min-width: 1400px) {
  .c-article.c-article--no-media .c-article__inner-wrapper .left-hook-divider.bottom {
    margin-top: 6.25rem;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYnJhcmllcy9wYXJ0aWFscy9mdW5jdGlvbnMvX2JwLnNjc3MiLCJsaWJyYXJpZXMvcGFydGlhbHMvc2V0dGluZ3MvX2JwLnNjc3MiLCJsaWJyYXJpZXMvcGFydGlhbHMvbWl4aW5zL19icC5zY3NzIiwidGVtcGxhdGVzL2NvbXBvbmVudHMvYXJ0aWNsZS1wYWdlL3NyYy9hcnRpY2xlLXBhZ2Uuc2NzcyIsInRlbXBsYXRlcy9jb21wb25lbnRzL2FydGljbGUtcGFnZS9zcmMvYXJ0aWNsZS1wYWdlLmNzcyIsImxpYnJhcmllcy9wYXJ0aWFscy9taXhpbnMvX2ZvbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7OztFQUFBO0FBYUE7Ozt1Q0FBQTtBQWdCQTs7O3VDQUFBO0FBYUE7Ozs7O3VDQUFBO0FBZUE7Ozs7dUNBQUE7QUF6REE7Ozs7Ozs7Ozs7RUFBQTtBQWFBOzs7dUNBQUE7QUFnQkE7Ozt1Q0FBQTtBQWFBOzs7Ozt1Q0FBQTtBQWVBOzs7O3VDQUFBO0FDekRBOzs7RUFBQTtBQUtBOzt1Q0FBQTtBQ0xBOzs7RUFBQTtBQU1BOzt1Q0FBQTtBQ0pBO0VBQ0UsbUJBQUE7RUFDQSwyQkFBQTtBQ3lFRjs7QUR0RUE7RUFDRSxTQUFBO0VBQ0EsVUFBQTtFQUNBLG9CQUFBO0VBQUEsYUFBQTtBQ3lFRjs7QUR0RUE7RUFDRSxTQUFBO0VBQ0EscUJBQUE7QUN5RUY7O0FEdEVBO0VFNkdFLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSx5Q0FBQTtFQUNBLHdDQUFBO0VBQ0Esb0NBQUE7RUFDQSwrQ0FBQTtFQUNBLGlEQUFBO0VGakhBLGdDQUFBO0VBQ0Esb0NBQUE7RUFDQSwwQkFBQTtFQUNBLHNCQUFBO0FDK0VGO0FEOUVFO0VBQ0UscUJBQUE7QUNnRko7O0FENUVBO0VFa0dFLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSx5Q0FBQTtFQUNBLHdDQUFBO0VBQ0Esb0NBQUE7RUFDQSwrQ0FBQTtFQUNBLGlEQUFBO0VGdEdBLCtCQUFBO0VBQ0Es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Q29IRjtBQUNGO0FEbEhFO0VBQ0UsZ0JBQUE7RUFDQSwwQkFBQTtBQ29ISjtBRjdhSTtFQ3VURjtJQUlJLG9CQUFBO0VDc0hKO0FBQ0Y7QURySEk7RUFDRSxtQkFBQTtFQUNBLHNCQUFBO0tBQUEsbUJBQUE7QUN1SE47QUZ0Ykk7RUM2VEE7SUFJSSxnQkFBQTtJQUFBLG1CQUFBO0lBQ0Esc0JBQUE7T0FBQSxtQkFBQTtFQ3lITjtBQUNGO0FEckhFO0VBQ0Usa0JBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7QUN1SEo7QURwSEU7RUFDRSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0VBQ0EsdUJBQUE7QUNzSEo7QURuSEU7RUFDRSxlQUFBO0FDcUhKO0FEcEhJO0VBQ0UsZUFBQTtFQUNBLFdBQUE7QUNzSE47QURySE07RUFDRSwwQkFBQTtBQ3VIUjtBRGxIRTtFQUNFLGtCQUFBO0FDb0hKO0FEakhFO0VBQ0Usa0JBQUE7RUFDQSxnQkFBQTtBQ21ISjtBRnpkSTtFQ29XRjtJQUlJLG9CQUFBO0VDcUhKO0FBQ0Y7QUY5ZEk7RUNvV0Y7SUFPSSxxQkFBQTtFQ3VISjtBQUNGOztBRGpIRTtFQUNFLGdCQUFBO0FDb0hKO0FGdmVJO0VDa1hGO0lBR0ksZ0JBQUE7RUNzSEo7QUFDRjtBRjVlSTtFQ2tYRjtJQU1JLHFCQUFBO0VDd0hKO0FBQ0Y7O0FEbEhFO0VBQ0UsZ0JBQUE7QUNxSEo7QUZyZkk7RUMrWEY7SUFHSSxnQkFBQTtFQ3VISjtBQUNGO0FGMWZJO0VDK1hGO0lBTUksbUJBQUE7RUN5SEo7QUFDRiIsImZpbGUiOiJ0ZW1wbGF0ZXMvY29tcG9uZW50cy9hcnRpY2xlLXBhZ2Uvc3JjL2FydGljbGUtcGFnZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZ1bmN0aW9ucyAtIEJyZWFrcG9pbnRzXG4gKiBCcmVha3BvaW50IHZpZXdwb3J0IHNpemVzIGFuZCBtZWRpYSBxdWVyaWVzLiBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksIG9yZGVyIGZyb21cbiAqIHNtYWxsIHRvIGxhcmdlOiAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpLiBUaGUgbWFwIGRlZmluZWQgaW4gdGhlIGAkZ3JpZC1icmVha3BvaW50c2BcbiAqIGdsb2JhbCB2YXJpYWJsZSBpcyB1c2VkIGFzIHRoZSBgJGJyZWFrcG9pbnRzYCBhcmd1bWVudCBieSBkZWZhdWx0LlxuICpcbiAqIC0gMDEgLSBCcmVha3BvaW50IE5leHRcbiAqIC0gMDIgLSBCcmVha3BvaW50IE1pbmltdW1cbiAqIC0gMDMgLSBCcmVha3BvaW50IE1heGltdW1cbiAqIC0gMDQgLSBCcmVha3BvaW50IEluZml4XG4gKi9cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMSAtIEJyZWFrcG9pbnQgTmV4dFxuICBOYW1lIG9mIHRoZSBuZXh0IGJyZWFrcG9pbnQsIG9yIG51bGwgZm9yIHRoZSBsYXN0IGJyZWFrcG9pbnQuXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC1uYW1lczogbWFwLWtleXMoJGJyZWFrcG9pbnRzKSkge1xuICAkbjogaW5kZXgoJGJyZWFrcG9pbnQtbmFtZXMsICRuYW1lKTtcbiAgQGlmIG5vdCAkbiB7XG4gICAgQGVycm9yIFwiYnJlYWtwb2ludCBgI3skbmFtZX1gIG5vdCBmb3VuZCBpbiBgI3skYnJlYWtwb2ludHN9YFwiO1xuICB9XG4gIEByZXR1cm4gaWYoJG4gPCBsZW5ndGgoJGJyZWFrcG9pbnQtbmFtZXMpLCBudGgoJGJyZWFrcG9pbnQtbmFtZXMsICRuICsgMSksIG51bGwpO1xufVxuXG5cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMiAtIEJyZWFrcG9pbnQgTWluaW11bVxuICBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbWluICE9IDAsICRtaW4sIG51bGwpO1xufVxuXG5cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMyAtIEJyZWFrcG9pbnQgTWF4aW11bVxuICBUaGUgbWF4aW11bSB2YWx1ZSBpcyByZWR1Y2VkIGJ5IDAuMDJweCB0byB3b3JrIGFyb3VuZCB0aGUgbGltaXRhdGlvbnMgb2YgYG1pbi1gIGFuZCBgbWF4LWAgcHJlZml4ZXMgYW5kIHZpZXdwb3J0c1xuICB3aXRoIGZyYWN0aW9uYWwgd2lkdGhzLiBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL21lZGlhcXVlcmllcy00LyNtcS1taW4tbWF4LiBVc2VzIDAuMDJweCByYXRoZXIgdGhhbiAwLjAxcHggdG8gd29ya1xuICBhcm91bmQgYSBjdXJyZW50IHJvdW5kaW5nIGJ1ZyBpbiBTYWZhcmkuIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTc4MjYxXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1heDogbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbWF4IGFuZCAkbWF4ID4gMCwgJG1heCAtIC4wMiwgbnVsbCk7XG59XG5cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDA0IC0gQnJlYWtwb2ludCBJbmZpeFxuICBSZXR1cm5zIGEgYmxhbmsgc3RyaW5nIGlmIHNtYWxsZXN0IGJyZWFrcG9pbnQsIG90aGVyd2lzZSByZXR1cm5zIHRoZSBuYW1lIHdpdGggYSBkYXNoIGluIGZyb250LiBVc2VmdWwgZm9yIG1ha2luZ1xuICByZXNwb25zaXZlIHV0aWxpdGllcy5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbkBmdW5jdGlvbiBicmVha3BvaW50LWluZml4KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gIEByZXR1cm4gaWYoYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cykgPT0gbnVsbCwgXCJcIiwgXCItI3skbmFtZX1cIik7XG59XG4iLCIvKipcbiAqIFNldHRpbmdzIC0gQnJlYWtwb2ludHNcbiAqIC0gMDEgLSBNYXBwaW5nXG4gKi9cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDEgLSBNYXBwaW5nXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4kZ3JpZC1icmVha3BvaW50czogKFxuICB4c21hbGw6IDBweCxcbiAgc21hbGw6IDU3NnB4LFxuICBtZWRpdW06IDc2OHB4LFxuICBsYXJnZTogMTAyNHB4LFxuICB4bGFyZ2U6IDE0MDBweCxcbiAgeHhsYXJnZTogMTQwMHB4LFxuICB4eHhsYXJnZTogMTYyMHB4LFxuKTtcbiIsIi8qKlxuICogTWl4aW5zIC0gQnJlYWtwb2ludHNcbiAqIC0gMDEgLSBCcmVha3BvaW50c1xuICovXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDEgLSBCcmVha3BvaW50c1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuLy8gTWVkaWEgb2YgYXQgbGVhc3QgdGhlIG1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LlxuQG1peGluIGJwLW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgQGlmICRtaW4ge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vIE1lZGlhIG9mIGF0IG1vc3QgdGhlIG1heGltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBsYXJnZXN0IGJyZWFrcG9pbnQuXG5AbWl4aW4gYnAtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAaWYgJG1heCB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gTWVkaWEgdGhhdCBzcGFucyBtdWx0aXBsZSBicmVha3BvaW50IHdpZHRocy5cbkBtaXhpbiBicC1iZXR3ZWVuKCRsb3dlciwgJHVwcGVyLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRsb3dlciwgJGJyZWFrcG9pbnRzKTtcbiAgJG1heDogYnJlYWtwb2ludC1tYXgoJHVwcGVyLCAkYnJlYWtwb2ludHMpO1xuXG4gIEBpZiAkbWluICE9IG51bGwgYW5kICRtYXggIT0gbnVsbCB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIGFuZCAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1heCA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRsb3dlciwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1pbiA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJHVwcGVyLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG4vLyBNZWRpYSBiZXR3ZWVuIHRoZSBicmVha3BvaW50J3MgbWluaW11bSBhbmQgbWF4aW11bSB3aWR0aHMuXG4vLyBObyBtaW5pbXVtIGZvciB0aGUgc21hbGxlc3QgYnJlYWtwb2ludCwgYW5kIG5vIG1heGltdW0gZm9yIHRoZSBsYXJnZXN0IG9uZS5cbkBtaXhpbiBicC1vbmx5KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcblxuICBAaWYgJG1pbiAhPSBudWxsIGFuZCAkbWF4ICE9IG51bGwge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSBhbmQgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtYXggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1pbiA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJG5hbWUsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG4iLCJAaW1wb3J0IFwiX3BhcnRpYWxzXCI7XG5cbi5jLWFydGljbGVfX2hlYWRlci13cmFwcGVyIHtcbiAgbWF4LXdpZHRoOiByZW0oNzgwcHgpO1xuICBtYXJnaW46IDAgYXV0byByZW0oMjhweCkgYXV0bztcbn1cblxuLmMtYXJ0aWNsZV9fYnJlYWRjcnVtYi1saXN0IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uYy1hcnRpY2xlX19icmVhZGNydW1iLWl0ZW0ge1xuICBtYXJnaW46IDA7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmMtYXJ0aWNsZV9fYnJlYWRjcnVtYi1saW5rIHtcbiAgQGluY2x1ZGUgc3VyZi1mb250LWxhYmVsLXBlZXdlZTtcbiAgY29sb3I6IHZhcigtLWNvbG9yLXN1cmYtLWZvcmVzdCk7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1ib2xkKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA4ZW07XG4gICY6aG92ZXIge1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxufVxuXG4uYy1hcnRpY2xlX19kYXRlIHtcbiAgQGluY2x1ZGUgc3VyZi1mb250LWxhYmVsLXBlZXdlZTtcbiAgY29sb3I6IHZhcigtLWNvbG9yLXN1cmYtLWJsYWNrKTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LWJvbGQpO1xuICBsZXR0ZXItc3BhY2luZzogcmVtKDEuNXB4KTtcbiAgbWFyZ2luOiAwIDAgcmVtKDI4cHgpIDA7XG59XG5cbi5jLWFydGljbGVfX2JyZWFkY3J1bWJzLWRhdGUtd3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAwIDAgcmVtKDI4cHgpIDA7XG59XG5cbi5jLWFydGljbGVfX3RpdGxlIHtcbiAgQGluY2x1ZGUgc3VyZi1mb250LWhlYWRpbmctb25lLWFsdDtcbn1cblxuLmMtYXJ0aWNsZV9faW1hZ2Utd3JhcHBlciB7XG4gIG1heC13aWR0aDogcmVtKDExNDNweCk7XG4gIG1hcmdpbjogMCBhdXRvIHJlbSg2MHB4KSBhdXRvO1xuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG5cbi5jLWFydGljbGVfX3ZpZGVvLXdyYXBwZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmctYm90dG9tOiA1Ni4yNSU7XG4gIGhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgbWF4LXdpZHRoOiByZW0oMTE0M3B4KTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5jLWFydGljbGVfX3ZpZGVvLXdyYXBwZXIgaWZyYW1lLFxuLmMtYXJ0aWNsZV9fdmlkZW8td3JhcHBlciBvYmplY3QsXG4uYy1hcnRpY2xlX192aWRlby13cmFwcGVyIGVtYmVkIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5jLWFydGljbGVfX2NvbnRlbnQtd3JhcHBlciB7XG4gIG1heC13aWR0aDogcmVtKDc4MHB4KTtcbiAgbWFyZ2luOiAwIGF1dG8gcmVtKDI4cHgpIGF1dG87XG59XG5cbi5jLWFydGljbGVfX292ZXJ2aWV3IHtcbiAgcCB7XG4gICAgQGluY2x1ZGUgc3VyZi1mb250LWJvZHktbGFyZ2U7XG4gICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICBtYXJnaW4tdG9wOiAwO1xuICAgIH1cbiAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLWJvdHRvbTogcmVtKDI4cHgpO1xuICAgIH1cbiAgfVxufVxuXG4uYy1hcnRpY2xlX19ib2R5IHtcbiAgLnRleHQtY29udGVudCA+IHAge1xuICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG4gICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxuICB9XG59XG5cbi5sZWZ0LWhvb2stZGl2aWRlci50b3Age1xuICBtYXJnaW46IDAgMCByZW0oNTZweCkgMDtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmMtYXJ0aWNsZV9fYm90dG9tLXdyYXBwZXIge1xuICBtYXgtd2lkdGg6IHJlbSg3ODBweCk7XG4gIG1hcmdpbjogMCBhdXRvIHJlbSg4MHB4KSBhdXRvO1xufVxuXG4uYy1hcnRpY2xlX19hdXRob3Ige1xuICBAaW5jbHVkZSBzdXJmLWZvbnQtYm9keS1tZWRpdW07XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgbWFyZ2luOiAwIDAgcmVtKDI4cHgpIDA7XG59XG5cbi5jLWFydGljbGVfX2NhdGVnb3JpZXMge1xuICBtYXJnaW46IDAgMCByZW0oMTZweCkgMDtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uYy1hcnRpY2xlX19jYXRlZ29yaWVzLWl0ZW0ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbjogMCByZW0oMTJweCkgcmVtKDEycHgpIDA7XG4gIGEge1xuICAgIEBpbmNsdWRlIHN1cmYtZm9udC1sYWJlbC1wZWV3ZWU7XG4gICAgY29sb3I6IHZhcigtLWNvbG9yLXN1cmYtLWZvcmVzdCk7XG4gICAgcGFkZGluZzogcmVtKDJweCkgcmVtKDhweCk7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3Itc3VyZi0tY2xvdWQpO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAmOmhvdmVyIHtcbiAgICAgIGNvbG9yOiB2YXIoLS1jb2xvci1zdXJmLS1ibGFjayk7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gIH1cbn1cblxuLmMtYXJ0aWNsZV9fY29udGFjdHMtdGl0bGUge1xuICBAaW5jbHVkZSBzdXJmLWZvbnQtbGFiZWwtcGVld2VlO1xuICBtYXJnaW46IDAgMCByZW0oMjhweCkgMDtcbn1cblxuLmMtYXJ0aWNsZV9fY29udGFjdHMge1xuICBtYXJnaW46IDAgMCByZW0oMjhweCkgMDtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIGdhcDogMjhweDtcbiAgbWF4LXdpZHRoOiByZW0oNTEwcHgpO1xuICBsaSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwO1xuICB9XG59XG5cbi5jLWFydGljbGVfX3ByZXNzLXJlc291cmNlcy13cmFwcGVyIHtcbiAgbWFyZ2luOiByZW0oNjBweCkgMCAwIDA7XG4gIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICBtYXJnaW46IHJlbSg4MHB4KSAwIDAgMDtcbiAgfVxufVxuXG4uYy1hcnRpY2xlX19wcmVzcy1yZXNvdXJjZXMtdGl0bGUge1xuICBtYXJnaW46IDAgMCByZW0oNDBweCkgMDtcbiAgQGluY2x1ZGUgc3VyZi1mb250LWhlYWRpbmctdHdvO1xuICBAaW5jbHVkZSBicC1taW4obWVkaXVtKSB7XG4gICAgQGluY2x1ZGUgc3VyZi1mb250LWhlYWRpbmctdHdvO1xuICB9XG59XG5cbi8vIEhvcml6b250YWwgSW1hZ2Vcbi5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIHtcbiAgQGluY2x1ZGUgYnAtbWF4KHhsYXJnZSkge1xuICAgIG1heC13aWR0aDogdW5zZXQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIHdpZHRoOiB1bnNldDtcbiAgICAuYy1hcnRpY2xlX19jb250ZW50LXdyYXBwZXIsXG4gICAgLmMtYXJ0aWNsZV9fYm90dG9tLXdyYXBwZXIsXG4gICAgLmMtYXJ0aWNsZV9fY2FsbG91dC13cmFwcGVyLFxuICAgIC5sZWZ0LWhvb2stZGl2aWRlci5ib3R0b20sXG4gICAgLmMtYXJ0aWNsZV9fcHJlc3MtcmVzb3VyY2VzLXdyYXBwZXIge1xuICAgICAgZ3JpZC1hcmVhOiBjb250ZW50O1xuICAgICAgbWF4LXdpZHRoOiAxMzgwcHg7XG4gICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICAgIHdpZHRoOiBjYWxjKDEwMHZ3IC0gdmFyKC0tc3BhY2UtaW5zZXQteCkgKiAyKTtcbiAgICB9XG4gIH1cblxuICAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIHtcbiAgICBAaW5jbHVkZSBicC1taW4oeGxhcmdlKSB7XG4gICAgICBtYXJnaW4tdG9wOiByZW0oMTIwcHgpO1xuICAgICAgLy8gR1JJRFxuICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgIGNvbHVtbi1nYXA6IHJlbSgxNDBweCk7XG4gICAgICBncmlkLXRlbXBsYXRlLWFyZWFzOlxuICAgICAgICBcImltYWdlIGltYWdlXCJcbiAgICAgICAgXCJjb250ZW50IGJvdHRvbVwiXG4gICAgICAgIFwiY29udGVudCBsaXN0XCJcbiAgICAgICAgXCJkaXZpZGVyIGRpdmlkZXJcIlxuICAgICAgICBcInJlbGF0ZWQgcmVsYXRlZFwiO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgcmVtKDQyMHB4KTtcbiAgICB9XG4gIH1cbiAgLmMtYXJ0aWNsZV9faW1hZ2Utd3JhcHBlciB7XG4gICAgZ3JpZC1hcmVhOiBpbWFnZTtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMCAwIHJlbSgzMnB4KSAwO1xuICAgIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICAgIG1hcmdpbjogMCAwIHJlbSg0MHB4KSAwO1xuICAgIH1cbiAgICBAaW5jbHVkZSBicC1taW4obGFyZ2UpIHtcbiAgICAgIG1hcmdpbjogMCAwIHJlbSg2MHB4KSAwO1xuICAgIH1cbiAgICBAaW5jbHVkZSBicC1taW4oeGxhcmdlKSB7XG4gICAgICBtYXgtd2lkdGg6IDEzODBweDtcbiAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgICAgd2lkdGg6IGNhbGMoMTAwdncgLSB2YXIoLS1zcGFjZS1pbnNldC14KSAqIDIpO1xuICAgIH1cbiAgICBpbWcge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG4gIC5jLWFydGljbGVfX2NvbnRlbnQtd3JhcHBlciB7XG4gICAgZ3JpZC1hcmVhOiBjb250ZW50O1xuICAgIEBpbmNsdWRlIGJwLW1pbih4bGFyZ2UpIHtcbiAgICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yLXN1cmYtLXdoaXRlKTtcbiAgICAgIHBhZGRpbmc6IHJlbSg0MHB4KSByZW0oNDBweCkgMCAwO1xuICAgICAgbWFyZ2luOiAtMTUwcHggMCAwIDA7XG4gICAgICBtYXgtd2lkdGg6IHVuc2V0O1xuICAgIH1cbiAgfVxuICAuYy1hcnRpY2xlX19oZWFkZXItd3JhcHBlciB7XG4gICAgQGluY2x1ZGUgYnAtbWF4KHhsYXJnZSkge1xuICAgICAgbWF4LXdpZHRoOiByZW0oNzAwcHgpO1xuICAgICAgbWFyZ2luOiAwIDAgcmVtKDI4cHgpIDA7XG4gICAgfVxuICAgIEBpbmNsdWRlIGJwLW1pbih4bGFyZ2UpIHtcbiAgICAgIG1heC13aWR0aDogdW5zZXQ7XG4gICAgICBtYXJnaW46IDAgMCByZW0oMjhweCkgMDtcbiAgICB9XG4gIH1cblxuICAuYy1hcnRpY2xlX19vdmVydmlldyxcbiAgLmMtYXJ0aWNsZV9fYm9keSB7XG4gICAgQGluY2x1ZGUgYnAtbWF4KHhsYXJnZSkge1xuICAgICAgbWF4LXdpZHRoOiByZW0oNzAwcHgpO1xuICAgICAgbWFyZ2luOiAwIDAgcmVtKDI4cHgpIDA7XG4gICAgfVxuICB9XG4gIC5sZWZ0LWhvb2stZGl2aWRlci50b3Age1xuICAgIEBpbmNsdWRlIGJwLW1heCh4bGFyZ2UpIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIH1cbiAgfVxuICAuYy1hcnRpY2xlX19ib3R0b20td3JhcHBlciB7XG4gICAgbWFyZ2luLWJvdHRvbTogcmVtKDIwcHgpO1xuICAgIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IHJlbSg0N3B4KTtcbiAgICB9XG4gICAgQGluY2x1ZGUgYnAtbWluKHhsYXJnZSkge1xuICAgICAgZ3JpZC1hcmVhOiBib3R0b207XG4gICAgICBtYXgtd2lkdGg6IHVuc2V0O1xuICAgICAgbWFyZ2luOiAwO1xuICAgIH1cbiAgfVxuICAuYy1hcnRpY2xlX19jYXRlZ29yaWVzIHtcbiAgICBAaW5jbHVkZSBicC1tYXgoeGxhcmdlKSB7XG4gICAgICBtYXgtd2lkdGg6IHJlbSg3MDBweCk7XG4gICAgfVxuICB9XG4gIC5jLWFydGljbGVfX2NhbGxvdXQtd3JhcHBlciB7XG4gICAgQGluY2x1ZGUgYnAtbWluKHhsYXJnZSkge1xuICAgICAgZ3JpZC1hcmVhOiBsaXN0O1xuICAgICAgLmNsLWNvbXBvbmVudC0tbGlzdCB7XG4gICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIC5jLWxpc3RfX2l0ZW1zIHtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuICAubGVmdC1ob29rLWRpdmlkZXIuYm90dG9tIHtcbiAgICBncmlkLWFyZWE6IGRpdmlkZXI7XG4gICAgbWFyZ2luLXRvcDogcmVtKDMycHgpO1xuICAgIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICAgIG1hcmdpbi10b3A6IHJlbSg2MHB4KTtcbiAgICB9XG4gICAgQGluY2x1ZGUgYnAtbWluKHhsYXJnZSkge1xuICAgICAgbWFyZ2luLXRvcDogcmVtKDEyMHB4KTtcbiAgICB9XG4gIH1cbiAgLmMtYXJ0aWNsZV9fcHJlc3MtcmVzb3VyY2VzLXdyYXBwZXIge1xuICAgIGdyaWQtYXJlYTogcmVsYXRlZDtcbiAgfVxufVxuXG4vLyBWZXJ0aWNhbCBJbWFnZVxuLmMtYXJ0aWNsZS5jLWFydGljbGUtLXZlcnRpY2FsIC5jLWFydGljbGVfX2lubmVyLXdyYXBwZXIge1xuICBAaW5jbHVkZSBicC1taW4obGFyZ2UpIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGNvbHVtbi1nYXA6IHJlbSg4MHB4KTtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOlxuICAgICAgXCJjb250ZW50IGltYWdlXCJcbiAgICAgIFwiY29udGVudCBib3R0b21cIlxuICAgICAgXCJjb250ZW50IGxpc3RcIlxuICAgICAgXCJkaXZpZGVyIGRpdmlkZXJcIlxuICAgICAgXCJyZWxhdGVkIHJlbGF0ZWRcIjtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciByZW0oNDIwcHgpO1xuICB9XG4gIEBpbmNsdWRlIGJwLW1pbih4bGFyZ2UpIHtcbiAgICBjb2x1bW4tZ2FwOiByZW0oMTgwcHgpO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIHJlbSg2MzBweCk7XG4gIH1cblxuICAuYy1hcnRpY2xlX19pbWFnZS13cmFwcGVyIHtcbiAgICBncmlkLWFyZWE6IGltYWdlO1xuICAgIG1hcmdpbjogMCBhdXRvIHJlbSg0MHB4KSBhdXRvO1xuICAgIEBpbmNsdWRlIGJwLW1pbihsYXJnZSkge1xuICAgICAgbWFyZ2luOiAwIDAgcmVtKDQwcHgpIDA7XG4gICAgfVxuICAgIGltZyB7XG4gICAgICBtYXgtaGVpZ2h0OiByZW0oMzYwcHgpO1xuICAgICAgb2JqZWN0LWZpdDogY29udGFpbjtcbiAgICAgIEBpbmNsdWRlIGJwLW1pbihsYXJnZSkge1xuICAgICAgICBtYXgtaGVpZ2h0OiB1bnNldDtcbiAgICAgICAgb2JqZWN0LWZpdDogdW5zZXQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLmMtYXJ0aWNsZV9fY29udGVudC13cmFwcGVyIHtcbiAgICBncmlkLWFyZWE6IGNvbnRlbnQ7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDtcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xuICB9XG5cbiAgLmMtYXJ0aWNsZV9fYm90dG9tLXdyYXBwZXIge1xuICAgIGdyaWQtYXJlYTogYm90dG9tO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXJnaW4tYm90dG9tOiByZW0oMjZweCk7XG4gIH1cblxuICAuYy1hcnRpY2xlX19jYWxsb3V0LXdyYXBwZXIge1xuICAgIGdyaWQtYXJlYTogbGlzdDtcbiAgICAuY2wtY29tcG9uZW50LS1saXN0IHtcbiAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgLmMtbGlzdF9faXRlbXMge1xuICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAuYy1hcnRpY2xlX19wcmVzcy1yZXNvdXJjZXMtd3JhcHBlciB7XG4gICAgZ3JpZC1hcmVhOiByZWxhdGVkO1xuICB9XG5cbiAgLmxlZnQtaG9vay1kaXZpZGVyLmJvdHRvbSB7XG4gICAgZ3JpZC1hcmVhOiBkaXZpZGVyO1xuICAgIG1hcmdpbi10b3A6IHJlbSgzMnB4KTtcbiAgICBAaW5jbHVkZSBicC1taW4obWVkaXVtKSB7XG4gICAgICBtYXJnaW4tdG9wOiByZW0oNThweCk7XG4gICAgfVxuICAgIEBpbmNsdWRlIGJwLW1pbih4bGFyZ2UpIHtcbiAgICAgIG1hcmdpbi10b3A6IHJlbSgxMDVweCk7XG4gICAgfVxuICB9XG59XG5cbi8vIFZpZGVvXG4uYy1hcnRpY2xlLmMtYXJ0aWNsZS0tdmlkZW8gLmMtYXJ0aWNsZV9faW5uZXItd3JhcHBlciB7XG4gIC5sZWZ0LWhvb2stZGl2aWRlci5ib3R0b20ge1xuICAgIG1hcmdpbi10b3A6IHJlbSgzMnB4KTtcbiAgICBAaW5jbHVkZSBicC1taW4obWVkaXVtKSB7XG4gICAgICBtYXJnaW4tdG9wOiByZW0oNDhweCk7XG4gICAgfVxuICAgIEBpbmNsdWRlIGJwLW1pbih4bGFyZ2UpIHtcbiAgICAgIG1hcmdpbi10b3A6IHJlbSg2N3B4KTtcbiAgICB9XG4gIH1cbn1cblxuLy8gTm8gTWVkaWFcbi5jLWFydGljbGUuYy1hcnRpY2xlLS1uby1tZWRpYSAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIHtcbiAgLmxlZnQtaG9vay1kaXZpZGVyLmJvdHRvbSB7XG4gICAgbWFyZ2luLXRvcDogcmVtKDMycHgpO1xuICAgIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICAgIG1hcmdpbi10b3A6IHJlbSg0OHB4KTtcbiAgICB9XG4gICAgQGluY2x1ZGUgYnAtbWluKHhsYXJnZSkge1xuICAgICAgbWFyZ2luLXRvcDogcmVtKDEwMHB4KTtcbiAgICB9XG4gIH1cbn1cbiIsIi8qKlxuICogRnVuY3Rpb25zIC0gQnJlYWtwb2ludHNcbiAqIEJyZWFrcG9pbnQgdmlld3BvcnQgc2l6ZXMgYW5kIG1lZGlhIHF1ZXJpZXMuIEJyZWFrcG9pbnRzIGFyZSBkZWZpbmVkIGFzIGEgbWFwIG9mIChuYW1lOiBtaW5pbXVtIHdpZHRoKSwgb3JkZXIgZnJvbVxuICogc21hbGwgdG8gbGFyZ2U6ICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkuIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRncmlkLWJyZWFrcG9pbnRzYFxuICogZ2xvYmFsIHZhcmlhYmxlIGlzIHVzZWQgYXMgdGhlIGAkYnJlYWtwb2ludHNgIGFyZ3VtZW50IGJ5IGRlZmF1bHQuXG4gKlxuICogLSAwMSAtIEJyZWFrcG9pbnQgTmV4dFxuICogLSAwMiAtIEJyZWFrcG9pbnQgTWluaW11bVxuICogLSAwMyAtIEJyZWFrcG9pbnQgTWF4aW11bVxuICogLSAwNCAtIEJyZWFrcG9pbnQgSW5maXhcbiAqL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDEgLSBCcmVha3BvaW50IE5leHRcbiAgTmFtZSBvZiB0aGUgbmV4dCBicmVha3BvaW50LCBvciBudWxsIGZvciB0aGUgbGFzdCBicmVha3BvaW50LlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAyIC0gQnJlYWtwb2ludCBNaW5pbXVtXG4gIE1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIHNtYWxsZXN0IChmaXJzdCkgYnJlYWtwb2ludC5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMyAtIEJyZWFrcG9pbnQgTWF4aW11bVxuICBUaGUgbWF4aW11bSB2YWx1ZSBpcyByZWR1Y2VkIGJ5IDAuMDJweCB0byB3b3JrIGFyb3VuZCB0aGUgbGltaXRhdGlvbnMgb2YgYG1pbi1gIGFuZCBgbWF4LWAgcHJlZml4ZXMgYW5kIHZpZXdwb3J0c1xuICB3aXRoIGZyYWN0aW9uYWwgd2lkdGhzLiBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL21lZGlhcXVlcmllcy00LyNtcS1taW4tbWF4LiBVc2VzIDAuMDJweCByYXRoZXIgdGhhbiAwLjAxcHggdG8gd29ya1xuICBhcm91bmQgYSBjdXJyZW50IHJvdW5kaW5nIGJ1ZyBpbiBTYWZhcmkuIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTc4MjYxXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDQgLSBCcmVha3BvaW50IEluZml4XG4gIFJldHVybnMgYSBibGFuayBzdHJpbmcgaWYgc21hbGxlc3QgYnJlYWtwb2ludCwgb3RoZXJ3aXNlIHJldHVybnMgdGhlIG5hbWUgd2l0aCBhIGRhc2ggaW4gZnJvbnQuIFVzZWZ1bCBmb3IgbWFraW5nXG4gIHJlc3BvbnNpdmUgdXRpbGl0aWVzLlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogRnVuY3Rpb25zIC0gQnJlYWtwb2ludHNcbiAqIEJyZWFrcG9pbnQgdmlld3BvcnQgc2l6ZXMgYW5kIG1lZGlhIHF1ZXJpZXMuIEJyZWFrcG9pbnRzIGFyZSBkZWZpbmVkIGFzIGEgbWFwIG9mIChuYW1lOiBtaW5pbXVtIHdpZHRoKSwgb3JkZXIgZnJvbVxuICogc21hbGwgdG8gbGFyZ2U6ICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkuIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRncmlkLWJyZWFrcG9pbnRzYFxuICogZ2xvYmFsIHZhcmlhYmxlIGlzIHVzZWQgYXMgdGhlIGAkYnJlYWtwb2ludHNgIGFyZ3VtZW50IGJ5IGRlZmF1bHQuXG4gKlxuICogLSAwMSAtIEJyZWFrcG9pbnQgTmV4dFxuICogLSAwMiAtIEJyZWFrcG9pbnQgTWluaW11bVxuICogLSAwMyAtIEJyZWFrcG9pbnQgTWF4aW11bVxuICogLSAwNCAtIEJyZWFrcG9pbnQgSW5maXhcbiAqL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDEgLSBCcmVha3BvaW50IE5leHRcbiAgTmFtZSBvZiB0aGUgbmV4dCBicmVha3BvaW50LCBvciBudWxsIGZvciB0aGUgbGFzdCBicmVha3BvaW50LlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAyIC0gQnJlYWtwb2ludCBNaW5pbXVtXG4gIE1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIHNtYWxsZXN0IChmaXJzdCkgYnJlYWtwb2ludC5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMyAtIEJyZWFrcG9pbnQgTWF4aW11bVxuICBUaGUgbWF4aW11bSB2YWx1ZSBpcyByZWR1Y2VkIGJ5IDAuMDJweCB0byB3b3JrIGFyb3VuZCB0aGUgbGltaXRhdGlvbnMgb2YgYG1pbi1gIGFuZCBgbWF4LWAgcHJlZml4ZXMgYW5kIHZpZXdwb3J0c1xuICB3aXRoIGZyYWN0aW9uYWwgd2lkdGhzLiBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL21lZGlhcXVlcmllcy00LyNtcS1taW4tbWF4LiBVc2VzIDAuMDJweCByYXRoZXIgdGhhbiAwLjAxcHggdG8gd29ya1xuICBhcm91bmQgYSBjdXJyZW50IHJvdW5kaW5nIGJ1ZyBpbiBTYWZhcmkuIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTc4MjYxXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDQgLSBCcmVha3BvaW50IEluZml4XG4gIFJldHVybnMgYSBibGFuayBzdHJpbmcgaWYgc21hbGxlc3QgYnJlYWtwb2ludCwgb3RoZXJ3aXNlIHJldHVybnMgdGhlIG5hbWUgd2l0aCBhIGRhc2ggaW4gZnJvbnQuIFVzZWZ1bCBmb3IgbWFraW5nXG4gIHJlc3BvbnNpdmUgdXRpbGl0aWVzLlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogU2V0dGluZ3MgLSBCcmVha3BvaW50c1xuICogLSAwMSAtIE1hcHBpbmdcbiAqL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDEgLSBNYXBwaW5nXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyoqXG4gKiBNaXhpbnMgLSBCcmVha3BvaW50c1xuICogLSAwMSAtIEJyZWFrcG9pbnRzXG4gKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAxIC0gQnJlYWtwb2ludHNcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4uYy1hcnRpY2xlX19oZWFkZXItd3JhcHBlciB7XG4gIG1heC13aWR0aDogNDguNzVyZW07XG4gIG1hcmdpbjogMCBhdXRvIDEuNzVyZW0gYXV0bztcbn1cblxuLmMtYXJ0aWNsZV9fYnJlYWRjcnVtYi1saXN0IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uYy1hcnRpY2xlX19icmVhZGNydW1iLWl0ZW0ge1xuICBtYXJnaW46IDA7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmMtYXJ0aWNsZV9fYnJlYWRjcnVtYi1saW5rIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktY29uZGVuc2VkKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtbGFiZWwtcGVld2VlKTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LWJvbGQpO1xuICBsZXR0ZXItc3BhY2luZzogdmFyKC0tZm9udC1sZXR0ZXItc3BhY2luZy13aWRlKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtbGFiZWwtcGVld2VlKTtcbiAgY29sb3I6IHZhcigtLWNvbG9yLXN1cmYtLWZvcmVzdCk7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1ib2xkKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA4ZW07XG59XG4uYy1hcnRpY2xlX19icmVhZGNydW1iLWxpbms6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbi5jLWFydGljbGVfX2RhdGUge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1jb25kZW5zZWQpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1sYWJlbC1wZWV3ZWUpO1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtYm9sZCk7XG4gIGxldHRlci1zcGFjaW5nOiB2YXIoLS1mb250LWxldHRlci1zcGFjaW5nLXdpZGUpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1sYWJlbC1wZWV3ZWUpO1xuICBjb2xvcjogdmFyKC0tY29sb3Itc3VyZi0tYmxhY2spO1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtYm9sZCk7XG4gIGxldHRlci1zcGFjaW5nOiAwLjA5Mzc1cmVtO1xuICBtYXJnaW46IDAgMCAxLjc1cmVtIDA7XG59XG5cbi5jLWFydGljbGVfX2JyZWFkY3J1bWJzLWRhdGUtd3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luOiAwIDAgMS43NXJlbSAwO1xufVxuXG4uYy1hcnRpY2xlX190aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1ib2xkKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWJvZHkpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1oZWFkaW5nLW9uZS1hbHQpO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMWVtO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1oZWFkaW5nLW9uZS1hbHQpO1xufVxuXG4uYy1hcnRpY2xlX19pbWFnZS13cmFwcGVyIHtcbiAgbWF4LXdpZHRoOiA3MS40Mzc1cmVtO1xuICBtYXJnaW46IDAgYXV0byAzLjc1cmVtIGF1dG87XG59XG4uYy1hcnRpY2xlX19pbWFnZS13cmFwcGVyIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmMtYXJ0aWNsZV9fdmlkZW8td3JhcHBlciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1ib3R0b206IDU2LjI1JTtcbiAgaGVpZ2h0OiAwO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXgtd2lkdGg6IDcxLjQzNzVyZW07XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uYy1hcnRpY2xlX192aWRlby13cmFwcGVyIGlmcmFtZSxcbi5jLWFydGljbGVfX3ZpZGVvLXdyYXBwZXIgb2JqZWN0LFxuLmMtYXJ0aWNsZV9fdmlkZW8td3JhcHBlciBlbWJlZCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uYy1hcnRpY2xlX19jb250ZW50LXdyYXBwZXIge1xuICBtYXgtd2lkdGg6IDQ4Ljc1cmVtO1xuICBtYXJnaW46IDAgYXV0byAxLjc1cmVtIGF1dG87XG59XG5cbi5jLWFydGljbGVfX292ZXJ2aWV3IHAge1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1ib2R5KTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtYm9keS1sYXJnZSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWJvZHktbGFyZ2UpO1xufVxuLmMtYXJ0aWNsZV9fb3ZlcnZpZXcgcDpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi10b3A6IDA7XG59XG4uYy1hcnRpY2xlX19vdmVydmlldyBwOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tYm90dG9tOiAxLjc1cmVtO1xufVxuXG4uYy1hcnRpY2xlX19ib2R5IC50ZXh0LWNvbnRlbnQgPiBwOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5jLWFydGljbGVfX2JvZHkgLnRleHQtY29udGVudCA+IHA6bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5sZWZ0LWhvb2stZGl2aWRlci50b3Age1xuICBtYXJnaW46IDAgMCAzLjVyZW0gMDtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLmMtYXJ0aWNsZV9fYm90dG9tLXdyYXBwZXIge1xuICBtYXgtd2lkdGg6IDQ4Ljc1cmVtO1xuICBtYXJnaW46IDAgYXV0byA1cmVtIGF1dG87XG59XG5cbi5jLWFydGljbGVfX2F1dGhvciB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWJvZHkpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1ib2R5LW1lZGl1bSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWJvZHktbWVkaXVtKTtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBtYXJnaW46IDAgMCAxLjc1cmVtIDA7XG59XG5cbi5jLWFydGljbGVfX2NhdGVnb3JpZXMge1xuICBtYXJnaW46IDAgMCAxcmVtIDA7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmMtYXJ0aWNsZV9fY2F0ZWdvcmllcy1pdGVtIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDAgMC43NXJlbSAwLjc1cmVtIDA7XG59XG4uYy1hcnRpY2xlX19jYXRlZ29yaWVzLWl0ZW0gYSB7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWNvbmRlbnNlZCk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWxhYmVsLXBlZXdlZSk7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1ib2xkKTtcbiAgbGV0dGVyLXNwYWNpbmc6IHZhcigtLWZvbnQtbGV0dGVyLXNwYWNpbmctd2lkZSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWxhYmVsLXBlZXdlZSk7XG4gIGNvbG9yOiB2YXIoLS1jb2xvci1zdXJmLS1mb3Jlc3QpO1xuICBwYWRkaW5nOiAwLjEyNXJlbSAwLjVyZW07XG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yLXN1cmYtLWNsb3VkKTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuLmMtYXJ0aWNsZV9fY2F0ZWdvcmllcy1pdGVtIGE6aG92ZXIge1xuICBjb2xvcjogdmFyKC0tY29sb3Itc3VyZi0tYmxhY2spO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cblxuLmMtYXJ0aWNsZV9fY29udGFjdHMtdGl0bGUge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1jb25kZW5zZWQpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1sYWJlbC1wZWV3ZWUpO1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtYm9sZCk7XG4gIGxldHRlci1zcGFjaW5nOiB2YXIoLS1mb250LWxldHRlci1zcGFjaW5nLXdpZGUpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1sYWJlbC1wZWV3ZWUpO1xuICBtYXJnaW46IDAgMCAxLjc1cmVtIDA7XG59XG5cbi5jLWFydGljbGVfX2NvbnRhY3RzIHtcbiAgbWFyZ2luOiAwIDAgMS43NXJlbSAwO1xuICBwYWRkaW5nOiAwO1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgZ2FwOiAyOHB4O1xuICBtYXgtd2lkdGg6IDMxLjg3NXJlbTtcbn1cbi5jLWFydGljbGVfX2NvbnRhY3RzIGxpIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogMDtcbn1cblxuLmMtYXJ0aWNsZV9fcHJlc3MtcmVzb3VyY2VzLXdyYXBwZXIge1xuICBtYXJnaW46IDMuNzVyZW0gMCAwIDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmMtYXJ0aWNsZV9fcHJlc3MtcmVzb3VyY2VzLXdyYXBwZXIge1xuICAgIG1hcmdpbjogNXJlbSAwIDAgMDtcbiAgfVxufVxuXG4uYy1hcnRpY2xlX19wcmVzcy1yZXNvdXJjZXMtdGl0bGUge1xuICBtYXJnaW46IDAgMCAyLjVyZW0gMDtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LXJlZ3VsYXIpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktaGVhZGluZyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWhlYWRpbmctdHdvKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtaGVhZGluZy10d28pO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jLWFydGljbGVfX3ByZXNzLXJlc291cmNlcy10aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LXJlZ3VsYXIpO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1oZWFkaW5nKTtcbiAgICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1oZWFkaW5nLXR3byk7XG4gICAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtaGVhZGluZy10d28pO1xuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiAxMzk5Ljk4cHgpIHtcbiAgLmMtYXJ0aWNsZS5jLWFydGljbGUtLWhvcml6b250YWwge1xuICAgIG1heC13aWR0aDogdW5zZXQ7XG4gICAgbWFyZ2luOiAwO1xuICAgIHdpZHRoOiB1bnNldDtcbiAgfVxuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAuYy1hcnRpY2xlX19jb250ZW50LXdyYXBwZXIsXG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIC5jLWFydGljbGVfX2JvdHRvbS13cmFwcGVyLFxuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAuYy1hcnRpY2xlX19jYWxsb3V0LXdyYXBwZXIsXG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIC5sZWZ0LWhvb2stZGl2aWRlci5ib3R0b20sXG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIC5jLWFydGljbGVfX3ByZXNzLXJlc291cmNlcy13cmFwcGVyIHtcbiAgICBncmlkLWFyZWE6IGNvbnRlbnQ7XG4gICAgbWF4LXdpZHRoOiAxMzgwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIHdpZHRoOiBjYWxjKDEwMHZ3IC0gdmFyKC0tc3BhY2UtaW5zZXQteCkgKiAyKTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCkge1xuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIHtcbiAgICBtYXJnaW4tdG9wOiA3LjVyZW07XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBjb2x1bW4tZ2FwOiA4Ljc1cmVtO1xuICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6IFwiaW1hZ2UgaW1hZ2VcIiBcImNvbnRlbnQgYm90dG9tXCIgXCJjb250ZW50IGxpc3RcIiBcImRpdmlkZXIgZGl2aWRlclwiIFwicmVsYXRlZCByZWxhdGVkXCI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMjYuMjVyZW07XG4gIH1cbn1cbi5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIC5jLWFydGljbGVfX2ltYWdlLXdyYXBwZXIge1xuICBncmlkLWFyZWE6IGltYWdlO1xuICB3aWR0aDogMTAwdnc7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIDAgMnJlbSAwO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIC5jLWFydGljbGVfX2ltYWdlLXdyYXBwZXIge1xuICAgIG1hcmdpbjogMCAwIDIuNXJlbSAwO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIC5jLWFydGljbGVfX2ltYWdlLXdyYXBwZXIge1xuICAgIG1hcmdpbjogMCAwIDMuNzVyZW0gMDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCkge1xuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAuYy1hcnRpY2xlX19pbWFnZS13cmFwcGVyIHtcbiAgICBtYXgtd2lkdGg6IDEzODBweDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgd2lkdGg6IGNhbGMoMTAwdncgLSB2YXIoLS1zcGFjZS1pbnNldC14KSAqIDIpO1xuICB9XG59XG4uYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAuYy1hcnRpY2xlX19pbWFnZS13cmFwcGVyIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuLmMtYXJ0aWNsZS5jLWFydGljbGUtLWhvcml6b250YWwgLmMtYXJ0aWNsZV9fY29udGVudC13cmFwcGVyIHtcbiAgZ3JpZC1hcmVhOiBjb250ZW50O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCkge1xuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAuYy1hcnRpY2xlX19jb250ZW50LXdyYXBwZXIge1xuICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbG9yLXN1cmYtLXdoaXRlKTtcbiAgICBwYWRkaW5nOiAyLjVyZW0gMi41cmVtIDAgMDtcbiAgICBtYXJnaW46IC0xNTBweCAwIDAgMDtcbiAgICBtYXgtd2lkdGg6IHVuc2V0O1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTM5OS45OHB4KSB7XG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIC5jLWFydGljbGVfX2hlYWRlci13cmFwcGVyIHtcbiAgICBtYXgtd2lkdGg6IDQzLjc1cmVtO1xuICAgIG1hcmdpbjogMCAwIDEuNzVyZW0gMDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCkge1xuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAuYy1hcnRpY2xlX19oZWFkZXItd3JhcHBlciB7XG4gICAgbWF4LXdpZHRoOiB1bnNldDtcbiAgICBtYXJnaW46IDAgMCAxLjc1cmVtIDA7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMzk5Ljk4cHgpIHtcbiAgLmMtYXJ0aWNsZS5jLWFydGljbGUtLWhvcml6b250YWwgLmMtYXJ0aWNsZV9fb3ZlcnZpZXcsXG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIC5jLWFydGljbGVfX2JvZHkge1xuICAgIG1heC13aWR0aDogNDMuNzVyZW07XG4gICAgbWFyZ2luOiAwIDAgMS43NXJlbSAwO1xuICB9XG59XG5AbWVkaWEgKG1heC13aWR0aDogMTM5OS45OHB4KSB7XG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIC5sZWZ0LWhvb2stZGl2aWRlci50b3Age1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICB9XG59XG4uYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAuYy1hcnRpY2xlX19ib3R0b20td3JhcHBlciB7XG4gIG1hcmdpbi1ib3R0b206IDEuMjVyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmMtYXJ0aWNsZS5jLWFydGljbGUtLWhvcml6b250YWwgLmMtYXJ0aWNsZV9fYm90dG9tLXdyYXBwZXIge1xuICAgIG1hcmdpbi1ib3R0b206IDIuOTM3NXJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCkge1xuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAuYy1hcnRpY2xlX19ib3R0b20td3JhcHBlciB7XG4gICAgZ3JpZC1hcmVhOiBib3R0b207XG4gICAgbWF4LXdpZHRoOiB1bnNldDtcbiAgICBtYXJnaW46IDA7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiAxMzk5Ljk4cHgpIHtcbiAgLmMtYXJ0aWNsZS5jLWFydGljbGUtLWhvcml6b250YWwgLmMtYXJ0aWNsZV9fY2F0ZWdvcmllcyB7XG4gICAgbWF4LXdpZHRoOiA0My43NXJlbTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCkge1xuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAuYy1hcnRpY2xlX19jYWxsb3V0LXdyYXBwZXIge1xuICAgIGdyaWQtYXJlYTogbGlzdDtcbiAgfVxuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAuYy1hcnRpY2xlX19jYWxsb3V0LXdyYXBwZXIgLmNsLWNvbXBvbmVudC0tbGlzdCB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIC5jLWFydGljbGVfX2NhbGxvdXQtd3JhcHBlciAuY2wtY29tcG9uZW50LS1saXN0IC5jLWxpc3RfX2l0ZW1zIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcbiAgfVxufVxuLmMtYXJ0aWNsZS5jLWFydGljbGUtLWhvcml6b250YWwgLmxlZnQtaG9vay1kaXZpZGVyLmJvdHRvbSB7XG4gIGdyaWQtYXJlYTogZGl2aWRlcjtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0taG9yaXpvbnRhbCAubGVmdC1ob29rLWRpdmlkZXIuYm90dG9tIHtcbiAgICBtYXJnaW4tdG9wOiAzLjc1cmVtO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTQwMHB4KSB7XG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS1ob3Jpem9udGFsIC5sZWZ0LWhvb2stZGl2aWRlci5ib3R0b20ge1xuICAgIG1hcmdpbi10b3A6IDcuNXJlbTtcbiAgfVxufVxuLmMtYXJ0aWNsZS5jLWFydGljbGUtLWhvcml6b250YWwgLmMtYXJ0aWNsZV9fcHJlc3MtcmVzb3VyY2VzLXdyYXBwZXIge1xuICBncmlkLWFyZWE6IHJlbGF0ZWQ7XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmMtYXJ0aWNsZS5jLWFydGljbGUtLXZlcnRpY2FsIC5jLWFydGljbGVfX2lubmVyLXdyYXBwZXIge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgY29sdW1uLWdhcDogNXJlbTtcbiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiBcImNvbnRlbnQgaW1hZ2VcIiBcImNvbnRlbnQgYm90dG9tXCIgXCJjb250ZW50IGxpc3RcIiBcImRpdmlkZXIgZGl2aWRlclwiIFwicmVsYXRlZCByZWxhdGVkXCI7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMjYuMjVyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxNDAwcHgpIHtcbiAgLmMtYXJ0aWNsZS5jLWFydGljbGUtLXZlcnRpY2FsIC5jLWFydGljbGVfX2lubmVyLXdyYXBwZXIge1xuICAgIGNvbHVtbi1nYXA6IDExLjI1cmVtO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDM5LjM3NXJlbTtcbiAgfVxufVxuLmMtYXJ0aWNsZS5jLWFydGljbGUtLXZlcnRpY2FsIC5jLWFydGljbGVfX2lubmVyLXdyYXBwZXIgLmMtYXJ0aWNsZV9faW1hZ2Utd3JhcHBlciB7XG4gIGdyaWQtYXJlYTogaW1hZ2U7XG4gIG1hcmdpbjogMCBhdXRvIDIuNXJlbSBhdXRvO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0tdmVydGljYWwgLmMtYXJ0aWNsZV9faW5uZXItd3JhcHBlciAuYy1hcnRpY2xlX19pbWFnZS13cmFwcGVyIHtcbiAgICBtYXJnaW46IDAgMCAyLjVyZW0gMDtcbiAgfVxufVxuLmMtYXJ0aWNsZS5jLWFydGljbGUtLXZlcnRpY2FsIC5jLWFydGljbGVfX2lubmVyLXdyYXBwZXIgLmMtYXJ0aWNsZV9faW1hZ2Utd3JhcHBlciBpbWcge1xuICBtYXgtaGVpZ2h0OiAyMi41cmVtO1xuICBvYmplY3QtZml0OiBjb250YWluO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuYy1hcnRpY2xlLmMtYXJ0aWNsZS0tdmVydGljYWwgLmMtYXJ0aWNsZV9faW5uZXItd3JhcHBlciAuYy1hcnRpY2xlX19pbWFnZS13cmFwcGVyIGltZyB7XG4gICAgbWF4LWhlaWdodDogdW5zZXQ7XG4gICAgb2JqZWN0LWZpdDogdW5zZXQ7XG4gIH1cbn1cbi5jLWFydGljbGUuYy1hcnRpY2xlLS12ZXJ0aWNhbCAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIC5jLWFydGljbGVfX2NvbnRlbnQtd3JhcHBlciB7XG4gIGdyaWQtYXJlYTogY29udGVudDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbiAgcGFkZGluZy1ib3R0b206IDA7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG59XG4uYy1hcnRpY2xlLmMtYXJ0aWNsZS0tdmVydGljYWwgLmMtYXJ0aWNsZV9faW5uZXItd3JhcHBlciAuYy1hcnRpY2xlX19ib3R0b20td3JhcHBlciB7XG4gIGdyaWQtYXJlYTogYm90dG9tO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAxLjYyNXJlbTtcbn1cbi5jLWFydGljbGUuYy1hcnRpY2xlLS12ZXJ0aWNhbCAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIC5jLWFydGljbGVfX2NhbGxvdXQtd3JhcHBlciB7XG4gIGdyaWQtYXJlYTogbGlzdDtcbn1cbi5jLWFydGljbGUuYy1hcnRpY2xlLS12ZXJ0aWNhbCAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIC5jLWFydGljbGVfX2NhbGxvdXQtd3JhcHBlciAuY2wtY29tcG9uZW50LS1saXN0IHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICB3aWR0aDogMTAwJTtcbn1cbi5jLWFydGljbGUuYy1hcnRpY2xlLS12ZXJ0aWNhbCAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIC5jLWFydGljbGVfX2NhbGxvdXQtd3JhcHBlciAuY2wtY29tcG9uZW50LS1saXN0IC5jLWxpc3RfX2l0ZW1zIHtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG59XG4uYy1hcnRpY2xlLmMtYXJ0aWNsZS0tdmVydGljYWwgLmMtYXJ0aWNsZV9faW5uZXItd3JhcHBlciAuYy1hcnRpY2xlX19wcmVzcy1yZXNvdXJjZXMtd3JhcHBlciB7XG4gIGdyaWQtYXJlYTogcmVsYXRlZDtcbn1cbi5jLWFydGljbGUuYy1hcnRpY2xlLS12ZXJ0aWNhbCAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIC5sZWZ0LWhvb2stZGl2aWRlci5ib3R0b20ge1xuICBncmlkLWFyZWE6IGRpdmlkZXI7XG4gIG1hcmdpbi10b3A6IDJyZW07XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLmMtYXJ0aWNsZS5jLWFydGljbGUtLXZlcnRpY2FsIC5jLWFydGljbGVfX2lubmVyLXdyYXBwZXIgLmxlZnQtaG9vay1kaXZpZGVyLmJvdHRvbSB7XG4gICAgbWFyZ2luLXRvcDogMy42MjVyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxNDAwcHgpIHtcbiAgLmMtYXJ0aWNsZS5jLWFydGljbGUtLXZlcnRpY2FsIC5jLWFydGljbGVfX2lubmVyLXdyYXBwZXIgLmxlZnQtaG9vay1kaXZpZGVyLmJvdHRvbSB7XG4gICAgbWFyZ2luLXRvcDogNi41NjI1cmVtO1xuICB9XG59XG5cbi5jLWFydGljbGUuYy1hcnRpY2xlLS12aWRlbyAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIC5sZWZ0LWhvb2stZGl2aWRlci5ib3R0b20ge1xuICBtYXJnaW4tdG9wOiAycmVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS12aWRlbyAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIC5sZWZ0LWhvb2stZGl2aWRlci5ib3R0b20ge1xuICAgIG1hcmdpbi10b3A6IDNyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxNDAwcHgpIHtcbiAgLmMtYXJ0aWNsZS5jLWFydGljbGUtLXZpZGVvIC5jLWFydGljbGVfX2lubmVyLXdyYXBwZXIgLmxlZnQtaG9vay1kaXZpZGVyLmJvdHRvbSB7XG4gICAgbWFyZ2luLXRvcDogNC4xODc1cmVtO1xuICB9XG59XG5cbi5jLWFydGljbGUuYy1hcnRpY2xlLS1uby1tZWRpYSAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIC5sZWZ0LWhvb2stZGl2aWRlci5ib3R0b20ge1xuICBtYXJnaW4tdG9wOiAycmVtO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5jLWFydGljbGUuYy1hcnRpY2xlLS1uby1tZWRpYSAuYy1hcnRpY2xlX19pbm5lci13cmFwcGVyIC5sZWZ0LWhvb2stZGl2aWRlci5ib3R0b20ge1xuICAgIG1hcmdpbi10b3A6IDNyZW07XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxNDAwcHgpIHtcbiAgLmMtYXJ0aWNsZS5jLWFydGljbGUtLW5vLW1lZGlhIC5jLWFydGljbGVfX2lubmVyLXdyYXBwZXIgLmxlZnQtaG9vay1kaXZpZGVyLmJvdHRvbSB7XG4gICAgbWFyZ2luLXRvcDogNi4yNXJlbTtcbiAgfVxufSIsIi8vIFNVUkYgTWFpbiAtIEhlYWRpbmcgRm9udHNcbkBtaXhpbiBzdXJmLWZvbnQtaGVhZGluZy1vbmUoKSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1tZWRpdW0pO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktaGVhZGluZyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWhlYWRpbmctb25lKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtaGVhZGluZy1vbmUpO1xufVxuXG5AbWl4aW4gc3VyZi1mb250LWhlYWRpbmctb25lLWFsdCgpIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LWJvbGQpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktYm9keSk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWhlYWRpbmctb25lLWFsdCk7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAxZW07XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWhlYWRpbmctb25lLWFsdCk7XG59XG5AbWl4aW4gc3VyZi1mb250LWhlYWRpbmctdHdvKCkge1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1oZWFkaW5nKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtaGVhZGluZy10d28pO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1oZWFkaW5nLXR3byk7XG59XG5AbWl4aW4gc3VyZi1mb250LWhlYWRpbmctdHdvLWFsdCgpIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LXJlZ3VsYXIpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktaGVhZGluZyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWhlYWRpbmctdHdvKTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDJlbTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtaGVhZGluZy10d28tYWx0KTtcbn1cbkBtaXhpbiBzdXJmLWZvbnQtaGVhZGluZy10aHJlZSgpIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LXJlZ3VsYXIpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktaGVhZGluZyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWhlYWRpbmctdGhyZWUpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1oZWFkaW5nLXRocmVlKTtcbn1cbkBtaXhpbiBzdXJmLWZvbnQtaGVhZGluZy1mb3VyKCkge1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1oZWFkaW5nKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtaGVhZGluZy1mb3VyKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtaGVhZGluZy1mb3VyKTtcbn1cbkBtaXhpbiBzdXJmLWZvbnQtaGVhZGluZy1maXZlKCkge1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1oZWFkaW5nKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtaGVhZGluZy1maXZlKTtcbn1cbkBtaXhpbiBzdXJmLWZvbnQtaGVhZGluZy1zaXgoKSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWhlYWRpbmcpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1oZWFkaW5nLXNpeCk7XG59XG5cbi8vIFNVUkYgTWFpbiAtIEJvZHkgRm9udHNcbkBtaXhpbiBzdXJmLWZvbnQtYm9keS1qdW1ibygpIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LW1lZGl1bSk7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1ib2R5KTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtYm9keS1qdW1ibyk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWJvZHktanVtYm8pO1xufVxuQG1peGluIHN1cmYtZm9udC1ib2R5LXgtbGFyZ2UoKSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWJvZHkpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1ib2R5LXgtbGFyZ2UpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1ib2R5LXgtbGFyZ2UpO1xufVxuQG1peGluIHN1cmYtZm9udC1ib2R5LWxhcmdlKCkge1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1ib2R5KTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtYm9keS1sYXJnZSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWJvZHktbGFyZ2UpO1xufVxuQG1peGluIHN1cmYtZm9udC1ib2R5LW1lZGl1bSgpIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LXJlZ3VsYXIpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktYm9keSk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWJvZHktbWVkaXVtKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtYm9keS1tZWRpdW0pO1xufVxuQG1peGluIHN1cmYtZm9udC1ib2R5LXNtYWxsKCkge1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1ib2R5KTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtYm9keS1zbWFsbCk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWJvZHktc21hbGwpO1xufVxuQG1peGluIHN1cmYtZm9udC1ib2R5LXgtc21hbGwoKSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWJvZHkpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1ib2R5LXgtc21hbGwpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1ib2R5LXgtc21hbGwpO1xufVxuXG4vLyBTVVJGIE1haW4gLSBMYWJlbCBGb250c1xuQG1peGluIHN1cmYtZm9udC1sYWJlbC14LWxhcmdlKCkge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1jb25kZW5zZWQpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1sYWJlbC1sYXJnZSk7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1ib2xkKTtcbiAgbGV0dGVyLXNwYWNpbmc6IHZhcigtLWZvbnQtbGV0dGVyLXNwYWNpbmctd2lkZXIpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1sYWJlbC1sYXJnZSk7XG59XG5AbWl4aW4gc3VyZi1mb250LWxhYmVsLWxhcmdlKCkge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1ib2xkKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWNvbmRlbnNlZCk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWxhYmVsLWxhcmdlKTtcbiAgbGV0dGVyLXNwYWNpbmc6IHZhcigtLWZvbnQtbGV0dGVyLXNwYWNpbmctd2lkZSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWxhYmVsLWxhcmdlKTtcbn1cbkBtaXhpbiBzdXJmLWZvbnQtbGFiZWwtbWVkaXVtKCkge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1jb25kZW5zZWQpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1sYWJlbC1tZWRpdW0pO1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtYm9sZCk7XG4gIGxldHRlci1zcGFjaW5nOiB2YXIoLS1mb250LWxldHRlci1zcGFjaW5nLXdpZGUpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1sYWJlbC1tZWRpdW0pO1xufVxuQG1peGluIHN1cmYtZm9udC1sYWJlbC1zbWFsbCgpIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktY29uZGVuc2VkKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtbGFiZWwtc21hbGwpO1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtYm9sZCk7XG4gIGxldHRlci1zcGFjaW5nOiB2YXIoLS1mb250LWxldHRlci1zcGFjaW5nLXdpZGUpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1sYWJlbC1zbWFsbCk7XG59XG5AbWl4aW4gc3VyZi1mb250LWxhYmVsLXBlZXdlZSgpIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktY29uZGVuc2VkKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtbGFiZWwtcGVld2VlKTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LWJvbGQpO1xuICBsZXR0ZXItc3BhY2luZzogdmFyKC0tZm9udC1sZXR0ZXItc3BhY2luZy13aWRlKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtbGFiZWwtcGVld2VlKTtcbn1cbiJdfQ== */
