/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
* {
  box-sizing: border-box;
}

html {
  font-size: 100%;
  background-color: #fff;
  overflow-x: hidden;
}

body {
  color: var(--color-text);
  background-color: #fff;
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-medium);
  line-height: var(--font-line-height-body-medium);
  margin: 0;
  overflow-x: hidden;
}

.skip-link.visually-hidden.focusable {
  background-color: #fff;
  color: var(--color-surf--black);
  display: block;
  margin: 1em;
  padding: 0.25em;
  position: absolute !important;
  left: 0;
  top: 0;
  width: fit-content !important;
  z-index: 99;
}

.page-content-and-footer__wrapper {
  position: relative;
  margin-top: 2rem;
}
@media (min-width: 768px) {
  .page-content-and-footer__wrapper {
    margin-top: 3.75rem;
  }
}
.page-content-and-footer__wrapper:before {
  content: "";
  position: absolute;
  height: 100%;
  width: 1.25rem;
  background: linear-gradient(180deg, #f26438 6.25%, #ffc956 33.85%, #008535 54.69%, #008535 69.79%, #2976d9 93.75%);
  background-size: 100%;
  background-position: 0% 100%;
  display: none;
  z-index: 2;
}
@media (min-width: 1400px) {
  .page-content-and-footer__wrapper:before {
    display: block;
  }
}
@media (max-width: 1023.98px) {
  .page-content-and-footer__wrapper .l-constrained--wide {
    width: 100%;
  }
}
.page-content-and-footer__wrapper > main > div {
  padding-bottom: 2.1875rem;
}
@media (min-width: 768px) {
  .page-content-and-footer__wrapper > main > div {
    padding-bottom: 4.375rem;
  }
}
@media (min-width: 1024px) {
  .page-content-and-footer__wrapper > main > div {
    padding-bottom: 6.125rem;
  }
}
@media (min-width: 1400px) {
  .page-content-and-footer__wrapper > main > div {
    padding-bottom: 7.5rem;
  }
}

hr.left-hook-divider {
  width: 100%;
  border: 0;
  border-bottom: 0.125rem solid var(--color-surf--grey);
  position: relative;
  overflow: visible;
  margin-bottom: 2rem;
}
hr.left-hook-divider::before {
  content: "";
  position: absolute;
  height: 2rem;
  width: 0.125rem;
  background: var(--color-surf--grey);
}