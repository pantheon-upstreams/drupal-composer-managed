/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
:root {
  /*
    Font: Families
  */
  --font-family-mono: monospace;
  --font-family-sans: "ballinger", sans-serif;
  --font-family-condensed: "ballinger-condensed", sans-serif;
  --font-family-serif: "recent-grotesk", sans-serif;
  --font-family-body: var(--font-family-sans);
  --font-family-heading: var(--font-family-serif);
  --font-family-interface: var(--font-family-sans);
  /*
    SURF Main Fonts
  */
  /*
    Font: Sizes

    By default, all font-size declarations will be converted to rems
    via postCSS. Declerations for other properties will maintain their px units.
  */
  /*
    Font: Weight
  */
  --font-weight-thin: 100;
  --font-weight-light: 300;
  --font-weight-regular: 400;
  --font-weight-book: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;
  /*
    Font: Letter Spacing;
  */
  --font-letter-spacing-normal: 0;
  --font-letter-spacing-wide: 0.09375em;
  --font-letter-spacing-wider: 0.125em;
  --font-size-heading-one: 72px;
  --font-size-heading-one-alt: 24px;
  --font-size-heading-two: 40px;
  --font-size-heading-two-alt: 32px;
  --font-size-heading-three: 36px;
  --font-size-heading-four: 28px;
  --font-size-heading-five: 24px;
  --font-size-heading-six: 20px;
  --font-size-body-jumbo: 18px;
  --font-size-body-x-large: 18px;
  --font-size-body-large: 16px;
  --font-size-body-medium: 16px;
  --font-size-body-small: 16px;
  --font-size-body-x-small: 14px;
  --font-size-label-x-large: 22px;
  --font-size-label-large: 22px;
  --font-size-label-medium: 22px;
  --font-size-label-small: 20px;
  --font-size-label-peewee: 16px;
  --font-line-height-heading-one: 90%;
  --font-line-height-heading-one-alt: 112%;
  --font-line-height-heading-two: 100%;
  --font-line-height-heading-two-alt: 100%;
  --font-line-height-heading-three: 100%;
  --font-line-height-heading-four: 100%;
  --font-line-height-body-jumbo: 130%;
  --font-line-height-body-x-large: 130%;
  --font-line-height-body-large: 140%;
  --font-line-height-body-medium: 144%;
  --font-line-height-body-small: 148%;
  --font-line-height-body-x-small: 148%;
  --font-line-height-label-x-large: 132%;
  --font-line-height-label-large: 130%;
  --font-line-height-label-medium: 140%;
  --font-line-height-label-small: 140%;
  --font-line-height-label-peewee: 140%;
}
:root .font-surf--heading-one, :root h1 {
  font-weight: 500;
  font-weight: var(--font-weight-medium);
  font-family: "recent-grotesk", sans-serif;
  font-family: var(--font-family-heading);
  font-size: 72px;
  font-size: var(--font-size-heading-one);
  line-height: 90%;
  line-height: var(--font-line-height-heading-one);
}
:root .font-surf--heading-one-alt {
  font-weight: 700;
  font-weight: var(--font-weight-bold);
  font-family: "recent-grotesk", sans-serif;
  font-family: var(--font-family-heading);
  font-size: 72px;
  font-size: var(--font-size-heading-one);
  letter-spacing: 0.01em;
  line-height: 112%;
  line-height: var(--font-line-height-heading-one-alt);
}
:root .font-surf--heading-two, :root h2 {
  font-weight: 400;
  font-weight: var(--font-weight-regular);
  font-family: "recent-grotesk", sans-serif;
  font-family: var(--font-family-heading);
  font-size: 40px;
  font-size: var(--font-size-heading-two);
  line-height: 100%;
  line-height: var(--font-line-height-heading-two);
}
:root .font-surf--heading-two-alt {
  font-weight: 400;
  font-weight: var(--font-weight-regular);
  font-family: "recent-grotesk", sans-serif;
  font-family: var(--font-family-heading);
  font-size: 40px;
  font-size: var(--font-size-heading-two);
  letter-spacing: 0.02em;
  line-height: 100%;
  line-height: var(--font-line-height-heading-two-alt);
}
:root .font-surf--heading-three, :root h3 {
  font-weight: 400;
  font-weight: var(--font-weight-regular);
  font-family: "recent-grotesk", sans-serif;
  font-family: var(--font-family-heading);
  font-size: 36px;
  font-size: var(--font-size-heading-three);
  line-height: 100%;
  line-height: var(--font-line-height-heading-three);
}
:root .font-surf--heading-four, :root h4 {
  font-weight: 400;
  font-weight: var(--font-weight-regular);
  font-family: "recent-grotesk", sans-serif;
  font-family: var(--font-family-heading);
  font-size: 28px;
  font-size: var(--font-size-heading-four);
  line-height: 100%;
  line-height: var(--font-line-height-heading-four);
}
:root .font-surf--heading-five, :root h5 {
  font-weight: 400;
  font-weight: var(--font-weight-regular);
  font-family: "recent-grotesk", sans-serif;
  font-family: var(--font-family-heading);
  font-size: 24px;
  font-size: var(--font-size-heading-five);
}
:root .font-surf--heading-six, :root h6 {
  font-weight: 400;
  font-weight: var(--font-weight-regular);
  font-family: "recent-grotesk", sans-serif;
  font-family: var(--font-family-heading);
  font-size: 20px;
  font-size: var(--font-size-heading-six);
}
:root .font-surf--body-jumbo {
  font-weight: 500;
  font-weight: var(--font-weight-medium);
  font-family: "ballinger", sans-serif;
  font-family: var(--font-family-body);
  font-size: 18px;
  font-size: var(--font-size-body-jumbo);
  line-height: 130%;
  line-height: var(--font-line-height-body-jumbo);
}
:root .font-surf--body-x-large {
  font-weight: 400;
  font-weight: var(--font-weight-regular);
  font-family: "ballinger", sans-serif;
  font-family: var(--font-family-body);
  font-size: 18px;
  font-size: var(--font-size-body-x-large);
  line-height: 130%;
  line-height: var(--font-line-height-body-x-large);
}
:root .font-surf--body-large {
  font-weight: 400;
  font-weight: var(--font-weight-regular);
  font-family: "ballinger", sans-serif;
  font-family: var(--font-family-body);
  font-size: 16px;
  font-size: var(--font-size-body-large);
  line-height: 140%;
  line-height: var(--font-line-height-body-large);
}
:root .font-surf--body-medium, :root p,
:root li {
  font-weight: 400;
  font-weight: var(--font-weight-regular);
  font-family: "ballinger", sans-serif;
  font-family: var(--font-family-body);
  font-size: 16px;
  font-size: var(--font-size-body-medium);
  line-height: 144%;
  line-height: var(--font-line-height-body-medium);
}
:root .font-surf--body-small {
  font-weight: 400;
  font-weight: var(--font-weight-regular);
  font-family: "ballinger", sans-serif;
  font-family: var(--font-family-body);
  font-size: 16px;
  font-size: var(--font-size-body-small);
  line-height: 148%;
  line-height: var(--font-line-height-body-small);
}
:root .font-surf--body-x-small {
  font-weight: 400;
  font-weight: var(--font-weight-regular);
  font-family: "ballinger", sans-serif;
  font-family: var(--font-family-body);
  font-size: 14px;
  font-size: var(--font-size-body-x-small);
  line-height: 148%;
  line-height: var(--font-line-height-body-x-small);
}
:root .font-surf--label-x-large {
  font-style: normal;
  text-transform: uppercase;
  font-family: "ballinger-condensed", sans-serif;
  font-family: var(--font-family-condensed);
  font-size: 22px;
  font-size: var(--font-size-label-large);
  font-weight: 700;
  font-weight: var(--font-weight-bold);
  letter-spacing: 0.125em;
  letter-spacing: var(--font-letter-spacing-wider);
  line-height: 130%;
  line-height: var(--font-line-height-label-large);
}
:root .font-surf--label-large {
  font-style: normal;
  text-transform: uppercase;
  font-weight: 700;
  font-weight: var(--font-weight-bold);
  font-family: "ballinger-condensed", sans-serif;
  font-family: var(--font-family-condensed);
  font-size: 22px;
  font-size: var(--font-size-label-large);
  letter-spacing: 0.09375em;
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: 130%;
  line-height: var(--font-line-height-label-large);
}
:root .font-surf--label-medium {
  font-style: normal;
  text-transform: uppercase;
  font-family: "ballinger-condensed", sans-serif;
  font-family: var(--font-family-condensed);
  font-size: 22px;
  font-size: var(--font-size-label-medium);
  font-weight: 700;
  font-weight: var(--font-weight-bold);
  letter-spacing: 0.09375em;
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: 140%;
  line-height: var(--font-line-height-label-medium);
}
:root .font-surf--label-small {
  font-style: normal;
  text-transform: uppercase;
  font-family: "ballinger-condensed", sans-serif;
  font-family: var(--font-family-condensed);
  font-size: 20px;
  font-size: var(--font-size-label-small);
  font-weight: 700;
  font-weight: var(--font-weight-bold);
  letter-spacing: 0.09375em;
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: 140%;
  line-height: var(--font-line-height-label-small);
}
:root .font-surf--label-peewee {
  font-style: normal;
  text-transform: uppercase;
  font-family: "ballinger-condensed", sans-serif;
  font-family: var(--font-family-condensed);
  font-size: 16px;
  font-size: var(--font-size-label-peewee);
  font-weight: 700;
  font-weight: var(--font-weight-bold);
  letter-spacing: 0.09375em;
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: 140%;
  line-height: var(--font-line-height-label-peewee);
}

@media (min-width: 768px) {
  :root {
    --font-size-heading-one: 100px;
    --font-size-heading-one-alt: 40px;
    --font-size-heading-two: 52px;
    --font-size-heading-two-alt: 40px;
    --font-size-heading-three: 44px;
    --font-size-heading-four: 32px;
    --font-size-heading-five: 28px;
    --font-size-heading-six: 24px;
    --font-size-body-jumbo: 40px;
    --font-size-body-x-large: 32px;
    --font-size-body-large: 24px;
    --font-size-body-medium: 18px;
    --font-size-label-x-large: 40px;
    --font-size-label-large: 28px;
  }
}
@media (min-width: 1024px) {
  :root {
    --font-size-heading-one: 132px;
    --font-size-heading-one-alt: 52px;
    --font-size-heading-two: 64px;
    --font-size-heading-two-alt: 40px;
    --font-size-heading-three: 52px;
    --font-size-heading-four: 48px;
    --font-size-heading-five: 36px;
    --font-size-heading-six: 32px;
  }
}
@media (min-width: 1620px) {
  :root {
    --font-size-heading-one: 176px;
    --font-size-heading-two: 96px;
    --font-size-heading-three: 76px;
    --font-size-heading-four: 52px;
    --font-size-heading-five: 48px;
    --font-size-heading-six: 44px;
  }
}
@custom-selector :--heading h1, h2, h3, h4, h5;
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-bottom: 0;
  color: var(--color-text-heading);
  font-family: "recent-grotesk", sans-serif;
  font-family: var(--font-family-heading);
}
h1 > a,
h2 > a,
h3 > a,
h4 > a,
h5 > a,
h6 > a {
  text-decoration: none;
}
h1 + p,
h2 + p,
h3 + p,
h4 + p,
h5 + p,
h6 + p {
  margin-top: 12px;
}
h1:first-child,
h2:first-child,
h3:first-child,
h4:first-child,
h5:first-child,
h6:first-child {
  margin-top: 0;
}

h1 {
  margin: 0;
}

h2 {
  margin-top: 48px;
}

h3 {
  margin-top: 48px;
}

h4 {
  margin-top: 48px;
}

h5 {
  margin-top: 48px;
}

h6 {
  margin-top: 48px;
}

hr {
  border: 0;
  border-bottom: 2px solid var(--color-surf--black);
}

a {
  color: var(--color-link);
  font-weight: 700;
  font-weight: var(--font-weight-bold);
}
a:hover, a:focus, a:active {
  color: var(--color-link-hover);
}

p:not([class]) > a:not([class]),
li:not([class]) > a:not([class]) {
  text-decoration: underline;
}
p:not([class]) > a:not([class]):hover, p:not([class]) > a:not([class]):focus, p:not([class]) > a:not([class]):active,
li:not([class]) > a:not([class]):hover,
li:not([class]) > a:not([class]):focus,
li:not([class]) > a:not([class]):active {
  color: var(--color-link-hover);
  text-decoration: none;
}

strong,
b {
  font-weight: 700;
  font-weight: var(--font-weight-bold);
}

p,
li {
  margin: 15px 0;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
