/*
 * @file
 * Provides grid styles for view plugin.
 */
.l-grid .l__inner > * + * {
  margin-top: var(--space-gap-y);
}

@media (min-width: 600px) {
  .l-grid .l__inner {
    display: -webkit-box;
    display: flex;
    flex-wrap: wrap;
    margin: -1rem -48px;
    grid-column-gap: var(--space-gap-x);
    -webkit-column-gap: var(--space-gap-x);
       -moz-column-gap: var(--space-gap-x);
            column-gap: var(--space-gap-x);
    display: grid;
    grid-row-gap: var(--space-gap-y);
    row-gap: var(--space-gap-y);
  }
  .l-grid.l-grid--2 .l__inner,
  .l-grid.l-grid--4 .l__inner {
    grid-template-columns: repeat(auto-fit, minmax(35%, 1fr));
  }
  .l-grid.l-grid--2 .l__inner > .l__item,
  .l-grid.l-grid--4 .l__inner > .l__item {
    -webkit-box-flex: 0;
            flex: none;
    width: calc((100% - 8rem) / 2);
    margin: 1rem 2rem;
  }
  .l-grid .l__inner > .l__item:not(:last-child) {
    margin-bottom: 0;
  }
  @supports (display: grid) {
    .l-grid .l__inner {
      margin: 0 !important;
    }
    .l-grid .l__inner > .l__item {
      margin: 0 !important;
      width: auto !important;
    }
  }
}
@media (min-width: 990px) {
  .l-grid .l__inner {
    --space-gap-x: 60px;
    --space-gap-y: 60px;
  }
  .l-grid.l-grid--2 .l__inner {
    grid-template-columns: repeat(auto-fit, minmax(35%, 1fr));
  }
  .l-grid.l-grid--3 .l__inner {
    grid-template-columns: repeat(auto-fit, minmax(25%, 1fr));
  }
  .l-grid.l-grid--3 .l__inner > .l__item {
    width: calc((100% - 12rem) / 3);
  }
  .l-grid.l-grid--4 .l__inner {
    grid-template-columns: repeat(auto-fit, minmax(10em, 1fr));
  }
  .l-grid.l-grid--4 .l__inner > .l__item {
    width: calc((100% - 16rem) / 4);
  }
  .l-grid .l__inner > .l__item:not(:last-child) {
    margin-bottom: 0;
  }
}
@media (min-width: 1400px) {
  .l-grid .l__inner {
    --space-gap-x: 75px;
    --space-gap-y: 75px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsb2JhbC9sYXlvdXQvZ3JpZC5zY3NzIiwiZ2xvYmFsL2xheW91dC9ncmlkLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0VBQUE7QUFLQTtFQUNFLDhCQUFBO0FDQUY7O0FER0E7RUFDRTtJQUNFLG9CQUFBO0lBQUEsYUFBQTtJQUNBLGVBQUE7SUFDQSxtQkFBQTtJQUNBLG1DQUFBO0lBQUEsc0NBQUE7T0FBQSxtQ0FBQTtZQUFBLDhCQUFBO0lBQ0EsYUFBQTtJQUNBLGdDQUFBO0lBQUEsMkJBQUE7RUNBRjtFREdBOztJQUVFLHlEQUFBO0VDREY7RURJQTs7SUFFRSxtQkFBQTtZQUFBLFVBQUE7SUFDQSw4QkFBQTtJQUNBLGlCQUFBO0VDRkY7RURLQTtJQUNFLGdCQUFBO0VDSEY7RURNQTtJQUNFO01BQ0Usb0JBQUE7SUNKRjtJRE9BO01BQ0Usb0JBQUE7TUFDQSxzQkFBQTtJQ0xGO0VBQ0Y7QUFDRjtBRFFBO0VBQ0U7SUFDRSxtQkFBQTtJQUNBLG1CQUFBO0VDTkY7RURTQTtJQUNFLHlEQUFBO0VDUEY7RURVQTtJQUNFLHlEQUFBO0VDUkY7RURXQTtJQUNFLCtCQUFBO0VDVEY7RURZQTtJQUNFLDBEQUFBO0VDVkY7RURhQTtJQUNFLCtCQUFBO0VDWEY7RURjQTtJQUNFLGdCQUFBO0VDWkY7QUFDRjtBRGVBO0VBQ0U7SUFDRSxtQkFBQTtJQUNBLG1CQUFBO0VDYkY7QUFDRiIsImZpbGUiOiJnbG9iYWwvbGF5b3V0L2dyaWQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbiAqIEBmaWxlXG4gKiBQcm92aWRlcyBncmlkIHN0eWxlcyBmb3IgdmlldyBwbHVnaW4uXG4gKi9cblxuLmwtZ3JpZCAubF9faW5uZXIgPiAqICsgKiB7XG4gIG1hcmdpbi10b3A6IHZhcigtLXNwYWNlLWdhcC15KTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gIC5sLWdyaWQgLmxfX2lubmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBtYXJnaW46IC0xcmVtIC00OHB4O1xuICAgIGNvbHVtbi1nYXA6IHZhcigtLXNwYWNlLWdhcC14KTtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIHJvdy1nYXA6IHZhcigtLXNwYWNlLWdhcC15KTtcbiAgfVxuXG4gIC5sLWdyaWQubC1ncmlkLS0yIC5sX19pbm5lcixcbiAgLmwtZ3JpZC5sLWdyaWQtLTQgLmxfX2lubmVyIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDM1JSwgMWZyKSk7XG4gIH1cblxuICAubC1ncmlkLmwtZ3JpZC0tMiAubF9faW5uZXIgPiAubF9faXRlbSxcbiAgLmwtZ3JpZC5sLWdyaWQtLTQgLmxfX2lubmVyID4gLmxfX2l0ZW0ge1xuICAgIGZsZXg6IG5vbmU7XG4gICAgd2lkdGg6IGNhbGMoKDEwMCUgLSA4cmVtKSAvIDIpO1xuICAgIG1hcmdpbjogMXJlbSAycmVtO1xuICB9XG5cbiAgLmwtZ3JpZCAubF9faW5uZXIgPiAubF9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG5cbiAgQHN1cHBvcnRzIChkaXNwbGF5OiBncmlkKSB7XG4gICAgLmwtZ3JpZCAubF9faW5uZXIge1xuICAgICAgbWFyZ2luOiAwICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLmwtZ3JpZCAubF9faW5uZXIgPiAubF9faXRlbSB7XG4gICAgICBtYXJnaW46IDAgIWltcG9ydGFudDtcbiAgICAgIHdpZHRoOiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWluLXdpZHRoOiA5OTBweCkge1xuICAubC1ncmlkIC5sX19pbm5lciB7XG4gICAgLS1zcGFjZS1nYXAteDogNjBweDtcbiAgICAtLXNwYWNlLWdhcC15OiA2MHB4O1xuICB9XG5cbiAgLmwtZ3JpZC5sLWdyaWQtLTIgLmxfX2lubmVyIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDM1JSwgMWZyKSk7XG4gIH1cblxuICAubC1ncmlkLmwtZ3JpZC0tMyAubF9faW5uZXIge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KGF1dG8tZml0LCBtaW5tYXgoMjUlLCAxZnIpKTtcbiAgfVxuXG4gIC5sLWdyaWQubC1ncmlkLS0zIC5sX19pbm5lciA+IC5sX19pdGVtIHtcbiAgICB3aWR0aDogY2FsYygoMTAwJSAtIDEycmVtKSAvIDMpO1xuICB9XG5cbiAgLmwtZ3JpZC5sLWdyaWQtLTQgLmxfX2lubmVyIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpdCwgbWlubWF4KDEwZW0sIDFmcikpO1xuICB9XG5cbiAgLmwtZ3JpZC5sLWdyaWQtLTQgLmxfX2lubmVyID4gLmxfX2l0ZW0ge1xuICAgIHdpZHRoOiBjYWxjKCgxMDAlIC0gMTZyZW0pIC8gNCk7XG4gIH1cblxuICAubC1ncmlkIC5sX19pbm5lciA+IC5sX19pdGVtOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCkge1xuICAubC1ncmlkIC5sX19pbm5lciB7XG4gICAgLS1zcGFjZS1nYXAteDogNzVweDtcbiAgICAtLXNwYWNlLWdhcC15OiA3NXB4O1xuICB9XG59XG4iLCIvKlxuICogQGZpbGVcbiAqIFByb3ZpZGVzIGdyaWQgc3R5bGVzIGZvciB2aWV3IHBsdWdpbi5cbiAqL1xuLmwtZ3JpZCAubF9faW5uZXIgPiAqICsgKiB7XG4gIG1hcmdpbi10b3A6IHZhcigtLXNwYWNlLWdhcC15KTtcbn1cblxuQG1lZGlhIChtaW4td2lkdGg6IDYwMHB4KSB7XG4gIC5sLWdyaWQgLmxfX2lubmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBtYXJnaW46IC0xcmVtIC00OHB4O1xuICAgIGNvbHVtbi1nYXA6IHZhcigtLXNwYWNlLWdhcC14KTtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIHJvdy1nYXA6IHZhcigtLXNwYWNlLWdhcC15KTtcbiAgfVxuICAubC1ncmlkLmwtZ3JpZC0tMiAubF9faW5uZXIsXG4gIC5sLWdyaWQubC1ncmlkLS00IC5sX19pbm5lciB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgzNSUsIDFmcikpO1xuICB9XG4gIC5sLWdyaWQubC1ncmlkLS0yIC5sX19pbm5lciA+IC5sX19pdGVtLFxuICAubC1ncmlkLmwtZ3JpZC0tNCAubF9faW5uZXIgPiAubF9faXRlbSB7XG4gICAgZmxleDogbm9uZTtcbiAgICB3aWR0aDogY2FsYygoMTAwJSAtIDhyZW0pIC8gMik7XG4gICAgbWFyZ2luOiAxcmVtIDJyZW07XG4gIH1cbiAgLmwtZ3JpZCAubF9faW5uZXIgPiAubF9faXRlbTpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG4gIEBzdXBwb3J0cyAoZGlzcGxheTogZ3JpZCkge1xuICAgIC5sLWdyaWQgLmxfX2lubmVyIHtcbiAgICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICAgIH1cbiAgICAubC1ncmlkIC5sX19pbm5lciA+IC5sX19pdGVtIHtcbiAgICAgIG1hcmdpbjogMCAhaW1wb3J0YW50O1xuICAgICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgICB9XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA5OTBweCkge1xuICAubC1ncmlkIC5sX19pbm5lciB7XG4gICAgLS1zcGFjZS1nYXAteDogNjBweDtcbiAgICAtLXNwYWNlLWdhcC15OiA2MHB4O1xuICB9XG4gIC5sLWdyaWQubC1ncmlkLS0yIC5sX19pbm5lciB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgzNSUsIDFmcikpO1xuICB9XG4gIC5sLWdyaWQubC1ncmlkLS0zIC5sX19pbm5lciB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgyNSUsIDFmcikpO1xuICB9XG4gIC5sLWdyaWQubC1ncmlkLS0zIC5sX19pbm5lciA+IC5sX19pdGVtIHtcbiAgICB3aWR0aDogY2FsYygoMTAwJSAtIDEycmVtKSAvIDMpO1xuICB9XG4gIC5sLWdyaWQubC1ncmlkLS00IC5sX19pbm5lciB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsIG1pbm1heCgxMGVtLCAxZnIpKTtcbiAgfVxuICAubC1ncmlkLmwtZ3JpZC0tNCAubF9faW5uZXIgPiAubF9faXRlbSB7XG4gICAgd2lkdGg6IGNhbGMoKDEwMCUgLSAxNnJlbSkgLyA0KTtcbiAgfVxuICAubC1ncmlkIC5sX19pbm5lciA+IC5sX19pdGVtOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIG1hcmdpbi1ib3R0b206IDA7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxNDAwcHgpIHtcbiAgLmwtZ3JpZCAubF9faW5uZXIge1xuICAgIC0tc3BhY2UtZ2FwLXg6IDc1cHg7XG4gICAgLS1zcGFjZS1nYXAteTogNzVweDtcbiAgfVxufSJdfQ== */
