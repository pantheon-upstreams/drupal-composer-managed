/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
.site-footer__wrapper {
  background-color: var(--color-surf--black);
  max-width: 100%;
  width: 100%;
}
.site-footer__wrapper .visually-hidden {
  color: #fff;
}
.site-footer__wrapper .footer-top__wrapper {
  padding: 32px 15px;
  width: 100%;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-top__wrapper {
    background-image: url("../../../../images/textures/footer-particles.svg");
    background-repeat: no-repeat;
    background-size: 324px;
    background-position: right bottom;
    padding: 60px 40px;
    margin: 0;
    width: 100%;
    max-width: 100%;
  }
}
@media (min-width: 1620px) {
  .site-footer__wrapper .footer-top__wrapper {
    margin: 0 auto;
    padding: 88px 120px;
  }
}
.site-footer__wrapper .footer-top__wrapper .footer-title {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-heading);
  font-size: var(--font-size-heading-two);
  line-height: var(--font-line-height-heading-two);
  color: #fff;
  font-weight: var(--font-weight-medium);
  letter-spacing: 0.015em;
  margin-bottom: 20px;
  text-transform: uppercase;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-top__wrapper .footer-title {
    margin-bottom: 40px;
  }
}
.site-footer__wrapper .footer-top {
  margin: 0;
  max-width: 100%;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-top {
    margin: 0 auto;
  }
}
@media (min-width: 1620px) {
  .site-footer__wrapper .footer-top {
    -webkit-box-align: center;
            align-items: center;
    padding: 0;
  }
}
.site-footer__wrapper .footer-lists {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 32px;
  gap: 32px;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-lists {
    grid-template-columns: repeat(2, 1fr);
    gap: 60px;
  }
}
@media (min-width: 1620px) {
  .site-footer__wrapper .footer-lists {
    grid-template-columns: repeat(3, 1fr);
  }
}
.site-footer__wrapper .footer-lists .footer-label {
  font-style: normal;
  text-transform: uppercase;
  font-family: var(--font-family-condensed);
  font-size: var(--font-size-label-peewee);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--font-letter-spacing-wide);
  line-height: var(--font-line-height-label-peewee);
  color: #fff;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-lists .footer-label {
    margin-bottom: 12px;
  }
}
@media (min-width: 1620px) {
  .site-footer__wrapper .footer-lists .footer-label {
    margin-bottom: 36px;
  }
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-lists .social__wrapper {
    grid-column-start: 1;
    grid-column-end: 3;
  }
}
@media (min-width: 1620px) {
  .site-footer__wrapper .footer-lists .social__wrapper {
    grid-column: initial;
    grid-row: initial;
  }
}
.site-footer__wrapper .footer-lists .social__wrapper .newsletter__wrapper {
  margin: 24px 0;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-lists .social__wrapper .newsletter__wrapper {
    margin: 36px 0;
  }
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-lists .social__wrapper .newsletter__wrapper a.gradient-button {
    font-size: 22px;
  }
}
.site-footer__wrapper .footer-lists .social__wrapper ul.social-list {
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
          flex-flow: row wrap;
  gap: 28px;
}
.site-footer__wrapper .footer-lists .social__wrapper ul.social-list > li {
  list-style: none;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-lists .social__wrapper ul.social-list {
    gap: 32px;
  }
}
.site-footer__wrapper .footer-lists .social__wrapper ul.social-list li a .icon {
  height: 32px;
  width: 32px;
}
.site-footer__wrapper .footer-lists .social__wrapper ul.social-list li a .icon svg path {
  -webkit-transition-duration: 0.25s;
       -o-transition-duration: 0.25s;
          transition-duration: 0.25s;
  -webkit-transition-timing-function: linear;
       -o-transition-timing-function: linear;
          transition-timing-function: linear;
  fill: #fff;
}
.site-footer__wrapper .footer-lists .social__wrapper ul.social-list li a:hover .icon svg path {
  -webkit-transition-duration: 0.25s;
       -o-transition-duration: 0.25s;
          transition-duration: 0.25s;
  -webkit-transition-timing-function: linear;
       -o-transition-timing-function: linear;
          transition-timing-function: linear;
  fill: var(--color-surf--gold);
}
@media (max-width: 767.98px) {
  .site-footer__wrapper .footer-lists .contact__wrapper .footer-label {
    margin-bottom: 4px;
  }
}
.site-footer__wrapper .footer-lists .contact__wrapper address {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-large);
  line-height: var(--font-line-height-body-large);
  color: #fff;
  font-style: inherit;
}
.site-footer__wrapper .footer-lists .contact__wrapper ul.contact-list {
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}
.site-footer__wrapper .footer-lists .contact__wrapper ul.contact-list > li {
  list-style: none;
}
.site-footer__wrapper .footer-lists .contact__wrapper ul.contact-list li {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}
.site-footer__wrapper .footer-lists .contact__wrapper ul.contact-list li:not(:last-child) {
  margin-bottom: 4px;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-lists .contact__wrapper ul.contact-list li:not(:last-child) {
    margin-bottom: 12px;
  }
}
.site-footer__wrapper .footer-lists .contact__wrapper a {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-large);
  line-height: var(--font-line-height-body-large);
  color: #fff;
  text-decoration: none;
}
.site-footer__wrapper .footer-lists .contact__wrapper a:hover {
  text-decoration: underline;
}
@media (max-width: 767.98px) {
  .site-footer__wrapper .footer-lists .info__wrapper .footer-label {
    margin-bottom: 8px;
  }
}
.site-footer__wrapper .footer-lists .info__wrapper ul.info-list {
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
}
.site-footer__wrapper .footer-lists .info__wrapper ul.info-list > li {
  list-style: none;
}
.site-footer__wrapper .footer-lists .info__wrapper ul.info-list li {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}
.site-footer__wrapper .footer-lists .info__wrapper ul.info-list li:not(:last-child) {
  margin-bottom: 8px;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-lists .info__wrapper ul.info-list li:not(:last-child) {
    margin-bottom: 12px;
  }
}
.site-footer__wrapper .footer-lists .info__wrapper ul.info-list li a {
  font-weight: var(--font-weight-regular);
  font-family: var(--font-family-body);
  font-size: var(--font-size-body-large);
  line-height: var(--font-line-height-body-large);
  color: #fff;
  text-decoration: none;
}
.site-footer__wrapper .footer-lists .info__wrapper ul.info-list li a:hover {
  text-decoration: underline;
}
.site-footer__wrapper .footer-bottom__wrapper {
  background: #000;
  width: 100%;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-bottom__wrapper {
    -webkit-box-align: center;
            align-items: center;
    padding: 32px 40px;
  }
}
@media (min-width: 1620px) {
  .site-footer__wrapper .footer-bottom__wrapper {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-flow: row;
    padding: 32px 120px;
    gap: 32px;
  }
}
.site-footer__wrapper .footer-bottom {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  margin: 0;
  max-width: 100%;
  padding: 32px 0 0 0;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-bottom {
    padding: 0;
    margin: 0 auto;
  }
}
@media (min-width: 1620px) {
  .site-footer__wrapper .footer-bottom {
    -webkit-box-align: center;
            align-items: center;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
    gap: 32px;
  }
}
.site-footer__wrapper .footer-utility {
  padding: 8px 15px 20px 15px;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-utility {
    padding: 32px 0;
  }
}
.site-footer__wrapper ul.footer-utility-nav {
  margin: 0;
  padding: 0;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
          flex-direction: column;
  -webkit-box-align: start;
          align-items: flex-start;
  padding: 0px;
}
.site-footer__wrapper ul.footer-utility-nav > li {
  list-style: none;
}
@media (min-width: 1024px) {
  .site-footer__wrapper ul.footer-utility-nav {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-direction: row;
  }
}
.site-footer__wrapper ul.footer-utility-nav li {
  margin: 0;
  position: relative;
}
.site-footer__wrapper ul.footer-utility-nav li:not(:first-child) {
  margin-top: 8px;
}
@media (min-width: 768px) {
  .site-footer__wrapper ul.footer-utility-nav li:not(:first-child) {
    margin-top: 12px;
  }
}
@media (min-width: 1024px) {
  .site-footer__wrapper ul.footer-utility-nav li:not(:first-child) {
    margin-top: 0;
  }
}
@media (min-width: 1024px) {
  .site-footer__wrapper ul.footer-utility-nav li:first-child {
    padding-right: 16px;
  }
  .site-footer__wrapper ul.footer-utility-nav li:not(:first-child) {
    padding: 0 16px;
  }
  .site-footer__wrapper ul.footer-utility-nav li:not(:first-child):before {
    bottom: 0;
    background-color: #585858;
    content: "";
    height: 16px;
    left: 0;
    position: absolute;
    top: 6px;
    width: 2px;
  }
}
.site-footer__wrapper ul.footer-utility-nav li a {
  color: #fff;
  font-family: var(--font-family-sans);
  font-weight: var(--font-weight-regular);
  font-size: 16px;
  line-height: 148%;
  text-decoration: none;
}
.site-footer__wrapper ul.footer-utility-nav li a:hover {
  text-decoration: underline;
}
.site-footer__wrapper .footer-logo {
  display: block;
  height: 2.25rem;
  margin-bottom: 8px;
  max-width: 18.375rem;
  padding: 0 15px;
  width: 100%;
}
.site-footer__wrapper .footer-logo:hover img {
  -webkit-transition-duration: 0.25s;
       -o-transition-duration: 0.25s;
          transition-duration: 0.25s;
  -webkit-transition-timing-function: linear;
       -o-transition-timing-function: linear;
          transition-timing-function: linear;
  opacity: 0.5;
}
.site-footer__wrapper .footer-logo img {
  width: 100%;
  -webkit-transition-duration: 0.25s;
       -o-transition-duration: 0.25s;
          transition-duration: 0.25s;
  -webkit-transition-timing-function: linear;
       -o-transition-timing-function: linear;
          transition-timing-function: linear;
}
@media (min-width: 768px) {
  .site-footer__wrapper .footer-logo {
    margin: 0;
    padding: 0;
  }
}
.site-footer__wrapper .back-to-top {
  -webkit-box-align: center;
          align-items: center;
  background: #262626;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
          flex-direction: row;
  -webkit-box-pack: center;
          justify-content: center;
  padding: 6px 16px;
  height: 60px;
  width: 100%;
  -webkit-transition-duration: 0.25s;
       -o-transition-duration: 0.25s;
          transition-duration: 0.25s;
  -webkit-transition-timing-function: linear;
       -o-transition-timing-function: linear;
          transition-timing-function: linear;
}
.site-footer__wrapper .back-to-top:hover {
  background: var(--color-surf--dark-grey);
  -webkit-transition-duration: 0.25s;
       -o-transition-duration: 0.25s;
          transition-duration: 0.25s;
  -webkit-transition-timing-function: linear;
       -o-transition-timing-function: linear;
          transition-timing-function: linear;
}
.site-footer__wrapper .back-to-top .icon--ui-icon-angle-up {
  display: inherit;
}
.site-footer__wrapper .back-to-top .icon--ui-icon-angle-up svg path {
  stroke: #fff;
}
@media (min-width: 1024px) {
  .site-footer__wrapper .back-to-top {
    height: 40px;
    width: 60px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpYWxzL2Z1bmN0aW9ucy9fYnAuc2NzcyIsInBhcnRpYWxzL3NldHRpbmdzL19icC5zY3NzIiwicGFydGlhbHMvbWl4aW5zL19icC5zY3NzIiwiY29tcG9uZW50cy9zaXRlLWZvb3Rlci9zaXRlLWZvb3Rlci5jb21wb25lbnQuc2NzcyIsImNvbXBvbmVudHMvc2l0ZS1mb290ZXIvc2l0ZS1mb290ZXIuY29tcG9uZW50LmNzcyIsInBhcnRpYWxzL21peGlucy9fZm9udC5zY3NzIiwicGFydGlhbHMvbWl4aW5zL19saXN0LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7RUFBQTtBQWFBOzs7dUNBQUE7QUFnQkE7Ozt1Q0FBQTtBQWFBOzs7Ozt1Q0FBQTtBQWVBOzs7O3VDQUFBO0FBekRBOzs7Ozs7Ozs7O0VBQUE7QUFhQTs7O3VDQUFBO0FBZ0JBOzs7dUNBQUE7QUFhQTs7Ozs7dUNBQUE7QUFlQTs7Ozt1Q0FBQTtBQ3pEQTs7O0VBQUE7QUFLQTs7dUNBQUE7QUNMQTs7O0VBQUE7QUFNQTs7dUNBQUE7QUNKQTtFQUNFLDBDQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7QUN5RUY7QUR2RUU7RUFDRSxXQUFBO0FDeUVKO0FEckVFO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0FDdUVKO0FGdkVJO0VDRkY7SUFNSSx5RUFBQTtJQUNBLDRCQUFBO0lBQ0Esc0JBQUE7SUFDQSxpQ0FBQTtJQUNBLGtCQUFBO0lBQ0EsU0FBQTtJQUNBLFdBQUE7SUFDQSxlQUFBO0VDdUVKO0FBQ0Y7QUZuRkk7RUNGRjtJQWtCSSxjQUFBO0lBQ0EsbUJBQUE7RUN1RUo7QUFDRjtBRHJFSTtFRWxCRix1Q0FBQTtFQUNBLHVDQUFBO0VBQ0EsdUNBQUE7RUFDQSxnREFBQTtFRmlCSSxXQUFBO0VBQ0Esc0NBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EseUJBQUE7QUMwRU47QUZwR0k7RUNvQkE7SUFVSSxtQkFBQTtFQzBFTjtBQUNGO0FEdEVFO0VBQ0Us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dUNBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxxQkFBQTtBQzBFUjtBRHhFUTtFQUNFLDBCQUFBO0FDMEVWO0FEbkVFO0VBQ0UsY0FBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLG9CQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7QUNxRUo7QURuRUk7RUFDRSxrQ0FBQTtPQUFBLDZCQUFBO1VBQUEsMEJBQUE7RUFDQSwwQ0FBQTtPQUFBLHFDQUFBO1VBQUEsa0NBQUE7RUFDQSxZQUFBO0FDcUVOO0FEbEVJO0VBQ0UsV0FBQTtFQUNBLGtDQUFBO09BQUEsNkJBQUE7VUFBQSwwQkFBQTtFQUNBLDBDQUFBO09BQUEscUNBQUE7VUFBQSxrQ0FBQTtBQ29FTjtBRmhhSTtFQzJVRjtJQXNCSSxTQUFBO0lBQ0EsVUFBQTtFQ21FSjtBQUNGO0FEL0RFO0VBQ0UseUJBQUE7VUFBQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0Esb0JBQUE7RUFBQSxhQUFBO0VBQ0EsOEJBQUE7RUFBQSw2QkFBQTtVQUFBLG1CQUFBO0VBQ0Esd0JBQUE7VUFBQSx1QkFBQTtFQUNBLGlCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxrQ0FBQTtPQUFBLDZCQUFBO1VBQUEsMEJBQUE7RUFDQSwwQ0FBQTtPQUFBLHFDQUFBO1VBQUEsa0NBQUE7QUNpRUo7QUQvREk7RUFDRSx3Q0FBQTtFQUNBLGtDQUFBO09BQUEsNkJBQUE7VUFBQSwwQkFBQTtFQUNBLDBDQUFBO09BQUEscUNBQUE7VUFBQSxrQ0FBQTtBQ2lFTjtBRDlESTtFQUNFLGdCQUFBO0FDZ0VOO0FEL0RNO0VBQ0UsWUFBQTtBQ2lFUjtBRjdiSTtFQ3VXRjtJQTJCSSxZQUFBO0lBQ0EsV0FBQTtFQytESjtBQUNGIiwiZmlsZSI6ImNvbXBvbmVudHMvc2l0ZS1mb290ZXIvc2l0ZS1mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRnVuY3Rpb25zIC0gQnJlYWtwb2ludHNcbiAqIEJyZWFrcG9pbnQgdmlld3BvcnQgc2l6ZXMgYW5kIG1lZGlhIHF1ZXJpZXMuIEJyZWFrcG9pbnRzIGFyZSBkZWZpbmVkIGFzIGEgbWFwIG9mIChuYW1lOiBtaW5pbXVtIHdpZHRoKSwgb3JkZXIgZnJvbVxuICogc21hbGwgdG8gbGFyZ2U6ICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkuIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRncmlkLWJyZWFrcG9pbnRzYFxuICogZ2xvYmFsIHZhcmlhYmxlIGlzIHVzZWQgYXMgdGhlIGAkYnJlYWtwb2ludHNgIGFyZ3VtZW50IGJ5IGRlZmF1bHQuXG4gKlxuICogLSAwMSAtIEJyZWFrcG9pbnQgTmV4dFxuICogLSAwMiAtIEJyZWFrcG9pbnQgTWluaW11bVxuICogLSAwMyAtIEJyZWFrcG9pbnQgTWF4aW11bVxuICogLSAwNCAtIEJyZWFrcG9pbnQgSW5maXhcbiAqL1xuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAxIC0gQnJlYWtwb2ludCBOZXh0XG4gIE5hbWUgb2YgdGhlIG5leHQgYnJlYWtwb2ludCwgb3IgbnVsbCBmb3IgdGhlIGxhc3QgYnJlYWtwb2ludC5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbkBmdW5jdGlvbiBicmVha3BvaW50LW5leHQoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMsICRicmVha3BvaW50LW5hbWVzOiBtYXAta2V5cygkYnJlYWtwb2ludHMpKSB7XG4gICRuOiBpbmRleCgkYnJlYWtwb2ludC1uYW1lcywgJG5hbWUpO1xuICBAaWYgbm90ICRuIHtcbiAgICBAZXJyb3IgXCJicmVha3BvaW50IGAjeyRuYW1lfWAgbm90IGZvdW5kIGluIGAjeyRicmVha3BvaW50c31gXCI7XG4gIH1cbiAgQHJldHVybiBpZigkbiA8IGxlbmd0aCgkYnJlYWtwb2ludC1uYW1lcyksIG50aCgkYnJlYWtwb2ludC1uYW1lcywgJG4gKyAxKSwgbnVsbCk7XG59XG5cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAyIC0gQnJlYWtwb2ludCBNaW5pbXVtXG4gIE1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIHNtYWxsZXN0IChmaXJzdCkgYnJlYWtwb2ludC5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbkBmdW5jdGlvbiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICBAcmV0dXJuIGlmKCRtaW4gIT0gMCwgJG1pbiwgbnVsbCk7XG59XG5cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAzIC0gQnJlYWtwb2ludCBNYXhpbXVtXG4gIFRoZSBtYXhpbXVtIHZhbHVlIGlzIHJlZHVjZWQgYnkgMC4wMnB4IHRvIHdvcmsgYXJvdW5kIHRoZSBsaW1pdGF0aW9ucyBvZiBgbWluLWAgYW5kIGBtYXgtYCBwcmVmaXhlcyBhbmQgdmlld3BvcnRzXG4gIHdpdGggZnJhY3Rpb25hbCB3aWR0aHMuIFNlZSBodHRwczovL3d3dy53My5vcmcvVFIvbWVkaWFxdWVyaWVzLTQvI21xLW1pbi1tYXguIFVzZXMgMC4wMnB4IHJhdGhlciB0aGFuIDAuMDFweCB0byB3b3JrXG4gIGFyb3VuZCBhIGN1cnJlbnQgcm91bmRpbmcgYnVnIGluIFNhZmFyaS4gU2VlIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xNzgyNjFcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbkBmdW5jdGlvbiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWF4OiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICBAcmV0dXJuIGlmKCRtYXggYW5kICRtYXggPiAwLCAkbWF4IC0gLjAyLCBudWxsKTtcbn1cblxuXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDQgLSBCcmVha3BvaW50IEluZml4XG4gIFJldHVybnMgYSBibGFuayBzdHJpbmcgaWYgc21hbGxlc3QgYnJlYWtwb2ludCwgb3RoZXJ3aXNlIHJldHVybnMgdGhlIG5hbWUgd2l0aCBhIGRhc2ggaW4gZnJvbnQuIFVzZWZ1bCBmb3IgbWFraW5nXG4gIHJlc3BvbnNpdmUgdXRpbGl0aWVzLlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtaW5maXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgQHJldHVybiBpZihicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKSA9PSBudWxsLCBcIlwiLCBcIi0jeyRuYW1lfVwiKTtcbn1cbiIsIi8qKlxuICogU2V0dGluZ3MgLSBCcmVha3BvaW50c1xuICogLSAwMSAtIE1hcHBpbmdcbiAqL1xuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMSAtIE1hcHBpbmdcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiRncmlkLWJyZWFrcG9pbnRzOiAoXG4gIHhzbWFsbDogMHB4LFxuICBzbWFsbDogNTc2cHgsXG4gIG1lZGl1bTogNzY4cHgsXG4gIGxhcmdlOiAxMDI0cHgsXG4gIHhsYXJnZTogMTIwMHB4LFxuICB4eGxhcmdlOiAxNjIwcHgsXG4pO1xuIiwiLyoqXG4gKiBNaXhpbnMgLSBCcmVha3BvaW50c1xuICogLSAwMSAtIEJyZWFrcG9pbnRzXG4gKi9cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMSAtIEJyZWFrcG9pbnRzXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vLyBNZWRpYSBvZiBhdCBsZWFzdCB0aGUgbWluaW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIHNtYWxsZXN0IGJyZWFrcG9pbnQuXG5AbWl4aW4gYnAtbWluKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAaWYgJG1pbiB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gTWVkaWEgb2YgYXQgbW9zdCB0aGUgbWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIGxhcmdlc3QgYnJlYWtwb2ludC5cbkBtaXhpbiBicC1tYXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1heDogYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50cyk7XG4gIEBpZiAkbWF4IHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBNZWRpYSB0aGF0IHNwYW5zIG11bHRpcGxlIGJyZWFrcG9pbnQgd2lkdGhzLlxuQG1peGluIGJwLWJldHdlZW4oJGxvd2VyLCAkdXBwZXIsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJGxvd2VyLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkdXBwZXIsICRicmVha3BvaW50cyk7XG5cbiAgQGlmICRtaW4gIT0gbnVsbCBhbmQgJG1heCAhPSBudWxsIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikgYW5kIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWF4ID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGxvd2VyLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWluID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkdXBwZXIsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5cbi8vIE1lZGlhIGJldHdlZW4gdGhlIGJyZWFrcG9pbnQncyBtaW5pbXVtIGFuZCBtYXhpbXVtIHdpZHRocy5cbi8vIE5vIG1pbmltdW0gZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LCBhbmQgbm8gbWF4aW11bSBmb3IgdGhlIGxhcmdlc3Qgb25lLlxuQG1peGluIGJwLW9ubHkoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cyk7XG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuXG4gIEBpZiAkbWluICE9IG51bGwgYW5kICRtYXggIT0gbnVsbCB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIGFuZCAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1heCA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWluID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkbmFtZSwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cbiIsIkBpbXBvcnQgXCJfcGFydGlhbHNcIjtcblxuLnNpdGUtZm9vdGVyX193cmFwcGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itc3VyZi0tYmxhY2spO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIC52aXN1YWxseS1oaWRkZW4ge1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG5cbiAgLy8gRm9vdGVyIFRvcCBzZWN0aW9uXG4gIC5mb290ZXItdG9wX193cmFwcGVyIHtcbiAgICBwYWRkaW5nOiAzMnB4IDE1cHg7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICAvLyBUYWJsZXRcbiAgICBAaW5jbHVkZSBicC1taW4obWVkaXVtKSB7XG4gICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi8uLi8uLi9pbWFnZXMvdGV4dHVyZXMvZm9vdGVyLXBhcnRpY2xlcy5zdmdcIik7XG4gICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAzMjRweDtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IGJvdHRvbTtcbiAgICAgIHBhZGRpbmc6IDYwcHggNDBweDtcbiAgICAgIG1hcmdpbjogMDtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC8vIERlc2t0b3BcbiAgICBAaW5jbHVkZSBicC1taW4oeHhsYXJnZSkge1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICBwYWRkaW5nOiA4OHB4IDEyMHB4O1xuICAgIH1cblxuICAgIC5mb290ZXItdGl0bGUge1xuICAgICAgQGluY2x1ZGUgc3VyZi1mb250LWhlYWRpbmctdHdvO1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtbWVkaXVtKTtcbiAgICAgIGxldHRlci1zcGFjaW5nOiAwLjAxNWVtO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG5cbiAgICAgIC8vIFRhYmxldFxuICAgICAgQGluY2x1ZGUgYnAtbWluKG1lZGl1bSkge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC5mb290ZXItdG9wIHtcbiAgICBtYXJnaW46IDA7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuXG4gICAgQGluY2x1ZGUgYnAtbWluKG1lZGl1bSkge1xuICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgfVxuXG4gICAgLy8gTGFyZ2UgRGVza3RvcFxuICAgIEBpbmNsdWRlIGJwLW1pbih4eGxhcmdlKSB7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgcGFkZGluZzogMDtcbiAgICB9XG4gIH1cblxuICAuZm9vdGVyLWxpc3RzIHtcbiAgICBkaXNwbGF5OiBncmlkO1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICAgIGdhcDogMzJweDtcblxuICAgIC8vIFRhYmxldFxuICAgIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gICAgICBnYXA6IDYwcHg7XG4gICAgfVxuXG4gICAgLy8gRGVza3RvcFxuICAgIEBpbmNsdWRlIGJwLW1pbih4eGxhcmdlKSB7XG4gICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xuICAgIH1cblxuICAgIC5mb290ZXItbGFiZWwge1xuICAgICAgQGluY2x1ZGUgc3VyZi1mb250LWxhYmVsLXBlZXdlZTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuXG4gICAgICAvLyBUYWJsZXRcbiAgICAgIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgICAgIH1cblxuICAgICAgLy8gRGVza3RvcFxuICAgICAgQGluY2x1ZGUgYnAtbWluKHh4bGFyZ2UpIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMzZweDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAuc29jaWFsX193cmFwcGVyIHtcbiAgICAgIC8vIFRhYmxldFxuICAgICAgQGluY2x1ZGUgYnAtbWluKG1lZGl1bSkge1xuICAgICAgICBncmlkLWNvbHVtbi1zdGFydDogMTtcbiAgICAgICAgZ3JpZC1jb2x1bW4tZW5kOiAzO1xuICAgICAgfVxuXG4gICAgICAvLyBEZXNrdG9wXG4gICAgICBAaW5jbHVkZSBicC1taW4oeHhsYXJnZSkge1xuICAgICAgICBncmlkLWNvbHVtbjogaW5pdGlhbDtcbiAgICAgICAgZ3JpZC1yb3c6IGluaXRpYWw7XG4gICAgICB9XG5cbiAgICAgIC5uZXdzbGV0dGVyX193cmFwcGVyIHtcbiAgICAgICAgbWFyZ2luOiAyNHB4IDA7XG5cbiAgICAgICAgLy8gVGFibGV0XG4gICAgICAgIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICAgICAgICBtYXJnaW46IDM2cHggMDtcbiAgICAgICAgfVxuICAgICAgICBhLmdyYWRpZW50LWJ1dHRvbiB7XG4gICAgICAgICAgLy8gVGFibGV0XG4gICAgICAgICAgQGluY2x1ZGUgYnAtbWluKG1lZGl1bSkge1xuICAgICAgICAgICAgZm9udC1zaXplOiAyMnB4O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB1bC5zb2NpYWwtbGlzdCB7XG4gICAgICAgIEBpbmNsdWRlIGxpc3QtLW5vLWJ1bGxldHM7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgICAgIGdhcDogMjhweDtcblxuICAgICAgICAvLyBUYWJsZXRcbiAgICAgICAgQGluY2x1ZGUgYnAtbWluKG1lZGl1bSkge1xuICAgICAgICAgIGdhcDogMzJweDtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICBhIC5pY29uIHtcbiAgICAgICAgICAgIGhlaWdodDogMzJweDtcbiAgICAgICAgICAgIHdpZHRoOiAzMnB4O1xuXG4gICAgICAgICAgICBzdmcgcGF0aCB7XG4gICAgICAgICAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMjVzO1xuICAgICAgICAgICAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyO1xuICAgICAgICAgICAgICBmaWxsOiAjZmZmO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBhOmhvdmVyIC5pY29uIHN2ZyBwYXRoIHtcbiAgICAgICAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMjVzO1xuICAgICAgICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGxpbmVhcjtcbiAgICAgICAgICAgIGZpbGw6IHZhcigtLWNvbG9yLXN1cmYtLWdvbGQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC5jb250YWN0X193cmFwcGVyIHtcbiAgICAgIC5mb290ZXItbGFiZWwge1xuICAgICAgICBAaW5jbHVkZSBicC1tYXgobWVkaXVtKSB7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogNHB4O1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGFkZHJlc3Mge1xuICAgICAgICBAaW5jbHVkZSBzdXJmLWZvbnQtYm9keS1sYXJnZTtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGZvbnQtc3R5bGU6IGluaGVyaXQ7XG4gICAgICB9XG5cbiAgICAgIHVsLmNvbnRhY3QtbGlzdCB7XG4gICAgICAgIEBpbmNsdWRlIGxpc3QtLW5vLWJ1bGxldHM7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cbiAgICAgICAgbGkge1xuICAgICAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICAgICAgICAmOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNHB4O1xuXG4gICAgICAgICAgICAvLyBUYWJsZXRcbiAgICAgICAgICAgIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGEge1xuICAgICAgICBAaW5jbHVkZSBzdXJmLWZvbnQtYm9keS1sYXJnZTtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC5pbmZvX193cmFwcGVyIHtcbiAgICAgIC5mb290ZXItbGFiZWwge1xuICAgICAgICBAaW5jbHVkZSBicC1tYXgobWVkaXVtKSB7XG4gICAgICAgICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICB1bC5pbmZvLWxpc3Qge1xuICAgICAgICBAaW5jbHVkZSBsaXN0LS1uby1idWxsZXRzO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuXG4gICAgICAgIGxpIHtcbiAgICAgICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgICAgICAgJjpub3QoOmxhc3QtY2hpbGQpIHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDhweDtcblxuICAgICAgICAgICAgLy8gVGFibGV0XG4gICAgICAgICAgICBAaW5jbHVkZSBicC1taW4obWVkaXVtKSB7XG4gICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEycHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGEge1xuICAgICAgICAgICAgQGluY2x1ZGUgc3VyZi1mb250LWJvZHktbGFyZ2U7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIEZvb3RlciBCb3R0b20gc2VjdGlvblxuICAuZm9vdGVyLWJvdHRvbV9fd3JhcHBlciB7XG4gICAgYmFja2dyb3VuZDogIzAwMDtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIC8vIFRhYmxldFxuICAgIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBwYWRkaW5nOiAzMnB4IDQwcHg7XG4gICAgfVxuXG4gICAgLy8gRGVza3RvcFxuICAgIEBpbmNsdWRlIGJwLW1pbih4eGxhcmdlKSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1mbG93OiByb3c7XG4gICAgICBwYWRkaW5nOiAzMnB4IDEyMHB4O1xuICAgICAgZ2FwOiAzMnB4O1xuICAgIH1cbiAgfVxuXG4gIC5mb290ZXItYm90dG9tIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWFyZ2luOiAwO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiAzMnB4IDAgMCAwO1xuXG4gICAgQGluY2x1ZGUgYnAtbWluKG1lZGl1bSkge1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cblxuICAgIC8vIExhcmdlIERlc2t0b3BcbiAgICBAaW5jbHVkZSBicC1taW4oeHhsYXJnZSkge1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICBnYXA6IDMycHg7XG4gICAgfVxuICB9XG5cbiAgLy8gVXRpbGl0eSBOYXYgc3BhY2luZ1xuICAuZm9vdGVyLXV0aWxpdHkge1xuICAgIHBhZGRpbmc6IDhweCAxNXB4IDIwcHggMTVweDtcblxuICAgIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICAgIHBhZGRpbmc6IDMycHggMDtcbiAgICB9XG4gIH1cblxuICAvLyBVdGlsaXR5IE5hdiBsaW5rIHN0eWxlc1xuICB1bC5mb290ZXItdXRpbGl0eS1uYXYge1xuICAgIEBpbmNsdWRlIGxpc3QtLW5vLWJ1bGxldHM7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIHBhZGRpbmc6IDBweDtcblxuICAgIC8vIExhcmdlIERlc2t0b3BcbiAgICBAaW5jbHVkZSBicC1taW4obGFyZ2UpIHtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgfVxuXG4gICAgbGkge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAmOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICAgICAgbWFyZ2luLXRvcDogOHB4O1xuXG4gICAgICAgIEBpbmNsdWRlIGJwLW1pbihtZWRpdW0pIHtcbiAgICAgICAgICBtYXJnaW4tdG9wOiAxMnB4O1xuICAgICAgICB9XG5cbiAgICAgICAgQGluY2x1ZGUgYnAtbWluKGxhcmdlKSB7XG4gICAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBAaW5jbHVkZSBicC1taW4obGFyZ2UpIHtcbiAgICAgICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgICAgcGFkZGluZy1yaWdodDogMTZweDtcbiAgICAgICAgfVxuXG4gICAgICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xuICAgICAgICAgIHBhZGRpbmc6IDAgMTZweDtcblxuICAgICAgICAgICY6YmVmb3JlIHtcbiAgICAgICAgICAgIGJvdHRvbTogMDtcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM1ODU4NTg7XG4gICAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgICAgaGVpZ2h0OiAxNnB4O1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIHRvcDogNnB4O1xuICAgICAgICAgICAgd2lkdGg6IDJweDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgYSB7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktc2Fucyk7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTQ4JTtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuXG4gICAgICAgICY6aG92ZXIge1xuICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8gRm9vdGVyIExvZ28gYmxvY2tcbiAgLmZvb3Rlci1sb2dvIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBoZWlnaHQ6IHJlbSgzNnB4KTtcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XG4gICAgbWF4LXdpZHRoOiByZW0oMjk0cHgpO1xuICAgIHBhZGRpbmc6IDAgMTVweDtcbiAgICB3aWR0aDogMTAwJTtcblxuICAgICY6aG92ZXIgaW1nIHtcbiAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMjVzO1xuICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGxpbmVhcjtcbiAgICAgIG9wYWNpdHk6IDAuNTtcbiAgICB9XG5cbiAgICBpbWcge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjI1cztcbiAgICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBsaW5lYXI7XG4gICAgfVxuXG4gICAgLy8gVGFibGV0XG4gICAgQGluY2x1ZGUgYnAtbWluKG1lZGl1bSkge1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMDtcbiAgICB9XG4gIH1cblxuICAvLyBCYWNrIHRvcCBsaW5rXG4gIC5iYWNrLXRvLXRvcCB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiAjMjYyNjI2O1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiA2cHggMTZweDtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4yNXM7XG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGxpbmVhcjtcblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3Itc3VyZi0tZGFyay1ncmV5KTtcbiAgICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMjVzO1xuICAgICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGxpbmVhcjtcbiAgICB9XG5cbiAgICAuaWNvbi0tdWktaWNvbi1hbmdsZS11cCB7XG4gICAgICBkaXNwbGF5OiBpbmhlcml0O1xuICAgICAgc3ZnIHBhdGgge1xuICAgICAgICBzdHJva2U6ICNmZmY7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gU21hbGwgRGVza3RvcFxuICAgIEBpbmNsdWRlIGJwLW1pbihsYXJnZSkge1xuICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgd2lkdGg6IDYwcHg7XG4gICAgfVxuICB9XG59XG4iLCIvKipcbiAqIEZ1bmN0aW9ucyAtIEJyZWFrcG9pbnRzXG4gKiBCcmVha3BvaW50IHZpZXdwb3J0IHNpemVzIGFuZCBtZWRpYSBxdWVyaWVzLiBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksIG9yZGVyIGZyb21cbiAqIHNtYWxsIHRvIGxhcmdlOiAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpLiBUaGUgbWFwIGRlZmluZWQgaW4gdGhlIGAkZ3JpZC1icmVha3BvaW50c2BcbiAqIGdsb2JhbCB2YXJpYWJsZSBpcyB1c2VkIGFzIHRoZSBgJGJyZWFrcG9pbnRzYCBhcmd1bWVudCBieSBkZWZhdWx0LlxuICpcbiAqIC0gMDEgLSBCcmVha3BvaW50IE5leHRcbiAqIC0gMDIgLSBCcmVha3BvaW50IE1pbmltdW1cbiAqIC0gMDMgLSBCcmVha3BvaW50IE1heGltdW1cbiAqIC0gMDQgLSBCcmVha3BvaW50IEluZml4XG4gKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAxIC0gQnJlYWtwb2ludCBOZXh0XG4gIE5hbWUgb2YgdGhlIG5leHQgYnJlYWtwb2ludCwgb3IgbnVsbCBmb3IgdGhlIGxhc3QgYnJlYWtwb2ludC5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMiAtIEJyZWFrcG9pbnQgTWluaW11bVxuICBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDMgLSBCcmVha3BvaW50IE1heGltdW1cbiAgVGhlIG1heGltdW0gdmFsdWUgaXMgcmVkdWNlZCBieSAwLjAycHggdG8gd29yayBhcm91bmQgdGhlIGxpbWl0YXRpb25zIG9mIGBtaW4tYCBhbmQgYG1heC1gIHByZWZpeGVzIGFuZCB2aWV3cG9ydHNcbiAgd2l0aCBmcmFjdGlvbmFsIHdpZHRocy4gU2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9tZWRpYXF1ZXJpZXMtNC8jbXEtbWluLW1heC4gVXNlcyAwLjAycHggcmF0aGVyIHRoYW4gMC4wMXB4IHRvIHdvcmtcbiAgYXJvdW5kIGEgY3VycmVudCByb3VuZGluZyBidWcgaW4gU2FmYXJpLiBTZWUgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE3ODI2MVxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDA0IC0gQnJlYWtwb2ludCBJbmZpeFxuICBSZXR1cm5zIGEgYmxhbmsgc3RyaW5nIGlmIHNtYWxsZXN0IGJyZWFrcG9pbnQsIG90aGVyd2lzZSByZXR1cm5zIHRoZSBuYW1lIHdpdGggYSBkYXNoIGluIGZyb250LiBVc2VmdWwgZm9yIG1ha2luZ1xuICByZXNwb25zaXZlIHV0aWxpdGllcy5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIEZ1bmN0aW9ucyAtIEJyZWFrcG9pbnRzXG4gKiBCcmVha3BvaW50IHZpZXdwb3J0IHNpemVzIGFuZCBtZWRpYSBxdWVyaWVzLiBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksIG9yZGVyIGZyb21cbiAqIHNtYWxsIHRvIGxhcmdlOiAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpLiBUaGUgbWFwIGRlZmluZWQgaW4gdGhlIGAkZ3JpZC1icmVha3BvaW50c2BcbiAqIGdsb2JhbCB2YXJpYWJsZSBpcyB1c2VkIGFzIHRoZSBgJGJyZWFrcG9pbnRzYCBhcmd1bWVudCBieSBkZWZhdWx0LlxuICpcbiAqIC0gMDEgLSBCcmVha3BvaW50IE5leHRcbiAqIC0gMDIgLSBCcmVha3BvaW50IE1pbmltdW1cbiAqIC0gMDMgLSBCcmVha3BvaW50IE1heGltdW1cbiAqIC0gMDQgLSBCcmVha3BvaW50IEluZml4XG4gKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAxIC0gQnJlYWtwb2ludCBOZXh0XG4gIE5hbWUgb2YgdGhlIG5leHQgYnJlYWtwb2ludCwgb3IgbnVsbCBmb3IgdGhlIGxhc3QgYnJlYWtwb2ludC5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMiAtIEJyZWFrcG9pbnQgTWluaW11bVxuICBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDMgLSBCcmVha3BvaW50IE1heGltdW1cbiAgVGhlIG1heGltdW0gdmFsdWUgaXMgcmVkdWNlZCBieSAwLjAycHggdG8gd29yayBhcm91bmQgdGhlIGxpbWl0YXRpb25zIG9mIGBtaW4tYCBhbmQgYG1heC1gIHByZWZpeGVzIGFuZCB2aWV3cG9ydHNcbiAgd2l0aCBmcmFjdGlvbmFsIHdpZHRocy4gU2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9tZWRpYXF1ZXJpZXMtNC8jbXEtbWluLW1heC4gVXNlcyAwLjAycHggcmF0aGVyIHRoYW4gMC4wMXB4IHRvIHdvcmtcbiAgYXJvdW5kIGEgY3VycmVudCByb3VuZGluZyBidWcgaW4gU2FmYXJpLiBTZWUgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE3ODI2MVxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDA0IC0gQnJlYWtwb2ludCBJbmZpeFxuICBSZXR1cm5zIGEgYmxhbmsgc3RyaW5nIGlmIHNtYWxsZXN0IGJyZWFrcG9pbnQsIG90aGVyd2lzZSByZXR1cm5zIHRoZSBuYW1lIHdpdGggYSBkYXNoIGluIGZyb250LiBVc2VmdWwgZm9yIG1ha2luZ1xuICByZXNwb25zaXZlIHV0aWxpdGllcy5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIFNldHRpbmdzIC0gQnJlYWtwb2ludHNcbiAqIC0gMDEgLSBNYXBwaW5nXG4gKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAxIC0gTWFwcGluZ1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogTWl4aW5zIC0gQnJlYWtwb2ludHNcbiAqIC0gMDEgLSBCcmVha3BvaW50c1xuICovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMSAtIEJyZWFrcG9pbnRzXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLnNpdGUtZm9vdGVyX193cmFwcGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29sb3Itc3VyZi0tYmxhY2spO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuLnNpdGUtZm9vdGVyX193cmFwcGVyIC52aXN1YWxseS1oaWRkZW4ge1xuICBjb2xvcjogI2ZmZjtcbn1cbi5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuZm9vdGVyLXRvcF9fd3JhcHBlciB7XG4gIHBhZGRpbmc6IDMycHggMTVweDtcbiAgd2lkdGg6IDEwMCU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItdG9wX193cmFwcGVyIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi8uLi8uLi8uLi9pbWFnZXMvdGV4dHVyZXMvZm9vdGVyLXBhcnRpY2xlcy5zdmdcIik7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDMyNHB4O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IGJvdHRvbTtcbiAgICBwYWRkaW5nOiA2MHB4IDQwcHg7XG4gICAgbWFyZ2luOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1heC13aWR0aDogMTAwJTtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDE2MjBweCkge1xuICAuc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci10b3BfX3dyYXBwZXIge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmc6IDg4cHggMTIwcHg7XG4gIH1cbn1cbi5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuZm9vdGVyLXRvcF9fd3JhcHBlciAuZm9vdGVyLXRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LXJlZ3VsYXIpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktaGVhZGluZyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWhlYWRpbmctdHdvKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtaGVhZGluZy10d28pO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LW1lZGl1bSk7XG4gIGxldHRlci1zcGFjaW5nOiAwLjAxNWVtO1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuZm9vdGVyLXRvcF9fd3JhcHBlciAuZm9vdGVyLXRpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiA0MHB4O1xuICB9XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci10b3Age1xuICBtYXJnaW46IDA7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci10b3Age1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTYyMHB4KSB7XG4gIC5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuZm9vdGVyLXRvcCB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xuICBnYXA6IDMycHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbGlzdHMge1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDIsIDFmcik7XG4gICAgZ2FwOiA2MHB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTYyMHB4KSB7XG4gIC5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuZm9vdGVyLWxpc3RzIHtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgzLCAxZnIpO1xuICB9XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuZm9vdGVyLWxhYmVsIHtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktY29uZGVuc2VkKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtbGFiZWwtcGVld2VlKTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LWJvbGQpO1xuICBsZXR0ZXItc3BhY2luZzogdmFyKC0tZm9udC1sZXR0ZXItc3BhY2luZy13aWRlKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtbGFiZWwtcGVld2VlKTtcbiAgY29sb3I6ICNmZmY7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbGlzdHMgLmZvb3Rlci1sYWJlbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDE2MjBweCkge1xuICAuc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuZm9vdGVyLWxhYmVsIHtcbiAgICBtYXJnaW4tYm90dG9tOiAzNnB4O1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbGlzdHMgLnNvY2lhbF9fd3JhcHBlciB7XG4gICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7XG4gICAgZ3JpZC1jb2x1bW4tZW5kOiAzO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTYyMHB4KSB7XG4gIC5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuZm9vdGVyLWxpc3RzIC5zb2NpYWxfX3dyYXBwZXIge1xuICAgIGdyaWQtY29sdW1uOiBpbml0aWFsO1xuICAgIGdyaWQtcm93OiBpbml0aWFsO1xuICB9XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuc29jaWFsX193cmFwcGVyIC5uZXdzbGV0dGVyX193cmFwcGVyIHtcbiAgbWFyZ2luOiAyNHB4IDA7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbGlzdHMgLnNvY2lhbF9fd3JhcHBlciAubmV3c2xldHRlcl9fd3JhcHBlciB7XG4gICAgbWFyZ2luOiAzNnB4IDA7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuc29jaWFsX193cmFwcGVyIC5uZXdzbGV0dGVyX193cmFwcGVyIGEuZ3JhZGllbnQtYnV0dG9uIHtcbiAgICBmb250LXNpemU6IDIycHg7XG4gIH1cbn1cbi5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuZm9vdGVyLWxpc3RzIC5zb2NpYWxfX3dyYXBwZXIgdWwuc29jaWFsLWxpc3Qge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGdhcDogMjhweDtcbn1cbi5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuZm9vdGVyLWxpc3RzIC5zb2NpYWxfX3dyYXBwZXIgdWwuc29jaWFsLWxpc3QgPiBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbGlzdHMgLnNvY2lhbF9fd3JhcHBlciB1bC5zb2NpYWwtbGlzdCB7XG4gICAgZ2FwOiAzMnB4O1xuICB9XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuc29jaWFsX193cmFwcGVyIHVsLnNvY2lhbC1saXN0IGxpIGEgLmljb24ge1xuICBoZWlnaHQ6IDMycHg7XG4gIHdpZHRoOiAzMnB4O1xufVxuLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbGlzdHMgLnNvY2lhbF9fd3JhcHBlciB1bC5zb2NpYWwtbGlzdCBsaSBhIC5pY29uIHN2ZyBwYXRoIHtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4yNXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBsaW5lYXI7XG4gIGZpbGw6ICNmZmY7XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuc29jaWFsX193cmFwcGVyIHVsLnNvY2lhbC1saXN0IGxpIGE6aG92ZXIgLmljb24gc3ZnIHBhdGgge1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjI1cztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGxpbmVhcjtcbiAgZmlsbDogdmFyKC0tY29sb3Itc3VyZi0tZ29sZCk7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3Ljk4cHgpIHtcbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbGlzdHMgLmNvbnRhY3RfX3dyYXBwZXIgLmZvb3Rlci1sYWJlbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xuICB9XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuY29udGFjdF9fd3JhcHBlciBhZGRyZXNzIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LXJlZ3VsYXIpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktYm9keSk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWJvZHktbGFyZ2UpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1ib2R5LWxhcmdlKTtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc3R5bGU6IGluaGVyaXQ7XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuY29udGFjdF9fd3JhcHBlciB1bC5jb250YWN0LWxpc3Qge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuY29udGFjdF9fd3JhcHBlciB1bC5jb250YWN0LWxpc3QgPiBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuY29udGFjdF9fd3JhcHBlciB1bC5jb250YWN0LWxpc3QgbGkge1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuY29udGFjdF9fd3JhcHBlciB1bC5jb250YWN0LWxpc3QgbGk6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1ib3R0b206IDRweDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuY29udGFjdF9fd3JhcHBlciB1bC5jb250YWN0LWxpc3QgbGk6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgfVxufVxuLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbGlzdHMgLmNvbnRhY3RfX3dyYXBwZXIgYSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWJvZHkpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1ib2R5LWxhcmdlKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtYm9keS1sYXJnZSk7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuY29udGFjdF9fd3JhcHBlciBhOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG59XG5AbWVkaWEgKG1heC13aWR0aDogNzY3Ljk4cHgpIHtcbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbGlzdHMgLmluZm9fX3dyYXBwZXIgLmZvb3Rlci1sYWJlbCB7XG4gICAgbWFyZ2luLWJvdHRvbTogOHB4O1xuICB9XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuaW5mb19fd3JhcHBlciB1bC5pbmZvLWxpc3Qge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuaW5mb19fd3JhcHBlciB1bC5pbmZvLWxpc3QgPiBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuaW5mb19fd3JhcHBlciB1bC5pbmZvLWxpc3QgbGkge1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuaW5mb19fd3JhcHBlciB1bC5pbmZvLWxpc3QgbGk6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1saXN0cyAuaW5mb19fd3JhcHBlciB1bC5pbmZvLWxpc3QgbGk6bm90KDpsYXN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcbiAgfVxufVxuLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbGlzdHMgLmluZm9fX3dyYXBwZXIgdWwuaW5mby1saXN0IGxpIGEge1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1ib2R5KTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtYm9keS1sYXJnZSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWJvZHktbGFyZ2UpO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbGlzdHMgLmluZm9fX3dyYXBwZXIgdWwuaW5mby1saXN0IGxpIGE6aG92ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbi5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuZm9vdGVyLWJvdHRvbV9fd3JhcHBlciB7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG4gIHdpZHRoOiAxMDAlO1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuZm9vdGVyLWJvdHRvbV9fd3JhcHBlciB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAzMnB4IDQwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxNjIwcHgpIHtcbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItYm90dG9tX193cmFwcGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93O1xuICAgIHBhZGRpbmc6IDMycHggMTIwcHg7XG4gICAgZ2FwOiAzMnB4O1xuICB9XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1ib3R0b20ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW46IDA7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMzJweCAwIDAgMDtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1ib3R0b20ge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxNjIwcHgpIHtcbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItYm90dG9tIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZ2FwOiAzMnB4O1xuICB9XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci11dGlsaXR5IHtcbiAgcGFkZGluZzogOHB4IDE1cHggMjBweCAxNXB4O1xufVxuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuZm9vdGVyLXV0aWxpdHkge1xuICAgIHBhZGRpbmc6IDMycHggMDtcbiAgfVxufVxuLnNpdGUtZm9vdGVyX193cmFwcGVyIHVsLmZvb3Rlci11dGlsaXR5LW5hdiB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmc6IDBweDtcbn1cbi5zaXRlLWZvb3Rlcl9fd3JhcHBlciB1bC5mb290ZXItdXRpbGl0eS1uYXYgPiBsaSB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5zaXRlLWZvb3Rlcl9fd3JhcHBlciB1bC5mb290ZXItdXRpbGl0eS1uYXYge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbn1cbi5zaXRlLWZvb3Rlcl9fd3JhcHBlciB1bC5mb290ZXItdXRpbGl0eS1uYXYgbGkge1xuICBtYXJnaW46IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cbi5zaXRlLWZvb3Rlcl9fd3JhcHBlciB1bC5mb290ZXItdXRpbGl0eS1uYXYgbGk6bm90KDpmaXJzdC1jaGlsZCkge1xuICBtYXJnaW4tdG9wOiA4cHg7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIHVsLmZvb3Rlci11dGlsaXR5LW5hdiBsaTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgbWFyZ2luLXRvcDogMTJweDtcbiAgfVxufVxuQG1lZGlhIChtaW4td2lkdGg6IDEwMjRweCkge1xuICAuc2l0ZS1mb290ZXJfX3dyYXBwZXIgdWwuZm9vdGVyLXV0aWxpdHktbmF2IGxpOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICB9XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5zaXRlLWZvb3Rlcl9fd3JhcHBlciB1bC5mb290ZXItdXRpbGl0eS1uYXYgbGk6Zmlyc3QtY2hpbGQge1xuICAgIHBhZGRpbmctcmlnaHQ6IDE2cHg7XG4gIH1cbiAgLnNpdGUtZm9vdGVyX193cmFwcGVyIHVsLmZvb3Rlci11dGlsaXR5LW5hdiBsaTpub3QoOmZpcnN0LWNoaWxkKSB7XG4gICAgcGFkZGluZzogMCAxNnB4O1xuICB9XG4gIC5zaXRlLWZvb3Rlcl9fd3JhcHBlciB1bC5mb290ZXItdXRpbGl0eS1uYXYgbGk6bm90KDpmaXJzdC1jaGlsZCk6YmVmb3JlIHtcbiAgICBib3R0b206IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzU4NTg1ODtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIGhlaWdodDogMTZweDtcbiAgICBsZWZ0OiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDZweDtcbiAgICB3aWR0aDogMnB4O1xuICB9XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgdWwuZm9vdGVyLXV0aWxpdHktbmF2IGxpIGEge1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LXNhbnMpO1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDE0OCU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cbi5zaXRlLWZvb3Rlcl9fd3JhcHBlciB1bC5mb290ZXItdXRpbGl0eS1uYXYgbGkgYTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuLnNpdGUtZm9vdGVyX193cmFwcGVyIC5mb290ZXItbG9nbyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDIuMjVyZW07XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbiAgbWF4LXdpZHRoOiAxOC4zNzVyZW07XG4gIHBhZGRpbmc6IDAgMTVweDtcbiAgd2lkdGg6IDEwMCU7XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1sb2dvOmhvdmVyIGltZyB7XG4gIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMjVzO1xuICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyO1xuICBvcGFjaXR5OiAwLjU7XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1sb2dvIGltZyB7XG4gIHdpZHRoOiAxMDAlO1xuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjI1cztcbiAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGxpbmVhcjtcbn1cbkBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAuc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmZvb3Rlci1sb2dvIHtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDtcbiAgfVxufVxuLnNpdGUtZm9vdGVyX193cmFwcGVyIC5iYWNrLXRvLXRvcCB7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6ICMyNjI2MjY7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBwYWRkaW5nOiA2cHggMTZweDtcbiAgaGVpZ2h0OiA2MHB4O1xuICB3aWR0aDogMTAwJTtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4yNXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBsaW5lYXI7XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmJhY2stdG8tdG9wOmhvdmVyIHtcbiAgYmFja2dyb3VuZDogdmFyKC0tY29sb3Itc3VyZi0tZGFyay1ncmV5KTtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4yNXM7XG4gIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBsaW5lYXI7XG59XG4uc2l0ZS1mb290ZXJfX3dyYXBwZXIgLmJhY2stdG8tdG9wIC5pY29uLS11aS1pY29uLWFuZ2xlLXVwIHtcbiAgZGlzcGxheTogaW5oZXJpdDtcbn1cbi5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuYmFjay10by10b3AgLmljb24tLXVpLWljb24tYW5nbGUtdXAgc3ZnIHBhdGgge1xuICBzdHJva2U6ICNmZmY7XG59XG5AbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7XG4gIC5zaXRlLWZvb3Rlcl9fd3JhcHBlciAuYmFjay10by10b3Age1xuICAgIGhlaWdodDogNDBweDtcbiAgICB3aWR0aDogNjBweDtcbiAgfVxufSIsIi8vIFNVUkYgTWFpbiAtIEhlYWRpbmcgRm9udHNcbkBtaXhpbiBzdXJmLWZvbnQtaGVhZGluZy1vbmUoKSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1tZWRpdW0pO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktaGVhZGluZyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWhlYWRpbmctb25lKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtaGVhZGluZy1vbmUpO1xufVxuXG5AbWl4aW4gc3VyZi1mb250LWhlYWRpbmctb25lLWFsdCgpIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LWJvbGQpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktaGVhZGluZyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWhlYWRpbmctb25lKTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuMDFlbTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtaGVhZGluZy1vbmUtYWx0KTtcbn1cbkBtaXhpbiBzdXJmLWZvbnQtaGVhZGluZy10d28oKSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWhlYWRpbmcpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1oZWFkaW5nLXR3byk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWhlYWRpbmctdHdvKTtcbn1cbkBtaXhpbiBzdXJmLWZvbnQtaGVhZGluZy10d28tYWx0KCkge1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1oZWFkaW5nKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtaGVhZGluZy10d28pO1xuICBsZXR0ZXItc3BhY2luZzogMC4wMmVtO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1oZWFkaW5nLXR3by1hbHQpO1xufVxuQG1peGluIHN1cmYtZm9udC1oZWFkaW5nLXRocmVlKCkge1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1oZWFkaW5nKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtaGVhZGluZy10aHJlZSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWhlYWRpbmctdGhyZWUpO1xufVxuQG1peGluIHN1cmYtZm9udC1oZWFkaW5nLWZvdXIoKSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWhlYWRpbmcpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1oZWFkaW5nLWZvdXIpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1oZWFkaW5nLWZvdXIpO1xufVxuQG1peGluIHN1cmYtZm9udC1oZWFkaW5nLWZpdmUoKSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWhlYWRpbmcpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1oZWFkaW5nLWZpdmUpO1xufVxuQG1peGluIHN1cmYtZm9udC1oZWFkaW5nLXNpeCgpIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LXJlZ3VsYXIpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktaGVhZGluZyk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWhlYWRpbmctc2l4KTtcbn1cblxuLy8gU1VSRiBNYWluIC0gQm9keSBGb250c1xuQG1peGluIHN1cmYtZm9udC1ib2R5LWp1bWJvKCkge1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtbWVkaXVtKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWJvZHkpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1ib2R5LWp1bWJvKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtYm9keS1qdW1ibyk7XG59XG5AbWl4aW4gc3VyZi1mb250LWJvZHkteC1sYXJnZSgpIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LXJlZ3VsYXIpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktYm9keSk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWJvZHkteC1sYXJnZSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWJvZHkteC1sYXJnZSk7XG59XG5AbWl4aW4gc3VyZi1mb250LWJvZHktbGFyZ2UoKSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWJvZHkpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1ib2R5LWxhcmdlKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtYm9keS1sYXJnZSk7XG59XG5AbWl4aW4gc3VyZi1mb250LWJvZHktbWVkaXVtKCkge1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1ib2R5KTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtYm9keS1tZWRpdW0pO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1ib2R5LW1lZGl1bSk7XG59XG5AbWl4aW4gc3VyZi1mb250LWJvZHktc21hbGwoKSB7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1yZWd1bGFyKTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWJvZHkpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1ib2R5LXNtYWxsKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtYm9keS1zbWFsbCk7XG59XG5AbWl4aW4gc3VyZi1mb250LWJvZHkteC1zbWFsbCgpIHtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LXJlZ3VsYXIpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktYm9keSk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWJvZHkteC1zbWFsbCk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWJvZHkteC1zbWFsbCk7XG59XG5cbi8vIFNVUkYgTWFpbiAtIExhYmVsIEZvbnRzXG5AbWl4aW4gc3VyZi1mb250LWxhYmVsLXgtbGFyZ2UoKSB7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWNvbmRlbnNlZCk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWxhYmVsLWxhcmdlKTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LWJvbGQpO1xuICBsZXR0ZXItc3BhY2luZzogdmFyKC0tZm9udC1sZXR0ZXItc3BhY2luZy13aWRlcik7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWxhYmVsLWxhcmdlKTtcbn1cbkBtaXhpbiBzdXJmLWZvbnQtbGFiZWwtbGFyZ2UoKSB7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LWJvbGQpO1xuICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktY29uZGVuc2VkKTtcbiAgZm9udC1zaXplOiB2YXIoLS1mb250LXNpemUtbGFiZWwtbGFyZ2UpO1xuICBsZXR0ZXItc3BhY2luZzogdmFyKC0tZm9udC1sZXR0ZXItc3BhY2luZy13aWRlKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWZvbnQtbGluZS1oZWlnaHQtbGFiZWwtbGFyZ2UpO1xufVxuQG1peGluIHN1cmYtZm9udC1sYWJlbC1tZWRpdW0oKSB7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWNvbmRlbnNlZCk7XG4gIGZvbnQtc2l6ZTogdmFyKC0tZm9udC1zaXplLWxhYmVsLW1lZGl1bSk7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1ib2xkKTtcbiAgbGV0dGVyLXNwYWNpbmc6IHZhcigtLWZvbnQtbGV0dGVyLXNwYWNpbmctd2lkZSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWxhYmVsLW1lZGl1bSk7XG59XG5AbWl4aW4gc3VyZi1mb250LWxhYmVsLXNtYWxsKCkge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1jb25kZW5zZWQpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1sYWJlbC1zbWFsbCk7XG4gIGZvbnQtd2VpZ2h0OiB2YXIoLS1mb250LXdlaWdodC1ib2xkKTtcbiAgbGV0dGVyLXNwYWNpbmc6IHZhcigtLWZvbnQtbGV0dGVyLXNwYWNpbmctd2lkZSk7XG4gIGxpbmUtaGVpZ2h0OiB2YXIoLS1mb250LWxpbmUtaGVpZ2h0LWxhYmVsLXNtYWxsKTtcbn1cbkBtaXhpbiBzdXJmLWZvbnQtbGFiZWwtcGVld2VlKCkge1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1jb25kZW5zZWQpO1xuICBmb250LXNpemU6IHZhcigtLWZvbnQtc2l6ZS1sYWJlbC1wZWV3ZWUpO1xuICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtYm9sZCk7XG4gIGxldHRlci1zcGFjaW5nOiB2YXIoLS1mb250LWxldHRlci1zcGFjaW5nLXdpZGUpO1xuICBsaW5lLWhlaWdodDogdmFyKC0tZm9udC1saW5lLWhlaWdodC1sYWJlbC1wZWV3ZWUpO1xufVxuIiwiLy9cbi8vIEBmaWxlXG4vLyBMaXN0IG1peGlucy5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy9cbi8vIEJhc2Vcbi8vXG5AbWl4aW4gbGlzdC0tcmVzZXQge1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW4tbGVmdDogMDtcbiAgcGFkZGluZy1sZWZ0OiAwO1xufVxuXG4vL1xuLy8gQnVsbGV0c1xuLy9cbkBtaXhpbiBsaXN0LS1idWxsZXRzKCRpdGVtLXNlbGVjdG9yOiBsaSkge1xuICBAaW5jbHVkZSBsaXN0LS1yZXNldDtcblxuICA+ICN7JGl0ZW0tc2VsZWN0b3J9OmJlZm9yZSB7XG4gICAgY29udGVudDogXCJcXDIwMjJcIjtcbiAgICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtYm9sZCk7XG4gIH1cblxuICB1bCB7XG4gICAgbWFyZ2luLXRvcDogNnB4O1xuICAgIHBhZGRpbmctbGVmdDogdmFyKC0tc3BhY2UtaW5kZW50KTtcbiAgfVxufVxuXG4vL1xuLy8gTnVtYmVyZWRcbi8vXG5AbWl4aW4gbGlzdC0tbnVtYmVyZWQoJGl0ZW0tc2VsZWN0b3I6IGxpKSB7XG4gIEBpbmNsdWRlIGxpc3QtLXJlc2V0O1xuICBjb3VudGVyLXJlc2V0OiBudW1iZXI7XG5cbiAgPiAjeyRpdGVtLXNlbGVjdG9yfTpiZWZvcmUge1xuICAgIGNvbnRlbnQ6IGNvdW50ZXJzKG51bWJlciwgXCIuXCIpIFwiLlwiO1xuICAgIGNvdW50ZXItaW5jcmVtZW50OiBudW1iZXI7XG4gIH1cblxuICAvLyBTZWNvbmQgTGV2ZWxcbiAgb2wge1xuICAgIG1hcmdpbi10b3A6IDZweDtcbiAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG5cbiAgICA+ICN7JGl0ZW0tc2VsZWN0b3J9IHtcbiAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgIHRleHQtaW5kZW50OiAtMzBweDtcblxuICAgICAgJjpiZWZvcmUge1xuICAgICAgICBkaXNwbGF5OiBpbmxpbmU7XG4gICAgICAgIG1hcmdpbi1yaWdodDogLjVlbTtcbiAgICAgICAgcG9zaXRpb246IHN0YXRpYztcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy9cbi8vIE5vIGJ1bGxldHNcbi8vXG5AbWl4aW4gbGlzdC0tbm8tYnVsbGV0cygkaXRlbS1zZWxlY3RvcjogbGkpIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuXG4gID4gI3skaXRlbS1zZWxlY3Rvcn0ge1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIH1cbn1cblxuLy9cbi8vIElubGluZVxuLy9cbkBtaXhpbiBsaXN0LS1pbmxpbmUoJGl0ZW0tc2VsZWN0b3I6IGxpKSB7XG4gID4gI3skaXRlbS1zZWxlY3Rvcn0ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgfVxufVxuXG4vL1xuLy8gUnVsZWQgTGlzdFxuLy9cbkBtaXhpbiBsaXN0LS1ydWxlZCAoXG4gICRzcGFjaW5nOiAyZW0sXG4gICRzdHlsZTogXCJpbm5lclwiLFxuICAkYm9yZGVyLWNvbG9yOiB2YXIoLS1ib3JkZXItY29sb3IpLFxuICAkYm9yZGVyLXNpemU6IDFweCxcbiAgJGJvcmRlci1zdHlsZTogc29saWQsXG4gICRpdGVtLXNlbGVjdG9yOiBsaVxuKSB7XG4gIEBpbmNsdWRlIGxpc3QtLW5vLWJ1bGxldHM7XG5cbiAgQGlmICgkc3R5bGUgPT0gaW5uZXIgb3IgJHN0eWxlID09IGFib3ZlKSB7XG4gICAgPiAjeyRpdGVtLXNlbGVjdG9yfSB7XG4gICAgICBib3JkZXItdG9wOiAkYm9yZGVyLXNpemUgJGJvcmRlci1zdHlsZSAkYm9yZGVyLWNvbG9yO1xuICAgICAgbWFyZ2luLXRvcDogJHNwYWNpbmc7XG4gICAgICBwYWRkaW5nLXRvcDogJHNwYWNpbmc7XG4gICAgfVxuXG4gICAgQGlmICgkc3R5bGUgPT0gaW5uZXIpIHtcbiAgICAgID4gI3skaXRlbS1zZWxlY3Rvcn06Zmlyc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItdG9wOiAwO1xuICAgICAgICBtYXJnaW4tdG9wOiAwO1xuICAgICAgICBwYWRkaW5nLXRvcDogMDtcbiAgICAgIH1cbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgPiAjeyRpdGVtLXNlbGVjdG9yfTpmaXJzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi10b3A6IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQGlmICgkc3R5bGUgPT0gb3V0ZXIgb3IgJHN0eWxlID09IGJlbG93KSB7XG4gICAgPiAjeyRpdGVtLXNlbGVjdG9yfSB7XG4gICAgICBib3JkZXItYm90dG9tOiAkYm9yZGVyLXNpemUgJGJvcmRlci1zdHlsZSAkYm9yZGVyLWNvbG9yO1xuICAgICAgbWFyZ2luLWJvdHRvbTogJHNwYWNpbmc7XG4gICAgICBwYWRkaW5nLWJvdHRvbTogJHNwYWNpbmc7XG4gICAgfVxuXG4gICAgQGlmICgkc3R5bGUgPT0gb3V0ZXIpIHtcbiAgICAgID4gI3skaXRlbS1zZWxlY3Rvcn06Zmlyc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItdG9wOiAkYm9yZGVyLXNpemUgJGJvcmRlci1zdHlsZSAkYm9yZGVyLWNvbG9yO1xuICAgICAgICBwYWRkaW5nLXRvcDogJHNwYWNpbmc7XG4gICAgICB9XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgID4gI3skaXRlbS1zZWxlY3Rvcn06bGFzdC1jaGlsZCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0= */
