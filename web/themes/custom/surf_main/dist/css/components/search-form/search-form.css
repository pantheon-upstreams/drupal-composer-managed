/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Functions - Breakpoints
 * Breakpoint viewport sizes and media queries. Breakpoints are defined as a map of (name: minimum width), order from
 * small to large: (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px). The map defined in the `$grid-breakpoints`
 * global variable is used as the `$breakpoints` argument by default.
 *
 * - 01 - Breakpoint Next
 * - 02 - Breakpoint Minimum
 * - 03 - Breakpoint Maximum
 * - 04 - Breakpoint Infix
 */
/*------------------------------------*\
  01 - Breakpoint Next
  Name of the next breakpoint, or null for the last breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  02 - Breakpoint Minimum
  Minimum breakpoint width. Null for the smallest (first) breakpoint.
\*------------------------------------*/
/*------------------------------------*\
  03 - Breakpoint Maximum
  The maximum value is reduced by 0.02px to work around the limitations of `min-` and `max-` prefixes and viewports
  with fractional widths. See https://www.w3.org/TR/mediaqueries-4/#mq-min-max. Uses 0.02px rather than 0.01px to work
  around a current rounding bug in Safari. See https://bugs.webkit.org/show_bug.cgi?id=178261
\*------------------------------------*/
/*------------------------------------*\
  04 - Breakpoint Infix
  Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front. Useful for making
  responsive utilities.
\*------------------------------------*/
/**
 * Settings - Breakpoints
 * - 01 - Mapping
 */
/*------------------------------------*\
  01 - Mapping
\*------------------------------------*/
/**
 * Mixins - Breakpoints
 * - 01 - Breakpoints
 */
/*------------------------------------*\
  01 - Breakpoints
\*------------------------------------*/
@media (max-width: 1023.98px) {
  .header-search-form {
    margin: 24px 15px;
    width: 100%;
  }
  .header-search-form #search-api-form {
    display: -webkit-box;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-flow: row nowrap;
    -webkit-box-align: center;
            align-items: center;
    border: 1px solid #fff;
    gap: 6px;
    height: 55px;
    padding: 12px;
    width: 100%;
  }
  .header-search-form #search-api-form:focus, .header-search-form #search-api-form[focus-within] {
    border: 2px solid #fff;
  }
  .header-search-form #search-api-form:focus, .header-search-form #search-api-form:focus-within {
    border: 2px solid #fff;
  }
  .header-search-form #search-api-form .form-actions {
    margin: 0;
  }
  .header-search-form #search-api-form .form-actions .form-submit {
    --size: 28px;
    background-color: transparent;
    background-image: url(../../../../images/icons/ui-icon-search--white.svg);
    background-repeat: no-repeat;
    background-position: center;
    border: none;
    height: var(--size);
    padding: 0;
    position: relative;
    text-indent: var(--size);
    width: var(--size);
  }
  .header-search-form #search-api-form .form-item {
    margin: 0;
    width: 100%;
  }
  .header-search-form #search-api-form .form-item input.form-search {
    background: transparent;
    border: 0;
    margin: 0;
    padding: 0;
    width: 100%;
    color: #fff;
    font-family: var(--font-family-sans);
    font-weight: var(--font-weight-regular);
    font-size: 18px;
    line-height: 144%;
  }
  .header-search-form #search-api-form .form-item input.form-search:focus {
    -webkit-box-shadow: none;
            box-shadow: none;
    outline: auto;
    outline-offset: 6px;
  }
  .header-search-form #search-api-form .form-item input.form-search::-webkit-input-placeholder {
    color: #fff;
    font-style: italic;
  }
  .header-search-form #search-api-form .form-item input.form-search::-moz-placeholder {
    color: #fff;
    font-style: italic;
    opacity: 1;
  }
  .header-search-form #search-api-form .form-item input.form-search:-ms-input-placeholder {
    color: #fff;
    font-style: italic;
    opacity: 1;
  }
  .header-search-form #search-api-form .form-item input.form-search::-ms-input-placeholder {
    color: #fff;
    font-style: italic;
    opacity: 1;
  }
  .header-search-form #search-api-form .form-item input.form-search::placeholder {
    color: #fff;
    font-style: italic;
    opacity: 1;
  }
  .header-search-form #search-api-form .form-item input.form-search::-webkit-search-cancel-button {
    display: none;
  }
}
@media (min-width: 1024px) {
  .header-search-form {
    background: var(--color-surf--forest);
    height: 70px;
    width: auto;
    position: relative;
  }
  .header-search-form form {
    -webkit-box-align: center;
            align-items: center;
    display: -webkit-inline-box;
    display: inline-flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
            flex-flow: row nowrap;
    height: 100%;
    overflow: hidden;
    margin: 0;
    padding: 0;
    position: relative;
    width: 120px;
    -webkit-transition: width 1s cubic-bezier(0.1, 0.1, 0.1, 1);
    -o-transition: width 1s cubic-bezier(0.1, 0.1, 0.1, 1);
    transition: width 1s cubic-bezier(0.1, 0.1, 0.1, 1);
  }
  .header-search-form:hover .form-actions:before {
    text-decoration: underline;
  }
  .header-search-form #search-api-form .form-item input {
    color: #fff;
    font-family: var(--font-family-sans);
    font-weight: var(--font-weight-regular);
    font-size: 18px;
    line-height: 144%;
  }
  .header-search-form #search-api-form .form-item label {
    color: #fff;
  }
  .header-search-form #search-api-form .form-item input.form-search {
    background: transparent;
    border: 0;
    border-bottom: 2px solid #fff;
    padding: 0.25em 1.25em 0.25em 0.5em;
    -webkit-box-flex: 1;
            flex-grow: 1;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    margin: 0;
    opacity: 0;
    outline: 0;
    -webkit-transition: none;
    -o-transition: none;
    transition: none;
    z-index: 2;
    width: 100%;
    cursor: pointer;
    background-color: transparent;
    background-image: url(../../../../images/icons/ui-icon-search--white.svg);
    background-repeat: no-repeat;
    background-position: right center;
    background-size: 20px;
  }
  .header-search-form #search-api-form .form-item input.form-search::-webkit-input-placeholder {
    color: #fff;
    font-style: italic;
  }
  .header-search-form #search-api-form .form-item input.form-search::-moz-placeholder {
    color: #fff;
    font-style: italic;
    opacity: 1;
  }
  .header-search-form #search-api-form .form-item input.form-search:-ms-input-placeholder {
    color: #fff;
    font-style: italic;
    opacity: 1;
  }
  .header-search-form #search-api-form .form-item input.form-search::-ms-input-placeholder {
    color: #fff;
    font-style: italic;
    opacity: 1;
  }
  .header-search-form #search-api-form .form-item input.form-search::placeholder {
    color: #fff;
    font-style: italic;
    opacity: 1;
  }
  .header-search-form #search-api-form .form-item input.form-search::-webkit-search-cancel-button {
    display: none;
  }
  .header-search-form #search-api-form .form-actions {
    -webkit-box-align: center;
            align-items: center;
    color: #fff;
    display: -webkit-inline-box;
    display: inline-flex;
    font-family: var(--font-family-condensed);
    font-weight: 700;
    font-size: 22px;
    height: 100%;
    letter-spacing: 1.8px;
    line-height: 140%;
    margin: 0;
    text-transform: uppercase;
  }
  .header-search-form #search-api-form .form-actions::before {
    -webkit-box-align: center;
            align-items: center;
    content: "Search";
    display: -webkit-inline-box;
    display: inline-flex;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
  }
  .header-search-form #search-api-form .form-actions input.form-submit {
    --size: 31px;
    background-color: transparent;
    background-image: url(../../../../images/icons/ui-icon-search--white.svg);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 20px;
    border: none;
    color: #fff;
    height: var(--size);
    padding: 0;
    position: relative;
    text-indent: var(--size);
    width: var(--size);
  }
  .header-search-form #search-api-form[focus-within] {
    width: 300px;
  }
  .header-search-form #search-api-form:focus-within {
    width: 300px;
  }
  .header-search-form #search-api-form[focus-within] input.form-search {
    -webkit-box-shadow: none;
            box-shadow: none;
    opacity: 1;
    z-index: auto;
    z-index: initial;
    cursor: auto;
    cursor: initial;
    height: 31px;
    margin-top: 16px;
    -webkit-transition: none;
    -o-transition: none;
    transition: none;
    width: 100%;
  }
  .header-search-form #search-api-form[focus-within] input.form-search {
    -webkit-box-shadow: none;
            box-shadow: none;
    opacity: 1;
    z-index: auto;
    z-index: initial;
    cursor: auto;
    cursor: initial;
    height: 31px;
    margin-top: 16px;
    -webkit-transition: none;
    -o-transition: none;
    transition: none;
    width: 100%;
  }
  .header-search-form #search-api-form:focus-within input.form-search {
    -webkit-box-shadow: none;
            box-shadow: none;
    opacity: 1;
    z-index: auto;
    z-index: initial;
    cursor: auto;
    cursor: initial;
    height: 31px;
    margin-top: 16px;
    -webkit-transition: none;
    -o-transition: none;
    transition: none;
    width: 100%;
  }
  .header-search-form #search-api-form[focus-within] .form-actions:before {
    display: none;
  }
  .header-search-form #search-api-form:focus-within .form-actions:before {
    display: none;
  }
  .header-search-form #search-api-form[focus-within] input.form-submit {
    background: none;
    border: 0;
    position: absolute;
    right: 0;
  }
  .header-search-form #search-api-form:focus-within input.form-submit {
    background: none;
    border: 0;
    position: absolute;
    right: 0;
  }
  .header-search-form #search-api-form[focus-within] input.form-submit:hover {
    cursor: pointer;
  }
  .header-search-form #search-api-form:focus-within input.form-submit:hover {
    cursor: pointer;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnRpYWxzL2Z1bmN0aW9ucy9fYnAuc2NzcyIsInBhcnRpYWxzL3NldHRpbmdzL19icC5zY3NzIiwicGFydGlhbHMvbWl4aW5zL19icC5zY3NzIiwiY29tcG9uZW50cy9zZWFyY2gtZm9ybS9zZWFyY2gtZm9ybS5zY3NzIiwiY29tcG9uZW50cy9zZWFyY2gtZm9ybS9zZWFyY2gtZm9ybS5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7RUFBQTtBQWFBOzs7dUNBQUE7QUFnQkE7Ozt1Q0FBQTtBQWFBOzs7Ozt1Q0FBQTtBQWVBOzs7O3VDQUFBO0FBekRBOzs7Ozs7Ozs7O0VBQUE7QUFhQTs7O3VDQUFBO0FBZ0JBOzs7dUNBQUE7QUFhQTs7Ozs7dUNBQUE7QUFlQTs7Ozt1Q0FBQTtBQ3pEQTs7O0VBQUE7QUFLQTs7dUNBQUE7QUNMQTs7O0VBQUE7QUFNQTs7dUNBQUE7QUFvQkk7RUNuQkY7SUFDRSxpQkFBQTtJQUNBLFdBQUE7RUNxRUY7RURuRUU7SUFDRSxvQkFBQTtJQUFBLGFBQUE7SUFDQSw4QkFBQTtJQUFBLDZCQUFBO1lBQUEscUJBQUE7SUFDQSx5QkFBQTtZQUFBLG1CQUFBO0lBQ0Esc0JBQUE7SUFDQSxRQUFBO0lBRUEsWUFBQTtJQUNBLGFBQUE7SUFDQSxXQUFBO0VDb0VKO0VEakVJO0lBRUUsc0JBQUE7RUNrRU47RURwRUk7SUFFRSxzQkFBQTtFQ2tFTjtFRDlESTtJQUNFLFNBQUE7RUNnRU47RUQ5RE07SUFDRSxZQUFBO0lBQ0EsNkJBQUE7SUFDQSx5RUFBQTtJQUNBLDRCQUFBO0lBQ0EsMkJBQUE7SUFDQSxZQUFBO0lBQ0EsbUJBQUE7SUFDQSxVQUFBO0lBQ0Esa0JBQUE7SUFDQSx3QkFBQTtJQUNBLGtCQUFBO0VDZ0VSO0VEM0RJO0lBQ0UsU0FBQTtJQUNBLFdBQUE7RUM2RE47RUQzRE07SUFDRSx1QkFBQTtJQUNBLFNBQUE7SUFDQSxTQUFBO0lBQ0EsVUFBQTtJQUNBLFdBQUE7SUFFQSxXQUFBO0lBQ0Esb0NB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QSxVQUFBO0lBQ0EsYUFBQTtJQUFBLGdCQUFBO0lBQ0EsWUFBQTtJQUFBLGVBQUE7SUFDQSxZQUFBO0lBQ0EsZ0JBQUE7SUFDQSx3QkFBQTtJQUFBLG1CQUFBO0lBQUEsZ0JBQUE7SUFDQSxXQUFBO0VDc0JKO0VEOUJFO0lBQ0Usd0JBQUE7WUFBQSxnQkFBQTtJQUNBLFVBQUE7SUFDQSxhQUFBO0lBQUEsZ0JBQUE7SUFDQSxZQUFBO0lBQUEsZUFBQTtJQUNBLFlBQUE7SUFDQSxnQkFBQTtJQUNBLHdCQUFBO0lBQUEsbUJBQUE7SUFBQSxnQkFBQTtJQUNBLFdBQUE7RUNzQko7RURsQkU7SUFDRSxhQUFBO0VDb0JKO0VEckJFO0lBQ0UsYUFBQTtFQ29CSjtFRGhCRTtJQUNFLGdCQUFBO0lBQ0EsU0FBQTtJQUNBLGtCQUFBO0lBQ0EsUUFBQTtFQ2tCSjtFRHRCRTtJQUNFLGdCQUFBO0lBQ0EsU0FBQTtJQUNBLGtCQUFBO0lBQ0EsUUFBQTtFQ2tCSjtFRGZJO0lBQ0UsZUFBQTtFQ2lCTjtFRGxCSTtJQUNFLGVBQUE7RUNpQk47QUFDRiIsImZpbGUiOiJjb21wb25lbnRzL3NlYXJjaC1mb3JtL3NlYXJjaC1mb3JtLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRnVuY3Rpb25zIC0gQnJlYWtwb2ludHNcbiAqIEJyZWFrcG9pbnQgdmlld3BvcnQgc2l6ZXMgYW5kIG1lZGlhIHF1ZXJpZXMuIEJyZWFrcG9pbnRzIGFyZSBkZWZpbmVkIGFzIGEgbWFwIG9mIChuYW1lOiBtaW5pbXVtIHdpZHRoKSwgb3JkZXIgZnJvbVxuICogc21hbGwgdG8gbGFyZ2U6ICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkuIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRncmlkLWJyZWFrcG9pbnRzYFxuICogZ2xvYmFsIHZhcmlhYmxlIGlzIHVzZWQgYXMgdGhlIGAkYnJlYWtwb2ludHNgIGFyZ3VtZW50IGJ5IGRlZmF1bHQuXG4gKlxuICogLSAwMSAtIEJyZWFrcG9pbnQgTmV4dFxuICogLSAwMiAtIEJyZWFrcG9pbnQgTWluaW11bVxuICogLSAwMyAtIEJyZWFrcG9pbnQgTWF4aW11bVxuICogLSAwNCAtIEJyZWFrcG9pbnQgSW5maXhcbiAqL1xuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAxIC0gQnJlYWtwb2ludCBOZXh0XG4gIE5hbWUgb2YgdGhlIG5leHQgYnJlYWtwb2ludCwgb3IgbnVsbCBmb3IgdGhlIGxhc3QgYnJlYWtwb2ludC5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbkBmdW5jdGlvbiBicmVha3BvaW50LW5leHQoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMsICRicmVha3BvaW50LW5hbWVzOiBtYXAta2V5cygkYnJlYWtwb2ludHMpKSB7XG4gICRuOiBpbmRleCgkYnJlYWtwb2ludC1uYW1lcywgJG5hbWUpO1xuICBAaWYgbm90ICRuIHtcbiAgICBAZXJyb3IgXCJicmVha3BvaW50IGAjeyRuYW1lfWAgbm90IGZvdW5kIGluIGAjeyRicmVha3BvaW50c31gXCI7XG4gIH1cbiAgQHJldHVybiBpZigkbiA8IGxlbmd0aCgkYnJlYWtwb2ludC1uYW1lcyksIG50aCgkYnJlYWtwb2ludC1uYW1lcywgJG4gKyAxKSwgbnVsbCk7XG59XG5cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAyIC0gQnJlYWtwb2ludCBNaW5pbXVtXG4gIE1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIHNtYWxsZXN0IChmaXJzdCkgYnJlYWtwb2ludC5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbkBmdW5jdGlvbiBicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICBAcmV0dXJuIGlmKCRtaW4gIT0gMCwgJG1pbiwgbnVsbCk7XG59XG5cblxuXG5cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAzIC0gQnJlYWtwb2ludCBNYXhpbXVtXG4gIFRoZSBtYXhpbXVtIHZhbHVlIGlzIHJlZHVjZWQgYnkgMC4wMnB4IHRvIHdvcmsgYXJvdW5kIHRoZSBsaW1pdGF0aW9ucyBvZiBgbWluLWAgYW5kIGBtYXgtYCBwcmVmaXhlcyBhbmQgdmlld3BvcnRzXG4gIHdpdGggZnJhY3Rpb25hbCB3aWR0aHMuIFNlZSBodHRwczovL3d3dy53My5vcmcvVFIvbWVkaWFxdWVyaWVzLTQvI21xLW1pbi1tYXguIFVzZXMgMC4wMnB4IHJhdGhlciB0aGFuIDAuMDFweCB0byB3b3JrXG4gIGFyb3VuZCBhIGN1cnJlbnQgcm91bmRpbmcgYnVnIGluIFNhZmFyaS4gU2VlIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xNzgyNjFcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbkBmdW5jdGlvbiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWF4OiBtYXAtZ2V0KCRicmVha3BvaW50cywgJG5hbWUpO1xuICBAcmV0dXJuIGlmKCRtYXggYW5kICRtYXggPiAwLCAkbWF4IC0gLjAyLCBudWxsKTtcbn1cblxuXG5cblxuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDQgLSBCcmVha3BvaW50IEluZml4XG4gIFJldHVybnMgYSBibGFuayBzdHJpbmcgaWYgc21hbGxlc3QgYnJlYWtwb2ludCwgb3RoZXJ3aXNlIHJldHVybnMgdGhlIG5hbWUgd2l0aCBhIGRhc2ggaW4gZnJvbnQuIFVzZWZ1bCBmb3IgbWFraW5nXG4gIHJlc3BvbnNpdmUgdXRpbGl0aWVzLlxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cblxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtaW5maXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgQHJldHVybiBpZihicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKSA9PSBudWxsLCBcIlwiLCBcIi0jeyRuYW1lfVwiKTtcbn1cbiIsIi8qKlxuICogU2V0dGluZ3MgLSBCcmVha3BvaW50c1xuICogLSAwMSAtIE1hcHBpbmdcbiAqL1xuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMSAtIE1hcHBpbmdcblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5cbiRncmlkLWJyZWFrcG9pbnRzOiAoXG4gIHhzbWFsbDogMHB4LFxuICBzbWFsbDogNTc2cHgsXG4gIG1lZGl1bTogNzY4cHgsXG4gIGxhcmdlOiAxMDI0cHgsXG4gIHhsYXJnZTogMTIwMHB4LFxuICB4eGxhcmdlOiAxNjIwcHgsXG4pO1xuIiwiLyoqXG4gKiBNaXhpbnMgLSBCcmVha3BvaW50c1xuICogLSAwMSAtIEJyZWFrcG9pbnRzXG4gKi9cblxuXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMSAtIEJyZWFrcG9pbnRzXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuXG4vLyBNZWRpYSBvZiBhdCBsZWFzdCB0aGUgbWluaW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIHNtYWxsZXN0IGJyZWFrcG9pbnQuXG5AbWl4aW4gYnAtbWluKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAaWYgJG1pbiB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gTWVkaWEgb2YgYXQgbW9zdCB0aGUgbWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIGxhcmdlc3QgYnJlYWtwb2ludC5cbkBtaXhpbiBicC1tYXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1heDogYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50cyk7XG4gIEBpZiAkbWF4IHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBNZWRpYSB0aGF0IHNwYW5zIG11bHRpcGxlIGJyZWFrcG9pbnQgd2lkdGhzLlxuQG1peGluIGJwLWJldHdlZW4oJGxvd2VyLCAkdXBwZXIsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJGxvd2VyLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkdXBwZXIsICRicmVha3BvaW50cyk7XG5cbiAgQGlmICRtaW4gIT0gbnVsbCBhbmQgJG1heCAhPSBudWxsIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikgYW5kIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWF4ID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGxvd2VyLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWluID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkdXBwZXIsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5cbi8vIE1lZGlhIGJldHdlZW4gdGhlIGJyZWFrcG9pbnQncyBtaW5pbXVtIGFuZCBtYXhpbXVtIHdpZHRocy5cbi8vIE5vIG1pbmltdW0gZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LCBhbmQgbm8gbWF4aW11bSBmb3IgdGhlIGxhcmdlc3Qgb25lLlxuQG1peGluIGJwLW9ubHkoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cyk7XG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuXG4gIEBpZiAkbWluICE9IG51bGwgYW5kICRtYXggIT0gbnVsbCB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIGFuZCAobWF4LXdpZHRoOiAkbWF4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1heCA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkbWluID09IG51bGwge1xuICAgIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtZG93bigkbmFtZSwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cbiIsIi8vXG4vLyBHbG9iYWwgc2VhcmNoIGJhciBzdHlsZXNcbi8vXG5AaW1wb3J0IFwiLi4vLi4vcGFydGlhbHMvX3BhcnRpYWxzXCI7XG5cbi8vIE1vYmlsZSBzdHlsZXMgZnJvbSBzY3JlZW5zIDwgMTAyNHB4XG5AaW5jbHVkZSBicC1tYXgobGFyZ2UpIHtcbiAgLmhlYWRlci1zZWFyY2gtZm9ybSB7XG4gICAgbWFyZ2luOiAyNHB4IDE1cHg7XG4gICAgd2lkdGg6IDEwMCU7XG5cbiAgICAjc2VhcmNoLWFwaS1mb3JtIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgICAgIGdhcDogNnB4O1xuXG4gICAgICBoZWlnaHQ6IDU1cHg7XG4gICAgICBwYWRkaW5nOiAxMnB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgIC8vIEluY3JlYXNlIGJvcmRlciB3aGVuIGZvY3VzaW5nXG4gICAgICAmOmZvY3VzLFxuICAgICAgJjpmb2N1cy13aXRoaW4ge1xuICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjZmZmO1xuICAgICAgfVxuXG4gICAgICAvLyBTZWFyY2ggYnV0dG9uXG4gICAgICAuZm9ybS1hY3Rpb25zIHtcbiAgICAgICAgbWFyZ2luOiAwO1xuXG4gICAgICAgIC5mb3JtLXN1Ym1pdCB7XG4gICAgICAgICAgLS1zaXplOiAyOHB4O1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi8uLi8uLi9pbWFnZXMvaWNvbnMvdWktaWNvbi1zZWFyY2gtLXdoaXRlLnN2Zyk7XG4gICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgICAgYm9yZGVyOiBub25lO1xuICAgICAgICAgIGhlaWdodDogdmFyKC0tc2l6ZSk7XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgdGV4dC1pbmRlbnQ6IHZhcigtLXNpemUpO1xuICAgICAgICAgIHdpZHRoOiB2YXIoLS1zaXplKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBTZWFyY2ggaW5wdXQgZmllbGRcbiAgICAgIC5mb3JtLWl0ZW0ge1xuICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgICAgIGlucHV0LmZvcm0tc2VhcmNoIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG5cbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICBmb250LWZhbWlseTogdmFyKC0tZm9udC1mYW1pbHktc2Fucyk7XG4gICAgICAgICAgZm9udC13ZWlnaHQ6IHZhcigtLWZvbnQtd2VpZ2h0LXJlZ3VsYXIpO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICAgICAgICBsaW5lLWhlaWdodDogMTQ0JTtcblxuICAgICAgICAgICY6Zm9jdXMge1xuICAgICAgICAgICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICAgICAgICAgIG91dGxpbmU6IGF1dG87XG4gICAgICAgICAgICBvdXRsaW5lLW9mZnNldDogNnB4O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIE9ubHkgc2hvdyB3aGVuIGZvY3VzZWRcbiAgICAgICAgICAmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIEZpcmVmb3ggc3BlY2lmaWNcbiAgICAgICAgICAmOjpwbGFjZWhvbGRlciB7XG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICAgIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gSGlkZSBzZWFyY2ggY2xlYXIgYnV0dG9uXG4gICAgICAgICAgJjo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiB7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBEZXNrdG9wIHN0eWxlcyBmcm9tIHNjcmVlbnMgPj0gMTAyNHB4XG5AaW5jbHVkZSBicC1taW4obGFyZ2UpIHtcbiAgLmhlYWRlci1zZWFyY2gtZm9ybSB7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3Itc3VyZi0tZm9yZXN0KTtcbiAgICBoZWlnaHQ6IDcwcHg7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgZm9ybSB7XG4gICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgbWFyZ2luOiAwO1xuICAgICAgcGFkZGluZzogMDtcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgIHdpZHRoOiAxMjBweDtcbiAgICAgIHRyYW5zaXRpb246IHdpZHRoIDFzIGN1YmljLWJlemllcigwLjEsIDAuMSwgMC4xLCAxKTtcbiAgICB9XG5cbiAgICAvLyBPbiBob3ZlciwgYWRkIHVuZGVybGluZSBvbiBidXR0b24gYmVmb3JlLCB0aGlzIGRpc3BsYXlzIGFzIGlmIGl0IGlzIGFib3ZlXG4gICAgLy8gdGhlIGlucHV0IGJ1dCBpdCBhY3R1YWxseSBpc24ndFxuICAgICY6aG92ZXIgLmZvcm0tYWN0aW9uczpiZWZvcmUge1xuICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gICAgfVxuXG4gICAgI3NlYXJjaC1hcGktZm9ybSB7XG4gICAgICAuZm9ybS1pdGVtIHtcbiAgICAgICAgaW5wdXQge1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1zYW5zKTtcbiAgICAgICAgICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNDQlO1xuICAgICAgICB9XG5cbiAgICAgICAgbGFiZWwge1xuICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICB9XG5cbiAgICAgICAgaW5wdXQuZm9ybS1zZWFyY2gge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgICAgIGJvcmRlcjogMDtcbiAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2ZmZjtcbiAgICAgICAgICBwYWRkaW5nOiAwLjI1ZW0gMS4yNWVtIDAuMjVlbSAwLjVlbTtcbiAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgIHRvcDogMDtcbiAgICAgICAgICBib3R0b206IDA7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICBvdXRsaW5lOiAwO1xuICAgICAgICAgIHRyYW5zaXRpb246IG5vbmU7XG4gICAgICAgICAgei1pbmRleDogMjtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAvLyBBc3NpZ24gcG9pbnRlciBhcyB0aGlzIFwiYXBwZWFyc1wiIGFzIHRoZSBzZWFyY2ggYnV0dG9uXG4gICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgICAgICAgLy8gQXR0YWNoIHNlYXJjaCBpY29uIGF0IGVuZCBvZiBpbnB1dFxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi8uLi8uLi9pbWFnZXMvaWNvbnMvdWktaWNvbi1zZWFyY2gtLXdoaXRlLnN2Zyk7XG4gICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCBjZW50ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiAyMHB4O1xuXG4gICAgICAgICAgLy8gT25seSBzaG93IHdoZW4gZm9jdXNlZFxuICAgICAgICAgICY6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xuICAgICAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgICAgICBmb250LXN0eWxlOiBpdGFsaWM7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gRmlyZWZveCBzcGVjaWZpY1xuICAgICAgICAgICY6OnBsYWNlaG9sZGVyIHtcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBIaWRlIHNlYXJjaCBjbGVhciBidXR0b25cbiAgICAgICAgICAmOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFN1Ym1pdCBidXR0b25cbiAgICAgIC5mb3JtLWFjdGlvbnMge1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1jb25kZW5zZWQpO1xuICAgICAgICBmb250LXdlaWdodDogNzAwO1xuICAgICAgICBmb250LXNpemU6IDIycHg7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgbGV0dGVyLXNwYWNpbmc6IDEuOHB4O1xuICAgICAgICBsaW5lLWhlaWdodDogMTQwJTtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXG4gICAgICAgICY6OmJlZm9yZSB7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgICBjb250ZW50OiBcIlNlYXJjaFwiO1xuICAgICAgICAgIGRpc3BsYXk6IC13ZWJraXQtaW5saW5lLWJveDtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICAgICAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgICAgIH1cblxuICAgICAgICBpbnB1dC5mb3JtLXN1Ym1pdCB7XG4gICAgICAgICAgLS1zaXplOiAzMXB4O1xuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi8uLi8uLi9pbWFnZXMvaWNvbnMvdWktaWNvbi1zZWFyY2gtLXdoaXRlLnN2Zyk7XG4gICAgICAgICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgICAgICAgYmFja2dyb3VuZC1zaXplOiAyMHB4O1xuICAgICAgICAgIGJvcmRlcjogbm9uZTtcbiAgICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgICBoZWlnaHQ6IHZhcigtLXNpemUpO1xuICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgIHRleHQtaW5kZW50OiB2YXIoLS1zaXplKTtcbiAgICAgICAgICB3aWR0aDogdmFyKC0tc2l6ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBXaGVuIHVzZXIgaW50ZXJhY3RzIHdpdGggU2VhcmNoIGZpZWxkLCBhbmltYXRlIFwib3Blbm5pbmdcIiBlbGVtZW50c1xuICAuaGVhZGVyLXNlYXJjaC1mb3JtICNzZWFyY2gtYXBpLWZvcm06Zm9jdXMtd2l0aGluIHtcbiAgICB3aWR0aDogMzAwcHg7XG5cbiAgICBpbnB1dC5mb3JtLXNlYXJjaCB7XG4gICAgICBib3gtc2hhZG93OiBub25lO1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIHotaW5kZXg6IGluaXRpYWw7XG4gICAgICBjdXJzb3I6IGluaXRpYWw7XG4gICAgICBoZWlnaHQ6IDMxcHg7XG4gICAgICBtYXJnaW4tdG9wOiAxNnB4O1xuICAgICAgdHJhbnNpdGlvbjogbm9uZTtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cblxuICAgIC8vIEhpZGUgc2VhcmNoIHBzZXVkbyB0ZXh0XG4gICAgLmZvcm0tYWN0aW9uczpiZWZvcmUge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG5cbiAgICAvLyBBbGlnbiBidXR0b24gdG8gYXBwZWFyIHdpdGggaW5wdXQgb3ZlcmxheVxuICAgIGlucHV0LmZvcm0tc3VibWl0IHtcbiAgICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgICBib3JkZXI6IDA7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMDtcblxuICAgICAgLy8gRGlzcGxheSBob3ZlciBzdGF0ZSB0aHJvdWdoIG92ZXJsYXlcbiAgICAgICY6aG92ZXIge1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCIvKipcbiAqIEZ1bmN0aW9ucyAtIEJyZWFrcG9pbnRzXG4gKiBCcmVha3BvaW50IHZpZXdwb3J0IHNpemVzIGFuZCBtZWRpYSBxdWVyaWVzLiBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksIG9yZGVyIGZyb21cbiAqIHNtYWxsIHRvIGxhcmdlOiAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpLiBUaGUgbWFwIGRlZmluZWQgaW4gdGhlIGAkZ3JpZC1icmVha3BvaW50c2BcbiAqIGdsb2JhbCB2YXJpYWJsZSBpcyB1c2VkIGFzIHRoZSBgJGJyZWFrcG9pbnRzYCBhcmd1bWVudCBieSBkZWZhdWx0LlxuICpcbiAqIC0gMDEgLSBCcmVha3BvaW50IE5leHRcbiAqIC0gMDIgLSBCcmVha3BvaW50IE1pbmltdW1cbiAqIC0gMDMgLSBCcmVha3BvaW50IE1heGltdW1cbiAqIC0gMDQgLSBCcmVha3BvaW50IEluZml4XG4gKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAxIC0gQnJlYWtwb2ludCBOZXh0XG4gIE5hbWUgb2YgdGhlIG5leHQgYnJlYWtwb2ludCwgb3IgbnVsbCBmb3IgdGhlIGxhc3QgYnJlYWtwb2ludC5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMiAtIEJyZWFrcG9pbnQgTWluaW11bVxuICBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDMgLSBCcmVha3BvaW50IE1heGltdW1cbiAgVGhlIG1heGltdW0gdmFsdWUgaXMgcmVkdWNlZCBieSAwLjAycHggdG8gd29yayBhcm91bmQgdGhlIGxpbWl0YXRpb25zIG9mIGBtaW4tYCBhbmQgYG1heC1gIHByZWZpeGVzIGFuZCB2aWV3cG9ydHNcbiAgd2l0aCBmcmFjdGlvbmFsIHdpZHRocy4gU2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9tZWRpYXF1ZXJpZXMtNC8jbXEtbWluLW1heC4gVXNlcyAwLjAycHggcmF0aGVyIHRoYW4gMC4wMXB4IHRvIHdvcmtcbiAgYXJvdW5kIGEgY3VycmVudCByb3VuZGluZyBidWcgaW4gU2FmYXJpLiBTZWUgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE3ODI2MVxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDA0IC0gQnJlYWtwb2ludCBJbmZpeFxuICBSZXR1cm5zIGEgYmxhbmsgc3RyaW5nIGlmIHNtYWxsZXN0IGJyZWFrcG9pbnQsIG90aGVyd2lzZSByZXR1cm5zIHRoZSBuYW1lIHdpdGggYSBkYXNoIGluIGZyb250LiBVc2VmdWwgZm9yIG1ha2luZ1xuICByZXNwb25zaXZlIHV0aWxpdGllcy5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIEZ1bmN0aW9ucyAtIEJyZWFrcG9pbnRzXG4gKiBCcmVha3BvaW50IHZpZXdwb3J0IHNpemVzIGFuZCBtZWRpYSBxdWVyaWVzLiBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksIG9yZGVyIGZyb21cbiAqIHNtYWxsIHRvIGxhcmdlOiAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpLiBUaGUgbWFwIGRlZmluZWQgaW4gdGhlIGAkZ3JpZC1icmVha3BvaW50c2BcbiAqIGdsb2JhbCB2YXJpYWJsZSBpcyB1c2VkIGFzIHRoZSBgJGJyZWFrcG9pbnRzYCBhcmd1bWVudCBieSBkZWZhdWx0LlxuICpcbiAqIC0gMDEgLSBCcmVha3BvaW50IE5leHRcbiAqIC0gMDIgLSBCcmVha3BvaW50IE1pbmltdW1cbiAqIC0gMDMgLSBCcmVha3BvaW50IE1heGltdW1cbiAqIC0gMDQgLSBCcmVha3BvaW50IEluZml4XG4gKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAxIC0gQnJlYWtwb2ludCBOZXh0XG4gIE5hbWUgb2YgdGhlIG5leHQgYnJlYWtwb2ludCwgb3IgbnVsbCBmb3IgdGhlIGxhc3QgYnJlYWtwb2ludC5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMiAtIEJyZWFrcG9pbnQgTWluaW11bVxuICBNaW5pbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBzbWFsbGVzdCAoZmlyc3QpIGJyZWFrcG9pbnQuXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuLyotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qXFxcbiAgMDMgLSBCcmVha3BvaW50IE1heGltdW1cbiAgVGhlIG1heGltdW0gdmFsdWUgaXMgcmVkdWNlZCBieSAwLjAycHggdG8gd29yayBhcm91bmQgdGhlIGxpbWl0YXRpb25zIG9mIGBtaW4tYCBhbmQgYG1heC1gIHByZWZpeGVzIGFuZCB2aWV3cG9ydHNcbiAgd2l0aCBmcmFjdGlvbmFsIHdpZHRocy4gU2VlIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9tZWRpYXF1ZXJpZXMtNC8jbXEtbWluLW1heC4gVXNlcyAwLjAycHggcmF0aGVyIHRoYW4gMC4wMXB4IHRvIHdvcmtcbiAgYXJvdW5kIGEgY3VycmVudCByb3VuZGluZyBidWcgaW4gU2FmYXJpLiBTZWUgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE3ODI2MVxuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDA0IC0gQnJlYWtwb2ludCBJbmZpeFxuICBSZXR1cm5zIGEgYmxhbmsgc3RyaW5nIGlmIHNtYWxsZXN0IGJyZWFrcG9pbnQsIG90aGVyd2lzZSByZXR1cm5zIHRoZSBuYW1lIHdpdGggYSBkYXNoIGluIGZyb250LiBVc2VmdWwgZm9yIG1ha2luZ1xuICByZXNwb25zaXZlIHV0aWxpdGllcy5cblxcKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG4vKipcbiAqIFNldHRpbmdzIC0gQnJlYWtwb2ludHNcbiAqIC0gMDEgLSBNYXBwaW5nXG4gKi9cbi8qLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKlxcXG4gIDAxIC0gTWFwcGluZ1xuXFwqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cbi8qKlxuICogTWl4aW5zIC0gQnJlYWtwb2ludHNcbiAqIC0gMDEgLSBCcmVha3BvaW50c1xuICovXG4vKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSpcXFxuICAwMSAtIEJyZWFrcG9pbnRzXG5cXCotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xuQG1lZGlhIChtYXgtd2lkdGg6IDEwMjMuOThweCkge1xuICAuaGVhZGVyLXNlYXJjaC1mb3JtIHtcbiAgICBtYXJnaW46IDI0cHggMTVweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuaGVhZGVyLXNlYXJjaC1mb3JtICNzZWFyY2gtYXBpLWZvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcbiAgICBnYXA6IDZweDtcbiAgICBoZWlnaHQ6IDU1cHg7XG4gICAgcGFkZGluZzogMTJweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuaGVhZGVyLXNlYXJjaC1mb3JtICNzZWFyY2gtYXBpLWZvcm06Zm9jdXMsIC5oZWFkZXItc2VhcmNoLWZvcm0gI3NlYXJjaC1hcGktZm9ybTpmb2N1cy13aXRoaW4ge1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICNmZmY7XG4gIH1cbiAgLmhlYWRlci1zZWFyY2gtZm9ybSAjc2VhcmNoLWFwaS1mb3JtIC5mb3JtLWFjdGlvbnMge1xuICAgIG1hcmdpbjogMDtcbiAgfVxuICAuaGVhZGVyLXNlYXJjaC1mb3JtICNzZWFyY2gtYXBpLWZvcm0gLmZvcm0tYWN0aW9ucyAuZm9ybS1zdWJtaXQge1xuICAgIC0tc2l6ZTogMjhweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi4vLi4vLi4vaW1hZ2VzL2ljb25zL3VpLWljb24tc2VhcmNoLS13aGl0ZS5zdmcpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBoZWlnaHQ6IHZhcigtLXNpemUpO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRleHQtaW5kZW50OiB2YXIoLS1zaXplKTtcbiAgICB3aWR0aDogdmFyKC0tc2l6ZSk7XG4gIH1cbiAgLmhlYWRlci1zZWFyY2gtZm9ybSAjc2VhcmNoLWFwaS1mb3JtIC5mb3JtLWl0ZW0ge1xuICAgIG1hcmdpbjogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAuaGVhZGVyLXNlYXJjaC1mb3JtICNzZWFyY2gtYXBpLWZvcm0gLmZvcm0taXRlbSBpbnB1dC5mb3JtLXNlYXJjaCB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1zYW5zKTtcbiAgICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNDQlO1xuICB9XG4gIC5oZWFkZXItc2VhcmNoLWZvcm0gI3NlYXJjaC1hcGktZm9ybSAuZm9ybS1pdGVtIGlucHV0LmZvcm0tc2VhcmNoOmZvY3VzIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIG91dGxpbmU6IGF1dG87XG4gICAgb3V0bGluZS1vZmZzZXQ6IDZweDtcbiAgfVxuICAuaGVhZGVyLXNlYXJjaC1mb3JtICNzZWFyY2gtYXBpLWZvcm0gLmZvcm0taXRlbSBpbnB1dC5mb3JtLXNlYXJjaDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICB9XG4gIC5oZWFkZXItc2VhcmNoLWZvcm0gI3NlYXJjaC1hcGktZm9ybSAuZm9ybS1pdGVtIGlucHV0LmZvcm0tc2VhcmNoOjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgLmhlYWRlci1zZWFyY2gtZm9ybSAjc2VhcmNoLWFwaS1mb3JtIC5mb3JtLWl0ZW0gaW5wdXQuZm9ybS1zZWFyY2g6Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOiAxMDI0cHgpIHtcbiAgLmhlYWRlci1zZWFyY2gtZm9ybSB7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tY29sb3Itc3VyZi0tZm9yZXN0KTtcbiAgICBoZWlnaHQ6IDcwcHg7XG4gICAgd2lkdGg6IGF1dG87XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB9XG4gIC5oZWFkZXItc2VhcmNoLWZvcm0gZm9ybSB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiAxMjBweDtcbiAgICB0cmFuc2l0aW9uOiB3aWR0aCAxcyBjdWJpYy1iZXppZXIoMC4xLCAwLjEsIDAuMSwgMSk7XG4gIH1cbiAgLmhlYWRlci1zZWFyY2gtZm9ybTpob3ZlciAuZm9ybS1hY3Rpb25zOmJlZm9yZSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cbiAgLmhlYWRlci1zZWFyY2gtZm9ybSAjc2VhcmNoLWFwaS1mb3JtIC5mb3JtLWl0ZW0gaW5wdXQge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1mb250LWZhbWlseS1zYW5zKTtcbiAgICBmb250LXdlaWdodDogdmFyKC0tZm9udC13ZWlnaHQtcmVndWxhcik7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxNDQlO1xuICB9XG4gIC5oZWFkZXItc2VhcmNoLWZvcm0gI3NlYXJjaC1hcGktZm9ybSAuZm9ybS1pdGVtIGxhYmVsIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgfVxuICAuaGVhZGVyLXNlYXJjaC1mb3JtICNzZWFyY2gtYXBpLWZvcm0gLmZvcm0taXRlbSBpbnB1dC5mb3JtLXNlYXJjaCB7XG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyOiAwO1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjZmZmO1xuICAgIHBhZGRpbmc6IDAuMjVlbSAxLjI1ZW0gMC4yNWVtIDAuNWVtO1xuICAgIGZsZXgtZ3JvdzogMTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBvcGFjaXR5OiAwO1xuICAgIG91dGxpbmU6IDA7XG4gICAgdHJhbnNpdGlvbjogbm9uZTtcbiAgICB6LWluZGV4OiAyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoLi4vLi4vLi4vLi4vaW1hZ2VzL2ljb25zL3VpLWljb24tc2VhcmNoLS13aGl0ZS5zdmcpO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgY2VudGVyO1xuICAgIGJhY2tncm91bmQtc2l6ZTogMjBweDtcbiAgfVxuICAuaGVhZGVyLXNlYXJjaC1mb3JtICNzZWFyY2gtYXBpLWZvcm0gLmZvcm0taXRlbSBpbnB1dC5mb3JtLXNlYXJjaDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICB9XG4gIC5oZWFkZXItc2VhcmNoLWZvcm0gI3NlYXJjaC1hcGktZm9ybSAuZm9ybS1pdGVtIGlucHV0LmZvcm0tc2VhcmNoOjpwbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZm9udC1zdHlsZTogaXRhbGljO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgLmhlYWRlci1zZWFyY2gtZm9ybSAjc2VhcmNoLWFwaS1mb3JtIC5mb3JtLWl0ZW0gaW5wdXQuZm9ybS1zZWFyY2g6Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmhlYWRlci1zZWFyY2gtZm9ybSAjc2VhcmNoLWFwaS1mb3JtIC5mb3JtLWFjdGlvbnMge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgZm9udC1mYW1pbHk6IHZhcigtLWZvbnQtZmFtaWx5LWNvbmRlbnNlZCk7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBmb250LXNpemU6IDIycHg7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGxldHRlci1zcGFjaW5nOiAxLjhweDtcbiAgICBsaW5lLWhlaWdodDogMTQwJTtcbiAgICBtYXJnaW46IDA7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgfVxuICAuaGVhZGVyLXNlYXJjaC1mb3JtICNzZWFyY2gtYXBpLWZvcm0gLmZvcm0tYWN0aW9uczo6YmVmb3JlIHtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGNvbnRlbnQ6IFwiU2VhcmNoXCI7XG4gICAgZGlzcGxheTogLXdlYmtpdC1pbmxpbmUtYm94O1xuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgfVxuICAuaGVhZGVyLXNlYXJjaC1mb3JtICNzZWFyY2gtYXBpLWZvcm0gLmZvcm0tYWN0aW9ucyBpbnB1dC5mb3JtLXN1Ym1pdCB7XG4gICAgLS1zaXplOiAzMXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCguLi8uLi8uLi8uLi9pbWFnZXMvaWNvbnMvdWktaWNvbi1zZWFyY2gtLXdoaXRlLnN2Zyk7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1zaXplOiAyMHB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBoZWlnaHQ6IHZhcigtLXNpemUpO1xuICAgIHBhZGRpbmc6IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRleHQtaW5kZW50OiB2YXIoLS1zaXplKTtcbiAgICB3aWR0aDogdmFyKC0tc2l6ZSk7XG4gIH1cbiAgLmhlYWRlci1zZWFyY2gtZm9ybSAjc2VhcmNoLWFwaS1mb3JtOmZvY3VzLXdpdGhpbiB7XG4gICAgd2lkdGg6IDMwMHB4O1xuICB9XG4gIC5oZWFkZXItc2VhcmNoLWZvcm0gI3NlYXJjaC1hcGktZm9ybTpmb2N1cy13aXRoaW4gaW5wdXQuZm9ybS1zZWFyY2gge1xuICAgIGJveC1zaGFkb3c6IG5vbmU7XG4gICAgb3BhY2l0eTogMTtcbiAgICB6LWluZGV4OiBpbml0aWFsO1xuICAgIGN1cnNvcjogaW5pdGlhbDtcbiAgICBoZWlnaHQ6IDMxcHg7XG4gICAgbWFyZ2luLXRvcDogMTZweDtcbiAgICB0cmFuc2l0aW9uOiBub25lO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG4gIC5oZWFkZXItc2VhcmNoLWZvcm0gI3NlYXJjaC1hcGktZm9ybTpmb2N1cy13aXRoaW4gLmZvcm0tYWN0aW9uczpiZWZvcmUge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLmhlYWRlci1zZWFyY2gtZm9ybSAjc2VhcmNoLWFwaS1mb3JtOmZvY3VzLXdpdGhpbiBpbnB1dC5mb3JtLXN1Ym1pdCB7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBib3JkZXI6IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICB9XG4gIC5oZWFkZXItc2VhcmNoLWZvcm0gI3NlYXJjaC1hcGktZm9ybTpmb2N1cy13aXRoaW4gaW5wdXQuZm9ybS1zdWJtaXQ6aG92ZXIge1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxufSJdfQ== */
