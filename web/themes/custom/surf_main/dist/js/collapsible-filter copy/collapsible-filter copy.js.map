{"version":3,"file":"libraries/components/collapsible-filter/collapsible-filter copy.js","mappings":";;AAAAA,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;AACpC,CAAC,UAACC,MAAM,EAAEC,IAAI,EAAK;EACjBD,MAAM,CAACE,SAAS,CAACC,uBAAuB,GAAG;IACzCC,MAAM,WAAAA,OAACC,OAAO,EAAEC,SAAS,EAAE;MAEzBL,IAAI,CAAC,oBAAoB,EAAE,cAAc,EAAEI,OAAO,CAAC,CAACE,OAAO,CAAC,UAACC,wBAAwB,EAAK;QACxFV,OAAO,CAACC,GAAG,CAAC;UAACS,wBAAwB,EAAxBA;QAAwB,CAAC,CAAC;QAEvC,SAASC,0BAA0BA,CAAA,EAAG;UACpC,IAAIC,SAAS,GAAGF,wBAAwB;UACxCE,SAAS,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,CAAC;QACpC;QAEA,SAASC,eAAeA,CAAA,EAAG;UACzBf,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;UAC9B,IAAIW,SAAS,GAAGF,wBAAwB;UACxC,IAAIM,YAAY,GAAGT,OAAO,CAACU,cAAc,CAAC,cAAc,CAAC;UACzD,IAAIC,QAAQ,GAAGC,MAAM,CAACC,UAAU,IAAI,GAAG,CAAC,CAAC;;UAEzC,IAAIF,QAAQ,EAAE;YACZF,YAAY,CAACK,gBAAgB,CAAC,OAAO,EAAEV,0BAA0B,CAAC;YAClEC,SAAS,CAACC,SAAS,CAACS,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;UACnC,CAAC,MAAM;YACLN,YAAY,CAACO,mBAAmB,CAAC,OAAO,EAAEZ,0BAA0B,CAAC;YACrEC,SAAS,CAACC,SAAS,CAACW,MAAM,CAAC,MAAM,CAAC;UACpC;QACF;QAEAL,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEN,eAAe,CAAC;QAClDA,eAAe,CAAC,CAAC,CAAC,CAAC;;QAEnB;;QAEA;;QAEA;;QAEA;QACA;QACA;QACA;;QAEA;QACA;;QAGA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;MAEF,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC,EAAEb,MAAM,EAAEC,IAAI,CAAC,C","sources":["webpack://surf_main/./libraries/components/collapsible-filter/collapsible-filter copy.js"],"sourcesContent":["console.log('collapsible-filter.js');\n((Drupal, once) => {\n  Drupal.behaviors.surf_collapsible_filter = {\n    attach(context, _settings) {\n\n      once('collapsible-filter', '.collapsible', context).forEach((collapsibleFilterElement) => {\n        console.log({collapsibleFilterElement})\n\n        function toggleCollapsibleContainer() {\n          let container = collapsibleFilterElement;\n          container.classList.toggle('open');\n        }\n\n        function checkWindowSize() {\n          console.log('checkWindowSize')\n          let container = collapsibleFilterElement;\n          let toggleButton = context.getElementById('toggleButton');\n          let isMobile = window.innerWidth <= 768; // Adjust the breakpoint according to your needs\n\n          if (isMobile) {\n            toggleButton.addEventListener('click', toggleCollapsibleContainer);\n            container.classList.add('open'); // Expand container by default on mobile\n          } else {\n            toggleButton.removeEventListener('click', toggleCollapsibleContainer);\n            container.classList.remove('open');\n          }\n        }\n\n        window.addEventListener('resize', checkWindowSize);\n        checkWindowSize(); // Initial check on page load\n\n        // const trigger = standardsElement.querySelector('.c-teaser__trigger');\n\n        // const standardsCount = standardsElement.querySelector('.c-teaser__trigger').getAttribute('data-standards-count');\n\n        // let tags = standardsElement.querySelectorAll('.c-teaser__tag.standards');\n\n        // // Initially hide the tags\n        // tags.forEach(function(tag) {\n        //   tag.classList.add('hidden');\n        // });\n\n        // // Initially hide the unordered list\n        // standardsElement.classList.add('hidden');\n\n\n        // trigger.addEventListener('click', function() {\n        //   // Toggle the visibility of the tags\n        //   tags.forEach(function(tag) {\n        //     tag.classList.toggle('hidden');\n        //   });\n\n        //   let expanded = trigger.getAttribute('aria-expanded') === 'true' || false;\n        //   trigger.setAttribute('aria-expanded', !expanded);\n\n        //   // Change the trigger text based on the visibility state\n        //   if (expanded) {\n        //     trigger.textContent = 'View Standards' + ' (' + standardsCount + ')';\n        //   } else {\n        //     trigger.textContent = 'Hide Standards' + ' (' + standardsCount + ')';\n        //   }\n\n        // });\n\n      });\n    }\n  }\n})(Drupal, once);\n"],"names":["console","log","Drupal","once","behaviors","surf_collapsible_filter","attach","context","_settings","forEach","collapsibleFilterElement","toggleCollapsibleContainer","container","classList","toggle","checkWindowSize","toggleButton","getElementById","isMobile","window","innerWidth","addEventListener","add","removeEventListener","remove"],"sourceRoot":""}