//
// Mixins - Media
// Use these mixins when needing to easily define media styles, such as sizing, positioning, etc.
//
// - 01 - Background Image
// - 02 - Responsive IFrame
//


//------------------------------------
//  01 - Background Image
//  Instead of using an inline style to define a background image, and needing to set an HTML image as a background
//  image, use this mixin.
//  - @param $position: Alignment of the image within it's frame [center, top, bottom] (default = center)
//  - @example = @include background-image(center);
//------------------------------------

@mixin background-image($position: center) {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: $position;

  // IE11 Adjustments
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    max-width: inherit;
    min-width: 100%;
    min-height: 100%;
    margin: auto;
    position: absolute;

    @if($position == center) {
      top: 50%;
      transform: translateY(-50%);
    } @else if($position == top) {
      top: 0;
    } @else if($position == bottom) {
      bottom: 0;
    }
  }
}




//------------------------------------
//  02 - Responsive IFrame
//  When needing an IFrame to be responsive to it's container, and ultimately for mobile devices, use this mixin. This
//  mixin needs to be applied to the parent HTML element of the IFrame.
//  - @param $width: Sizing width to determine the ratio of sizing needed for the responsive IFrame. [defaults to 16]
//  - @param $height: Sizing height to determine the ratio of sizing needed for the responsive IFrame. [defaults to 9]
//  - @example = @include responsive-iframe(16, 9);
//------------------------------------

@mixin responsive-iframe($width: 16, $height: 9) {
  overflow: hidden;
  position: relative;
  padding-top: calc(#{$height} / #{$width} * 100%);

  iframe {
    border: 0;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }
}
